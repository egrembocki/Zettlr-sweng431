{"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/modules/markdown-editor/table-editor/build-grid.ts":{"path":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/modules/markdown-editor/table-editor/build-grid.ts","statementMap":{"0":{"start":{"line":16,"column":22},"end":{"line":18,"column":1}},"1":{"start":{"line":17,"column":4},"end":{"line":17,"column":62}},"2":{"start":{"line":19,"column":0},"end":{"line":19,"column":62}},"3":{"start":{"line":20,"column":0},"end":{"line":20,"column":33}},"4":{"start":{"line":21,"column":30},"end":{"line":21,"column":79}},"5":{"start":{"line":31,"column":4},"end":{"line":31,"column":67}},"6":{"start":{"line":31,"column":42},"end":{"line":31,"column":64}},"7":{"start":{"line":45,"column":20},"end":{"line":45,"column":23}},"8":{"start":{"line":46,"column":4},"end":{"line":59,"column":5}},"9":{"start":{"line":46,"column":19},"end":{"line":46,"column":20}},"10":{"start":{"line":48,"column":8},"end":{"line":58,"column":9}},"11":{"start":{"line":50,"column":16},"end":{"line":50,"column":68}},"12":{"start":{"line":51,"column":16},"end":{"line":51,"column":22}},"13":{"start":{"line":53,"column":16},"end":{"line":53,"column":71}},"14":{"start":{"line":54,"column":16},"end":{"line":54,"column":22}},"15":{"start":{"line":56,"column":16},"end":{"line":56,"column":69}},"16":{"start":{"line":57,"column":16},"end":{"line":57,"column":22}},"17":{"start":{"line":60,"column":4},"end":{"line":60,"column":21}},"18":{"start":{"line":64,"column":21},"end":{"line":64,"column":60}},"19":{"start":{"line":65,"column":20},"end":{"line":65,"column":30}},"20":{"start":{"line":66,"column":20},"end":{"line":66,"column":35}},"21":{"start":{"line":68,"column":16},"end":{"line":68,"column":80}},"22":{"start":{"line":68,"column":43},"end":{"line":68,"column":63}},"23":{"start":{"line":69,"column":19},"end":{"line":69,"column":84}},"24":{"start":{"line":71,"column":17},"end":{"line":71,"column":19}},"25":{"start":{"line":72,"column":4},"end":{"line":78,"column":5}},"26":{"start":{"line":73,"column":8},"end":{"line":73,"column":23}},"27":{"start":{"line":77,"column":8},"end":{"line":77,"column":26}},"28":{"start":{"line":80,"column":4},"end":{"line":123,"column":5}},"29":{"start":{"line":80,"column":19},"end":{"line":80,"column":20}},"30":{"start":{"line":82,"column":27},"end":{"line":82,"column":52}},"31":{"start":{"line":86,"column":25},"end":{"line":86,"column":27}},"32":{"start":{"line":87,"column":8},"end":{"line":93,"column":9}},"33":{"start":{"line":87,"column":21},"end":{"line":87,"column":22}},"34":{"start":{"line":88,"column":29},"end":{"line":88,"column":31}},"35":{"start":{"line":89,"column":12},"end":{"line":91,"column":13}},"36":{"start":{"line":89,"column":25},"end":{"line":89,"column":26}},"37":{"start":{"line":90,"column":16},"end":{"line":90,"column":34}},"38":{"start":{"line":92,"column":12},"end":{"line":92,"column":36}},"39":{"start":{"line":95,"column":8},"end":{"line":109,"column":9}},"40":{"start":{"line":95,"column":23},"end":{"line":95,"column":24}},"41":{"start":{"line":98,"column":28},"end":{"line":98,"column":53}},"42":{"start":{"line":99,"column":12},"end":{"line":101,"column":13}},"43":{"start":{"line":100,"column":16},"end":{"line":100,"column":35}},"44":{"start":{"line":103,"column":12},"end":{"line":103,"column":80}},"45":{"start":{"line":103,"column":43},"end":{"line":103,"column":78}},"46":{"start":{"line":106,"column":12},"end":{"line":108,"column":13}},"47":{"start":{"line":106,"column":25},"end":{"line":106,"column":26}},"48":{"start":{"line":107,"column":16},"end":{"line":107,"column":48}},"49":{"start":{"line":112,"column":8},"end":{"line":114,"column":9}},"50":{"start":{"line":113,"column":12},"end":{"line":113,"column":52}},"51":{"start":{"line":116,"column":8},"end":{"line":122,"column":9}},"52":{"start":{"line":117,"column":12},"end":{"line":117,"column":30}},"53":{"start":{"line":121,"column":12},"end":{"line":121,"column":27}},"54":{"start":{"line":124,"column":4},"end":{"line":124,"column":27}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":16,"column":56},"end":{"line":16,"column":57}},"loc":{"start":{"line":16,"column":71},"end":{"line":18,"column":1}},"line":16},"1":{"name":"calcRawCellRows","decl":{"start":{"line":30,"column":9},"end":{"line":30,"column":24}},"loc":{"start":{"line":30,"column":34},"end":{"line":32,"column":1}},"line":30},"2":{"name":"(anonymous_2)","decl":{"start":{"line":31,"column":35},"end":{"line":31,"column":36}},"loc":{"start":{"line":31,"column":42},"end":{"line":31,"column":64}},"line":31},"3":{"name":"buildGridHeaderRow","decl":{"start":{"line":44,"column":9},"end":{"line":44,"column":27}},"loc":{"start":{"line":44,"column":60},"end":{"line":61,"column":1}},"line":44},"4":{"name":"buildGridTable","decl":{"start":{"line":62,"column":9},"end":{"line":62,"column":23}},"loc":{"start":{"line":62,"column":61},"end":{"line":125,"column":1}},"line":62},"5":{"name":"(anonymous_5)","decl":{"start":{"line":68,"column":35},"end":{"line":68,"column":36}},"loc":{"start":{"line":68,"column":43},"end":{"line":68,"column":63}},"line":68},"6":{"name":"(anonymous_6)","decl":{"start":{"line":103,"column":38},"end":{"line":103,"column":39}},"loc":{"start":{"line":103,"column":43},"end":{"line":103,"column":78}},"line":103}},"branchMap":{"0":{"loc":{"start":{"line":16,"column":22},"end":{"line":18,"column":1}},"type":"binary-expr","locations":[{"start":{"line":16,"column":23},"end":{"line":16,"column":27}},{"start":{"line":16,"column":31},"end":{"line":16,"column":51}},{"start":{"line":16,"column":56},"end":{"line":18,"column":1}}],"line":16},"1":{"loc":{"start":{"line":17,"column":11},"end":{"line":17,"column":61}},"type":"cond-expr","locations":[{"start":{"line":17,"column":37},"end":{"line":17,"column":40}},{"start":{"line":17,"column":43},"end":{"line":17,"column":61}}],"line":17},"2":{"loc":{"start":{"line":17,"column":12},"end":{"line":17,"column":33}},"type":"binary-expr","locations":[{"start":{"line":17,"column":12},"end":{"line":17,"column":15}},{"start":{"line":17,"column":19},"end":{"line":17,"column":33}}],"line":17},"3":{"loc":{"start":{"line":48,"column":8},"end":{"line":58,"column":9}},"type":"switch","locations":[{"start":{"line":49,"column":12},"end":{"line":51,"column":22}},{"start":{"line":52,"column":12},"end":{"line":54,"column":22}},{"start":{"line":55,"column":12},"end":{"line":57,"column":22}}],"line":48},"4":{"loc":{"start":{"line":62,"column":43},"end":{"line":62,"column":59}},"type":"default-arg","locations":[{"start":{"line":62,"column":55},"end":{"line":62,"column":59}}],"line":62},"5":{"loc":{"start":{"line":69,"column":62},"end":{"line":69,"column":83}},"type":"cond-expr","locations":[{"start":{"line":69,"column":74},"end":{"line":69,"column":77}},{"start":{"line":69,"column":80},"end":{"line":69,"column":83}}],"line":69},"6":{"loc":{"start":{"line":72,"column":4},"end":{"line":78,"column":5}},"type":"if","locations":[{"start":{"line":72,"column":4},"end":{"line":78,"column":5}},{"start":{"line":75,"column":9},"end":{"line":78,"column":5}}],"line":72},"7":{"loc":{"start":{"line":116,"column":8},"end":{"line":122,"column":9}},"type":"if","locations":[{"start":{"line":116,"column":8},"end":{"line":122,"column":9}},{"start":{"line":119,"column":13},"end":{"line":122,"column":9}}],"line":116},"8":{"loc":{"start":{"line":116,"column":12},"end":{"line":116,"column":34}},"type":"binary-expr","locations":[{"start":{"line":116,"column":12},"end":{"line":116,"column":21}},{"start":{"line":116,"column":25},"end":{"line":116,"column":34}}],"line":116}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":6,"6":18,"7":3,"8":3,"9":3,"10":9,"11":5,"12":5,"13":2,"14":2,"15":2,"16":2,"17":3,"18":3,"19":3,"20":3,"21":3,"22":9,"23":3,"24":3,"25":3,"26":2,"27":1,"28":3,"29":3,"30":6,"31":6,"32":6,"33":6,"34":8,"35":8,"36":8,"37":24,"38":8,"39":6,"40":6,"41":18,"42":18,"43":4,"44":18,"45":24,"46":18,"47":18,"48":24,"49":6,"50":8,"51":6,"52":2,"53":4,"54":3},"f":{"0":1,"1":6,"2":18,"3":3,"4":3,"5":9,"6":24},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1],"3":[5,2,2],"4":[0],"5":[2,1],"6":[2,1],"7":[2,4],"8":[6,3]},"inputSourceMap":{"version":3,"file":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/modules/markdown-editor/table-editor/build-grid.ts","sources":["/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/modules/markdown-editor/table-editor/build-grid.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @ignore\n * BEGIN HEADER\n *\n * Contains:        TableHelper utility function\n * CVM-Role:        Utility\n * Maintainer:      Hendrik Erz\n * License:         GNU GPL v3\n *\n * Description:     Transforms an AST to a grid table.\n *                  Cf. https://pandoc.org/MANUAL.html#tables\n *\n * END HEADER\n */\n\nimport calculateColSizes from './calculate-col-sizes'\nimport type { ColAlignment } from './types'\n\n/**\n * Takes a set of AST columns and returns the number of lines they will span if\n * built as a string table\n *\n * @param   {string[]}  columns  The column contents\n *\n * @return  {number}             The amount of raw Markdown lines required to render\n */\nfunction calcRawCellRows (columns: string[]): number {\n  return Math.max(...columns.map(col => col.split('\\n').length))\n}\n\n/**\n * Builds a header row for a grid table, based on the column sizes and the\n * alignment. As a symbol, pass in '=' if the grid table has a header row, or\n * '-' if it does not, and place this row accordingly.\n *\n * @param   {number[]}        colSizes      The column sizes of the table\n * @param   {ColAlignment[]}  colAlignment  The alignment specs\n * @param   {'='|'-'}         symbol        The symbol (depends on header row)\n *\n * @return  {string}                        The built grid header row\n */\nfunction buildGridHeaderRow (colSizes: number[], colAlignment: ColAlignment[], symbol: '='|'-'): string {\n  let headerRow = '+'\n  for (let col = 0; col < colSizes.length; col++) {\n    // Respect the spaces left and right and account for alignment\n    switch (colAlignment[col]) {\n      case 'left':\n        headerRow += symbol.repeat(colSizes[col] + 2) + '+'\n        break\n      case 'center':\n        headerRow += ':' + symbol.repeat(colSizes[col]) + ':+'\n        break\n      case 'right':\n        headerRow += symbol.repeat(colSizes[col] + 1) + ':+'\n        break\n    }\n  }\n  return headerRow\n}\n\nexport default function buildGridTable (ast: string[][], colAlignment: ColAlignment[], hasHeader: boolean = true): string {\n  // Setup: colSizes is the maximum length of any cell inside the given column\n  const colSizes = calculateColSizes(ast)\n  const numRows = ast.length\n  const numCols = colSizes.length\n\n  // This is a template separator row, added in between each row\n  const sep = '+' + colSizes.map(elem => '-'.repeat(elem + 2)).join('+') + '+'\n  const header = buildGridHeaderRow(colSizes, colAlignment, hasHeader ? '=' : '-')\n\n  // Begin the table with a separator row\n  const rows: string[] = []\n  if (hasHeader) {\n    rows.push(sep)\n  } else {\n    // Custom header row (similar to below, but with '-' instead of '=')\n    rows.push(header)\n  }\n\n  // Now iterate over every row in the table\n  for (let row = 0; row < numRows; row++) {\n    // A single row in the AST can span multiple actual rows, delimited by \\n\n    const actualRows = calcRawCellRows(ast[row])\n\n    // This is an inner table used to prepare the columns inside this row for\n    // stringification. We need to pre-fill it as we have to pivot the cells\n    // from col/row to row/col ordering.\n    const innerAST: string[][] = []\n    for (let i = 0; i < actualRows; i++) {\n      const innerRow = []\n      for (let j = 0; j < numCols; j++) {\n        innerRow.push('') // Arbitrary, will be overwritten below\n      }\n      innerAST.push(innerRow)\n    }\n\n    // After the preparation, iterate over the columns inside the row\n    for (let col = 0; col < numCols; col++) {\n      // Split into the individual \"actual\" rows of the cell, and pad to the\n      // full length\n      let splitCell = ast[row][col].split('\\n')\n      while (splitCell.length < actualRows) {\n        splitCell.push('')\n      }\n\n      // Now, pad each \"split\" cell accordingly\n      splitCell = splitCell.map(c => ' ' + c.padEnd(colSizes[col]) + ' ')\n\n      // Now add all parts of the given cell to the inner table. Here, we pivot\n      // the data from [col][row] to [row][col]\n      for (let i = 0; i < actualRows; i++) {\n        innerAST[i][col] = splitCell[i]\n      }\n    }\n\n    // At this point we have one or more actual rows we have to build. The\n    // contents are already correctly padded and stored as [row][col] arrays\n    for (const rawRow of innerAST) {\n      rows.push('|' + rawRow.join('|') + '|')\n    }\n\n    // After the first (logical) row we need a header row, which we build here.\n    if (row === 0 && hasHeader) {\n      rows.push(header)\n    } else {\n      // All other lines are followed by a separator.\n      rows.push(sep)\n    }\n  }\n\n  return rows.join('\\n')\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"d06f77bea982b2e5769baadf1d9a4dbef8483011","contentHash":"24bb25a12ee90672e921df923f3b03f52875ffa5379bb8861a464b67179fa200"},"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/modules/markdown-editor/table-editor/calculate-col-sizes.ts":{"path":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/modules/markdown-editor/table-editor/calculate-col-sizes.ts","statementMap":{"0":{"start":{"line":16,"column":0},"end":{"line":16,"column":62}},"1":{"start":{"line":17,"column":0},"end":{"line":17,"column":36}},"2":{"start":{"line":26,"column":18},"end":{"line":26,"column":20}},"3":{"start":{"line":27,"column":4},"end":{"line":41,"column":5}},"4":{"start":{"line":27,"column":19},"end":{"line":27,"column":20}},"5":{"start":{"line":28,"column":22},"end":{"line":28,"column":23}},"6":{"start":{"line":29,"column":8},"end":{"line":39,"column":9}},"7":{"start":{"line":29,"column":23},"end":{"line":29,"column":24}},"8":{"start":{"line":30,"column":25},"end":{"line":30,"column":38}},"9":{"start":{"line":31,"column":29},"end":{"line":31,"column":40}},"10":{"start":{"line":32,"column":12},"end":{"line":35,"column":13}},"11":{"start":{"line":34,"column":16},"end":{"line":34,"column":78}},"12":{"start":{"line":34,"column":67},"end":{"line":34,"column":75}},"13":{"start":{"line":36,"column":12},"end":{"line":38,"column":13}},"14":{"start":{"line":37,"column":16},"end":{"line":37,"column":37}},"15":{"start":{"line":40,"column":8},"end":{"line":40,"column":28}},"16":{"start":{"line":42,"column":4},"end":{"line":42,"column":17}}},"fnMap":{"0":{"name":"calculateColSizes","decl":{"start":{"line":25,"column":9},"end":{"line":25,"column":26}},"loc":{"start":{"line":25,"column":32},"end":{"line":43,"column":1}},"line":25},"1":{"name":"(anonymous_1)","decl":{"start":{"line":34,"column":62},"end":{"line":34,"column":63}},"loc":{"start":{"line":34,"column":67},"end":{"line":34,"column":75}},"line":34}},"branchMap":{"0":{"loc":{"start":{"line":32,"column":12},"end":{"line":35,"column":13}},"type":"if","locations":[{"start":{"line":32,"column":12},"end":{"line":35,"column":13}},{"start":{},"end":{}}],"line":32},"1":{"loc":{"start":{"line":36,"column":12},"end":{"line":38,"column":13}},"type":"if","locations":[{"start":{"line":36,"column":12},"end":{"line":38,"column":13}},{"start":{},"end":{}}],"line":36}},"s":{"0":1,"1":1,"2":6,"3":6,"4":6,"5":18,"6":18,"7":18,"8":40,"9":40,"10":40,"11":2,"12":4,"13":40,"14":18,"15":18,"16":6},"f":{"0":6,"1":4},"b":{"0":[2,38],"1":[18,22]},"inputSourceMap":{"version":3,"file":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/modules/markdown-editor/table-editor/calculate-col-sizes.ts","sources":["/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/modules/markdown-editor/table-editor/calculate-col-sizes.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;EAaE;;AASF,oCAmBC;AA1BD;;;;;;GAMG;AACH,SAAwB,iBAAiB,CAAE,GAAe;IACxD,MAAM,KAAK,GAAG,EAAE,CAAA;IAChB,KAAK,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE,CAAC;QAC7C,IAAI,OAAO,GAAG,CAAC,CAAA;QACf,KAAK,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,GAAG,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE,CAAC;YAC1C,MAAM,IAAI,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAA;YAC1B,IAAI,UAAU,GAAG,IAAI,CAAC,MAAM,CAAA;YAC5B,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC;gBACxB,6DAA6D;gBAC7D,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAA;YAC/D,CAAC;YAED,IAAI,UAAU,GAAG,OAAO,EAAE,CAAC;gBACzB,OAAO,GAAG,UAAU,CAAA;YACtB,CAAC;QACH,CAAC;QACD,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;IACrB,CAAC;IACD,OAAO,KAAK,CAAA;AACd,CAAC","sourcesContent":["/**\n* @ignore\n* BEGIN HEADER\n*\n* Contains:        Utility function\n* CVM-Role:        Utility\n* Maintainer:      Hendrik Erz\n* License:         GNU GPL v3\n*\n* Description:     This function takes a table AST and calculates, for each\n*                  column, the maximum amount of characters.\n*\n* END HEADER\n*/\n\n/**\n * Calculates the maximum size (characters) of each column of a table AST\n *\n * @param   {string[][]}  ast  The AST\n *\n * @return  {number[]}       The maximum sizes for all columns\n */\nexport default function calculateColSizes (ast: string[][]): number[] {\n  const sizes = []\n  for (let col = 0; col < ast[0].length; col++) {\n    let colSize = 0\n    for (let row = 0; row < ast.length; row++) {\n      const cell = ast[row][col]\n      let cellLength = cell.length\n      if (cell.includes('\\n')) {\n        // Multi-line cell -> take the longest of the containing rows\n        cellLength = Math.max(...cell.split('\\n').map(x => x.length))\n      }\n\n      if (cellLength > colSize) {\n        colSize = cellLength\n      }\n    }\n    sizes.push(colSize)\n  }\n  return sizes\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"f8a9cd806fa7ad0f62d670626261b49cf68e21ad","contentHash":"207db0d3e8d2a91923a3a8f22f083272581250a71ab2a1f2630bcf9ac68c7c55"},"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/modules/markdown-editor/table-editor/build-pipe.ts":{"path":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/modules/markdown-editor/table-editor/build-pipe.ts","statementMap":{"0":{"start":{"line":18,"column":22},"end":{"line":20,"column":1}},"1":{"start":{"line":19,"column":4},"end":{"line":19,"column":62}},"2":{"start":{"line":21,"column":0},"end":{"line":21,"column":62}},"3":{"start":{"line":22,"column":0},"end":{"line":22,"column":33}},"4":{"start":{"line":23,"column":30},"end":{"line":23,"column":79}},"5":{"start":{"line":25,"column":4},"end":{"line":27,"column":5}},"6":{"start":{"line":26,"column":8},"end":{"line":26,"column":81}},"7":{"start":{"line":29,"column":21},"end":{"line":29,"column":60}},"8":{"start":{"line":31,"column":17},"end":{"line":41,"column":6}},"9":{"start":{"line":32,"column":28},"end":{"line":39,"column":22}},"10":{"start":{"line":33,"column":12},"end":{"line":38,"column":13}},"11":{"start":{"line":34,"column":16},"end":{"line":34,"column":56}},"12":{"start":{"line":37,"column":16},"end":{"line":37,"column":54}},"13":{"start":{"line":40,"column":8},"end":{"line":40,"column":36}},"14":{"start":{"line":43,"column":30},"end":{"line":53,"column":16}},"15":{"start":{"line":44,"column":8},"end":{"line":52,"column":9}},"16":{"start":{"line":45,"column":12},"end":{"line":45,"column":40}},"17":{"start":{"line":47,"column":13},"end":{"line":52,"column":9}},"18":{"start":{"line":48,"column":12},"end":{"line":48,"column":48}},"19":{"start":{"line":51,"column":12},"end":{"line":51,"column":46}},"20":{"start":{"line":54,"column":22},"end":{"line":54,"column":46}},"21":{"start":{"line":55,"column":4},"end":{"line":55,"column":33}},"22":{"start":{"line":56,"column":4},"end":{"line":56,"column":27}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":18,"column":56},"end":{"line":18,"column":57}},"loc":{"start":{"line":18,"column":71},"end":{"line":20,"column":1}},"line":18},"1":{"name":"buildPipeTable","decl":{"start":{"line":24,"column":9},"end":{"line":24,"column":23}},"loc":{"start":{"line":24,"column":43},"end":{"line":57,"column":1}},"line":24},"2":{"name":"(anonymous_2)","decl":{"start":{"line":31,"column":25},"end":{"line":31,"column":26}},"loc":{"start":{"line":31,"column":32},"end":{"line":41,"column":5}},"line":31},"3":{"name":"(anonymous_3)","decl":{"start":{"line":32,"column":36},"end":{"line":32,"column":37}},"loc":{"start":{"line":32,"column":50},"end":{"line":39,"column":9}},"line":32},"4":{"name":"(anonymous_4)","decl":{"start":{"line":43,"column":43},"end":{"line":43,"column":44}},"loc":{"start":{"line":43,"column":58},"end":{"line":53,"column":5}},"line":43}},"branchMap":{"0":{"loc":{"start":{"line":18,"column":22},"end":{"line":20,"column":1}},"type":"binary-expr","locations":[{"start":{"line":18,"column":23},"end":{"line":18,"column":27}},{"start":{"line":18,"column":31},"end":{"line":18,"column":51}},{"start":{"line":18,"column":56},"end":{"line":20,"column":1}}],"line":18},"1":{"loc":{"start":{"line":19,"column":11},"end":{"line":19,"column":61}},"type":"cond-expr","locations":[{"start":{"line":19,"column":37},"end":{"line":19,"column":40}},{"start":{"line":19,"column":43},"end":{"line":19,"column":61}}],"line":19},"2":{"loc":{"start":{"line":19,"column":12},"end":{"line":19,"column":33}},"type":"binary-expr","locations":[{"start":{"line":19,"column":12},"end":{"line":19,"column":15}},{"start":{"line":19,"column":19},"end":{"line":19,"column":33}}],"line":19},"3":{"loc":{"start":{"line":25,"column":4},"end":{"line":27,"column":5}},"type":"if","locations":[{"start":{"line":25,"column":4},"end":{"line":27,"column":5}},{"start":{},"end":{}}],"line":25},"4":{"loc":{"start":{"line":33,"column":12},"end":{"line":38,"column":13}},"type":"if","locations":[{"start":{"line":33,"column":12},"end":{"line":38,"column":13}},{"start":{"line":36,"column":17},"end":{"line":38,"column":13}}],"line":33},"5":{"loc":{"start":{"line":44,"column":8},"end":{"line":52,"column":9}},"type":"if","locations":[{"start":{"line":44,"column":8},"end":{"line":52,"column":9}},{"start":{"line":47,"column":13},"end":{"line":52,"column":9}}],"line":44},"6":{"loc":{"start":{"line":47,"column":13},"end":{"line":52,"column":9}},"type":"if","locations":[{"start":{"line":47,"column":13},"end":{"line":52,"column":9}},{"start":{"line":50,"column":13},"end":{"line":52,"column":9}}],"line":47}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":3,"6":0,"7":3,"8":3,"9":7,"10":22,"11":2,"12":20,"13":7,"14":3,"15":9,"16":7,"17":2,"18":1,"19":1,"20":3,"21":3,"22":3},"f":{"0":1,"1":3,"2":7,"3":22,"4":9},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1],"3":[0,3],"4":[2,20],"5":[7,2],"6":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/modules/markdown-editor/table-editor/build-pipe.ts","sources":["/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/modules/markdown-editor/table-editor/build-pipe.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;;GAeG;;;;;AAKH,iCAmCC;AAtCD,gFAAqD;AAGrD,SAAwB,cAAc,CAAE,GAAe,EAAE,YAA4B;IACnF,IAAI,GAAG,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;QACnB,MAAM,IAAI,KAAK,CAAC,uDAAuD,CAAC,CAAA;IAC1E,CAAC;IAED,oCAAoC;IACpC,MAAM,QAAQ,GAAG,IAAA,6BAAiB,EAAC,GAAG,CAAC,CAAA;IAEvC,qDAAqD;IACrD,MAAM,IAAI,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;QACzB,MAAM,WAAW,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE;YACvC,IAAI,YAAY,CAAC,GAAG,CAAC,KAAK,OAAO,EAAE,CAAC;gBAClC,OAAO,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,CAAA;YACzC,CAAC;iBAAM,CAAC;gBACN,OAAO,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,CAAA;YACvC,CAAC;QACH,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;QACd,OAAO,KAAK,WAAW,IAAI,CAAA;IAC7B,CAAC,CAAC,CAAA;IAEF,qDAAqD;IACrD,MAAM,iBAAiB,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,GAAG,EAAE,EAAE;QACnD,IAAI,YAAY,CAAC,GAAG,CAAC,KAAK,MAAM,EAAE,CAAC;YACjC,OAAO,GAAG,CAAC,MAAM,CAAC,IAAI,GAAG,CAAC,CAAC,CAAA;QAC7B,CAAC;aAAM,IAAI,YAAY,CAAC,GAAG,CAAC,KAAK,QAAQ,EAAE,CAAC;YAC1C,OAAO,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,GAAG,CAAA;QACrC,CAAC;aAAM,CAAC;YACN,OAAO,GAAG,CAAC,MAAM,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,GAAG,CAAA;QACnC,CAAC;IACH,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;IAEZ,MAAM,SAAS,GAAG,IAAI,iBAAiB,GAAG,CAAA;IAC1C,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,SAAS,CAAC,CAAA;IAE5B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;AACxB,CAAC","sourcesContent":["/**\n * @ignore\n * BEGIN HEADER\n *\n * Contains:        TableHelper utility function\n * CVM-Role:        Utility\n * Maintainer:      Hendrik Erz\n * License:         GNU GPL v3\n *\n * Description:     This parser transforms pipe tables as specified\n *                  in the Pandoc manual into an AST and returns both\n *                  that and the column alignments.\n *                  Cf. https://pandoc.org/MANUAL.html#tables\n *\n * END HEADER\n */\n\nimport calculateColSizes from './calculate-col-sizes'\nimport type { ColAlignment } from './types'\n\nexport default function buildPipeTable (ast: string[][], colAlignment: ColAlignment[]): string {\n  if (ast.length < 2) {\n    throw new Error('Cannot build pipe table: Must have at least two rows.')\n  }\n\n  // First, calculate the column sizes\n  const colSizes = calculateColSizes(ast)\n\n  // Then, build the table in a quick MapReduce fashion\n  const rows = ast.map(row => {\n    const rowContents = row.map((col, idx) => {\n      if (colAlignment[idx] === 'right') {\n        return col.padStart(colSizes[idx], ' ')\n      } else {\n        return col.padEnd(colSizes[idx], ' ')\n      }\n    }).join(' | ')\n    return `| ${rowContents} |`\n  })\n\n  // Finally, insert the required header row at index 2\n  const headerRowContents = colSizes.map((size, idx) => {\n    if (colAlignment[idx] === 'left') {\n      return '-'.repeat(size + 2)\n    } else if (colAlignment[idx] === 'center') {\n      return ':' + '-'.repeat(size) + ':'\n    } else {\n      return '-'.repeat(size + 1) + ':'\n    }\n  }).join('|')\n\n  const headerRow = `|${headerRowContents}|`\n  rows.splice(1, 0, headerRow)\n\n  return rows.join('\\n')\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"5214e6dd37f2ce0940d8bddc37759d982ac4a10a","contentHash":"47d9f2aac209b44d0952d662fffc0ed9a769db9baa86fd9cd4864ffb4ca7225c"},"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/util/compile-search-terms.ts":{"path":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/util/compile-search-terms.ts","statementMap":{"0":{"start":{"line":19,"column":0},"end":{"line":19,"column":62}},"1":{"start":{"line":20,"column":0},"end":{"line":20,"column":37}},"2":{"start":{"line":23,"column":20},"end":{"line":23,"column":22}},"3":{"start":{"line":24,"column":18},"end":{"line":24,"column":20}},"4":{"start":{"line":25,"column":19},"end":{"line":25,"column":24}},"5":{"start":{"line":26,"column":19},"end":{"line":26,"column":24}},"6":{"start":{"line":27,"column":4},"end":{"line":77,"column":5}},"7":{"start":{"line":27,"column":17},"end":{"line":27,"column":18}},"8":{"start":{"line":28,"column":18},"end":{"line":28,"column":32}},"9":{"start":{"line":29,"column":8},"end":{"line":75,"column":9}},"10":{"start":{"line":31,"column":12},"end":{"line":35,"column":13}},"11":{"start":{"line":32,"column":16},"end":{"line":32,"column":68}},"12":{"start":{"line":33,"column":16},"end":{"line":33,"column":29}},"13":{"start":{"line":34,"column":16},"end":{"line":34,"column":33}},"14":{"start":{"line":36,"column":12},"end":{"line":36,"column":21}},"15":{"start":{"line":38,"column":13},"end":{"line":75,"column":9}},"16":{"start":{"line":41,"column":12},"end":{"line":43,"column":13}},"17":{"start":{"line":42,"column":16},"end":{"line":42,"column":20}},"18":{"start":{"line":48,"column":12},"end":{"line":51,"column":13}},"19":{"start":{"line":49,"column":16},"end":{"line":49,"column":60}},"20":{"start":{"line":50,"column":16},"end":{"line":50,"column":32}},"21":{"start":{"line":52,"column":12},"end":{"line":52,"column":21}},"22":{"start":{"line":54,"column":13},"end":{"line":75,"column":9}},"23":{"start":{"line":55,"column":12},"end":{"line":66,"column":13}},"24":{"start":{"line":57,"column":16},"end":{"line":57,"column":32}},"25":{"start":{"line":60,"column":16},"end":{"line":60,"column":33}},"26":{"start":{"line":63,"column":16},"end":{"line":63,"column":61}},"27":{"start":{"line":64,"column":16},"end":{"line":64,"column":29}},"28":{"start":{"line":65,"column":16},"end":{"line":65,"column":33}},"29":{"start":{"line":67,"column":12},"end":{"line":67,"column":21}},"30":{"start":{"line":69,"column":13},"end":{"line":75,"column":9}},"31":{"start":{"line":73,"column":12},"end":{"line":73,"column":29}},"32":{"start":{"line":74,"column":12},"end":{"line":74,"column":21}},"33":{"start":{"line":76,"column":8},"end":{"line":76,"column":34}},"34":{"start":{"line":80,"column":4},"end":{"line":82,"column":5}},"35":{"start":{"line":81,"column":8},"end":{"line":81,"column":60}},"36":{"start":{"line":85,"column":20},"end":{"line":88,"column":5}},"37":{"start":{"line":89,"column":21},"end":{"line":89,"column":23}},"38":{"start":{"line":90,"column":4},"end":{"line":102,"column":5}},"39":{"start":{"line":90,"column":17},"end":{"line":90,"column":18}},"40":{"start":{"line":91,"column":8},"end":{"line":101,"column":9}},"41":{"start":{"line":92,"column":12},"end":{"line":96,"column":13}},"42":{"start":{"line":94,"column":16},"end":{"line":94,"column":41}},"43":{"start":{"line":95,"column":16},"end":{"line":95,"column":58}},"44":{"start":{"line":97,"column":12},"end":{"line":97,"column":38}},"45":{"start":{"line":100,"column":12},"end":{"line":100,"column":71}},"46":{"start":{"line":104,"column":4},"end":{"line":106,"column":5}},"47":{"start":{"line":105,"column":8},"end":{"line":105,"column":33}},"48":{"start":{"line":107,"column":4},"end":{"line":107,"column":20}}},"fnMap":{"0":{"name":"compileSearchTerms","decl":{"start":{"line":21,"column":9},"end":{"line":21,"column":27}},"loc":{"start":{"line":21,"column":34},"end":{"line":108,"column":1}},"line":21}},"branchMap":{"0":{"loc":{"start":{"line":29,"column":8},"end":{"line":75,"column":9}},"type":"if","locations":[{"start":{"line":29,"column":8},"end":{"line":75,"column":9}},{"start":{"line":38,"column":13},"end":{"line":75,"column":9}}],"line":29},"1":{"loc":{"start":{"line":29,"column":12},"end":{"line":29,"column":34}},"type":"binary-expr","locations":[{"start":{"line":29,"column":12},"end":{"line":29,"column":21}},{"start":{"line":29,"column":25},"end":{"line":29,"column":34}}],"line":29},"2":{"loc":{"start":{"line":31,"column":12},"end":{"line":35,"column":13}},"type":"if","locations":[{"start":{"line":31,"column":12},"end":{"line":35,"column":13}},{"start":{},"end":{}}],"line":31},"3":{"loc":{"start":{"line":38,"column":13},"end":{"line":75,"column":9}},"type":"if","locations":[{"start":{"line":38,"column":13},"end":{"line":75,"column":9}},{"start":{"line":54,"column":13},"end":{"line":75,"column":9}}],"line":38},"4":{"loc":{"start":{"line":41,"column":12},"end":{"line":43,"column":13}},"type":"if","locations":[{"start":{"line":41,"column":12},"end":{"line":43,"column":13}},{"start":{},"end":{}}],"line":41},"5":{"loc":{"start":{"line":48,"column":12},"end":{"line":51,"column":13}},"type":"if","locations":[{"start":{"line":48,"column":12},"end":{"line":51,"column":13}},{"start":{},"end":{}}],"line":48},"6":{"loc":{"start":{"line":54,"column":13},"end":{"line":75,"column":9}},"type":"if","locations":[{"start":{"line":54,"column":13},"end":{"line":75,"column":9}},{"start":{"line":69,"column":13},"end":{"line":75,"column":9}}],"line":54},"7":{"loc":{"start":{"line":55,"column":12},"end":{"line":66,"column":13}},"type":"if","locations":[{"start":{"line":55,"column":12},"end":{"line":66,"column":13}},{"start":{"line":59,"column":17},"end":{"line":66,"column":13}}],"line":55},"8":{"loc":{"start":{"line":69,"column":13},"end":{"line":75,"column":9}},"type":"if","locations":[{"start":{"line":69,"column":13},"end":{"line":75,"column":9}},{"start":{},"end":{}}],"line":69},"9":{"loc":{"start":{"line":69,"column":17},"end":{"line":69,"column":57}},"type":"binary-expr","locations":[{"start":{"line":69,"column":17},"end":{"line":69,"column":26}},{"start":{"line":69,"column":30},"end":{"line":69,"column":39}},{"start":{"line":69,"column":43},"end":{"line":69,"column":57}}],"line":69},"10":{"loc":{"start":{"line":80,"column":4},"end":{"line":82,"column":5}},"type":"if","locations":[{"start":{"line":80,"column":4},"end":{"line":82,"column":5}},{"start":{},"end":{}}],"line":80},"11":{"loc":{"start":{"line":91,"column":8},"end":{"line":101,"column":9}},"type":"if","locations":[{"start":{"line":91,"column":8},"end":{"line":101,"column":9}},{"start":{"line":99,"column":13},"end":{"line":101,"column":9}}],"line":91},"12":{"loc":{"start":{"line":92,"column":12},"end":{"line":96,"column":13}},"type":"if","locations":[{"start":{"line":92,"column":12},"end":{"line":96,"column":13}},{"start":{},"end":{}}],"line":92},"13":{"loc":{"start":{"line":104,"column":4},"end":{"line":106,"column":5}},"type":"if","locations":[{"start":{"line":104,"column":4},"end":{"line":106,"column":5}},{"start":{},"end":{}}],"line":104}},"s":{"0":1,"1":1,"2":8,"3":8,"4":8,"5":8,"6":8,"7":8,"8":164,"9":164,"10":12,"11":9,"12":9,"13":9,"14":12,"15":152,"16":3,"17":3,"18":3,"19":3,"20":3,"21":3,"22":149,"23":10,"24":5,"25":5,"26":5,"27":5,"28":5,"29":10,"30":139,"31":1,"32":1,"33":138,"34":8,"35":5,"36":8,"37":8,"38":8,"39":8,"40":19,"41":13,"42":2,"43":2,"44":13,"45":6,"46":8,"47":1,"48":8},"f":{"0":8},"b":{"0":[12,152],"1":[164,17],"2":[9,3],"3":[3,149],"4":[3,0],"5":[3,0],"6":[10,139],"7":[5,5],"8":[1,138],"9":[139,2,2],"10":[5,3],"11":[13,6],"12":[2,11],"13":[1,7]},"inputSourceMap":{"version":3,"file":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/util/compile-search-terms.ts","sources":["/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/util/compile-search-terms.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * BEGIN HEADER\n *\n * Contains:        Utility function\n * CVM-Role:        <none>\n * Maintainer:      Hendrik Erz\n * License:         GNU GPL v3\n *\n * Description:     This function compiles a string of search terms.\n *\n *                  Supported operators:\n *                  * AND (space)\n *                  * OR (pipe, |)\n *                  * NOT (exclamation mark, !)\n *\n * END HEADER\n */\n\nimport type { SearchTerm } from '@dts/common/search'\n\nexport default function compileSearchTerms (term: string): SearchTerm[] {\n  // First sanitize the terms\n  const myTerms: SearchTerm[] = []\n  let curWord = ''\n  let hasExact = false\n  let operator: 'AND'|'OR'|'NOT' = 'AND'\n\n  for (let i = 0; i < term.length; i++) {\n    const c = term.charAt(i)\n    if (c === ' ' && !hasExact) {\n      // Spaces mark the end of one search term (except we're in an exact match)\n      if (curWord.trim() !== '') {\n        myTerms.push({ words: [curWord.trim()], operator })\n        curWord = ''\n        operator = 'AND' // Reset the operator\n      }\n      continue\n    } else if (c === '|') {\n      // We got an OR operator\n      // If the next character is a space, we can use a shortcut here\n      if (term.charAt(i + 1) === ' ') {\n        ++i\n      }\n\n      // We know additionally know that the previous operator was an or. But\n      // let's check that the user hasn't accidentally deleted one OR-word and\n      // now their current search STARTS with a pipe character. If not, we will\n      // disregard this OR character and treat what's coming as an AND\n      if (myTerms.length > 0) {\n        myTerms[myTerms.length - 1].operator = 'OR'\n        operator = 'OR'\n      }\n      continue\n    } else if (c === '\"') {\n      if (!hasExact) {\n        // Begin an exact phrase\n        hasExact = true\n      } else {\n        hasExact = false\n        // Do not trim the word to account for trailing and\n        // ending whitespace within an exact capturing group\n        myTerms.push({ words: [curWord], operator })\n        curWord = ''\n        operator = 'AND'\n      }\n      continue\n    } else if (c === '!' && !hasExact && curWord === '') {\n      // An exclamation mark only has meaning if it is preceeded\n      // by a space and not within an exact match. Preceeded by\n      // space is indicated by an empty curWord variable.\n      operator = 'NOT'\n      continue // We don't want the ! in the term\n    }\n\n    curWord += term.charAt(i)\n  }\n\n  // Now that we're through the search terms, clean up\n\n  // If there is a last word (in most cases it should be), add it to the list\n  if (curWord.trim() !== '') {\n    myTerms.push({ words: [curWord.trim()], operator })\n  }\n\n  // Now pack together all consecutive ORs\n  // to make it easier for the search in the main process\n  let currentOr: SearchTerm = {\n    operator: 'OR',\n    words: []\n  }\n\n  const newTerms: SearchTerm[] = []\n\n  for (let i = 0; i < myTerms.length; i++) {\n    if (myTerms[i].operator !== 'OR') {\n      if (currentOr.words.length > 0) {\n        // Duplicate object so that the words are retained\n        newTerms.push(currentOr)\n        currentOr = { operator: 'OR', words: [] }\n      }\n      newTerms.push(myTerms[i])\n    } else {\n      currentOr.words = currentOr.words.concat(myTerms[i].words)\n    }\n  }\n\n  // Now push the currentOr if not empty\n  if (currentOr.words.length > 0) {\n    newTerms.push(currentOr)\n  }\n\n  return newTerms\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"2c923d8adb3cd0a87c1f3f011eb8e8e9b83c6bb7","contentHash":"99f6b2736107f890f4d201ccc63761eb2140c90f8062a4398071961e19631f3a"},"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/modules/markdown-utils/index.ts":{"path":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/modules/markdown-utils/index.ts","statementMap":{"0":{"start":{"line":16,"column":22},"end":{"line":18,"column":1}},"1":{"start":{"line":17,"column":4},"end":{"line":17,"column":62}},"2":{"start":{"line":19,"column":0},"end":{"line":19,"column":62}},"3":{"start":{"line":20,"column":0},"end":{"line":20,"column":25}},"4":{"start":{"line":21,"column":0},"end":{"line":21,"column":38}},"5":{"start":{"line":22,"column":0},"end":{"line":22,"column":42}},"6":{"start":{"line":23,"column":0},"end":{"line":23,"column":44}},"7":{"start":{"line":24,"column":26},"end":{"line":24,"column":108}},"8":{"start":{"line":25,"column":23},"end":{"line":25,"column":48}},"9":{"start":{"line":26,"column":25},"end":{"line":26,"column":54}},"10":{"start":{"line":27,"column":0},"end":{"line":27,"column":121}},"11":{"start":{"line":27,"column":81},"end":{"line":27,"column":115}},"12":{"start":{"line":45,"column":4},"end":{"line":48,"column":5}},"13":{"start":{"line":46,"column":27},"end":{"line":46,"column":80}},"14":{"start":{"line":47,"column":8},"end":{"line":47,"column":38}},"15":{"start":{"line":49,"column":16},"end":{"line":49,"column":69}},"16":{"start":{"line":50,"column":4},"end":{"line":50,"column":15}},"17":{"start":{"line":65,"column":4},"end":{"line":67,"column":5}},"18":{"start":{"line":66,"column":8},"end":{"line":66,"column":18}},"19":{"start":{"line":68,"column":4},"end":{"line":96,"column":5}},"20":{"start":{"line":69,"column":8},"end":{"line":69,"column":21}},"21":{"start":{"line":71,"column":9},"end":{"line":96,"column":5}},"22":{"start":{"line":72,"column":26},"end":{"line":72,"column":28}},"23":{"start":{"line":73,"column":8},"end":{"line":75,"column":9}},"24":{"start":{"line":74,"column":12},"end":{"line":74,"column":87}},"25":{"start":{"line":76,"column":8},"end":{"line":76,"column":27}},"26":{"start":{"line":78,"column":9},"end":{"line":96,"column":5}},"27":{"start":{"line":79,"column":26},"end":{"line":79,"column":28}},"28":{"start":{"line":80,"column":8},"end":{"line":82,"column":9}},"29":{"start":{"line":81,"column":12},"end":{"line":81,"column":86}},"30":{"start":{"line":83,"column":8},"end":{"line":83,"column":27}},"31":{"start":{"line":85,"column":9},"end":{"line":96,"column":5}},"32":{"start":{"line":86,"column":26},"end":{"line":86,"column":28}},"33":{"start":{"line":87,"column":8},"end":{"line":91,"column":9}},"34":{"start":{"line":88,"column":12},"end":{"line":90,"column":13}},"35":{"start":{"line":89,"column":16},"end":{"line":89,"column":90}},"36":{"start":{"line":92,"column":8},"end":{"line":92,"column":27}},"37":{"start":{"line":95,"column":8},"end":{"line":95,"column":18}},"38":{"start":{"line":110,"column":4},"end":{"line":112,"column":5}},"39":{"start":{"line":111,"column":8},"end":{"line":111,"column":18}},"40":{"start":{"line":113,"column":20},"end":{"line":113,"column":22}},"41":{"start":{"line":114,"column":4},"end":{"line":147,"column":5}},"42":{"start":{"line":115,"column":8},"end":{"line":115,"column":28}},"43":{"start":{"line":117,"column":9},"end":{"line":147,"column":5}},"44":{"start":{"line":118,"column":8},"end":{"line":118,"column":34}},"45":{"start":{"line":120,"column":9},"end":{"line":147,"column":5}},"46":{"start":{"line":121,"column":8},"end":{"line":123,"column":9}},"47":{"start":{"line":122,"column":12},"end":{"line":122,"column":74}},"48":{"start":{"line":125,"column":9},"end":{"line":147,"column":5}},"49":{"start":{"line":126,"column":8},"end":{"line":126,"column":32}},"50":{"start":{"line":127,"column":8},"end":{"line":129,"column":9}},"51":{"start":{"line":128,"column":12},"end":{"line":128,"column":38}},"52":{"start":{"line":131,"column":9},"end":{"line":147,"column":5}},"53":{"start":{"line":132,"column":8},"end":{"line":134,"column":9}},"54":{"start":{"line":133,"column":12},"end":{"line":133,"column":73}},"55":{"start":{"line":136,"column":9},"end":{"line":147,"column":5}},"56":{"start":{"line":137,"column":8},"end":{"line":139,"column":9}},"57":{"start":{"line":138,"column":12},"end":{"line":138,"column":74}},"58":{"start":{"line":141,"column":9},"end":{"line":147,"column":5}},"59":{"start":{"line":142,"column":8},"end":{"line":146,"column":9}},"60":{"start":{"line":143,"column":12},"end":{"line":145,"column":13}},"61":{"start":{"line":144,"column":16},"end":{"line":144,"column":77}},"62":{"start":{"line":148,"column":4},"end":{"line":148,"column":21}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":16,"column":56},"end":{"line":16,"column":57}},"loc":{"start":{"line":16,"column":71},"end":{"line":18,"column":1}},"line":16},"1":{"name":"(anonymous_1)","decl":{"start":{"line":27,"column":67},"end":{"line":27,"column":68}},"loc":{"start":{"line":27,"column":79},"end":{"line":27,"column":117}},"line":27},"2":{"name":"markdownToAST","decl":{"start":{"line":44,"column":9},"end":{"line":44,"column":22}},"loc":{"start":{"line":44,"column":53},"end":{"line":51,"column":1}},"line":44},"3":{"name":"extractASTNodes","decl":{"start":{"line":64,"column":9},"end":{"line":64,"column":24}},"loc":{"start":{"line":64,"column":48},"end":{"line":97,"column":1}},"line":64},"4":{"name":"extractTextnodes","decl":{"start":{"line":109,"column":9},"end":{"line":109,"column":25}},"loc":{"start":{"line":109,"column":39},"end":{"line":149,"column":1}},"line":109}},"branchMap":{"0":{"loc":{"start":{"line":16,"column":22},"end":{"line":18,"column":1}},"type":"binary-expr","locations":[{"start":{"line":16,"column":23},"end":{"line":16,"column":27}},{"start":{"line":16,"column":31},"end":{"line":16,"column":51}},{"start":{"line":16,"column":56},"end":{"line":18,"column":1}}],"line":16},"1":{"loc":{"start":{"line":17,"column":11},"end":{"line":17,"column":61}},"type":"cond-expr","locations":[{"start":{"line":17,"column":37},"end":{"line":17,"column":40}},{"start":{"line":17,"column":43},"end":{"line":17,"column":61}}],"line":17},"2":{"loc":{"start":{"line":17,"column":12},"end":{"line":17,"column":33}},"type":"binary-expr","locations":[{"start":{"line":17,"column":12},"end":{"line":17,"column":15}},{"start":{"line":17,"column":19},"end":{"line":17,"column":33}}],"line":17},"3":{"loc":{"start":{"line":45,"column":4},"end":{"line":48,"column":5}},"type":"if","locations":[{"start":{"line":45,"column":4},"end":{"line":48,"column":5}},{"start":{},"end":{}}],"line":45},"4":{"loc":{"start":{"line":65,"column":4},"end":{"line":67,"column":5}},"type":"if","locations":[{"start":{"line":65,"column":4},"end":{"line":67,"column":5}},{"start":{},"end":{}}],"line":65},"5":{"loc":{"start":{"line":65,"column":8},"end":{"line":65,"column":44}},"type":"binary-expr","locations":[{"start":{"line":65,"column":8},"end":{"line":65,"column":28}},{"start":{"line":65,"column":32},"end":{"line":65,"column":44}}],"line":65},"6":{"loc":{"start":{"line":68,"column":4},"end":{"line":96,"column":5}},"type":"if","locations":[{"start":{"line":68,"column":4},"end":{"line":96,"column":5}},{"start":{"line":71,"column":9},"end":{"line":96,"column":5}}],"line":68},"7":{"loc":{"start":{"line":71,"column":9},"end":{"line":96,"column":5}},"type":"if","locations":[{"start":{"line":71,"column":9},"end":{"line":96,"column":5}},{"start":{"line":78,"column":9},"end":{"line":96,"column":5}}],"line":71},"8":{"loc":{"start":{"line":71,"column":13},"end":{"line":71,"column":147}},"type":"binary-expr","locations":[{"start":{"line":71,"column":13},"end":{"line":71,"column":39}},{"start":{"line":71,"column":43},"end":{"line":71,"column":67}},{"start":{"line":71,"column":71},"end":{"line":71,"column":94}},{"start":{"line":71,"column":98},"end":{"line":71,"column":120}},{"start":{"line":71,"column":124},"end":{"line":71,"column":147}}],"line":71},"9":{"loc":{"start":{"line":78,"column":9},"end":{"line":96,"column":5}},"type":"if","locations":[{"start":{"line":78,"column":9},"end":{"line":96,"column":5}},{"start":{"line":85,"column":9},"end":{"line":96,"column":5}}],"line":78},"10":{"loc":{"start":{"line":78,"column":13},"end":{"line":78,"column":68}},"type":"binary-expr","locations":[{"start":{"line":78,"column":13},"end":{"line":78,"column":39}},{"start":{"line":78,"column":43},"end":{"line":78,"column":68}}],"line":78},"11":{"loc":{"start":{"line":85,"column":9},"end":{"line":96,"column":5}},"type":"if","locations":[{"start":{"line":85,"column":9},"end":{"line":96,"column":5}},{"start":{"line":94,"column":9},"end":{"line":96,"column":5}}],"line":85},"12":{"loc":{"start":{"line":110,"column":4},"end":{"line":112,"column":5}},"type":"if","locations":[{"start":{"line":110,"column":4},"end":{"line":112,"column":5}},{"start":{},"end":{}}],"line":110},"13":{"loc":{"start":{"line":110,"column":8},"end":{"line":110,"column":44}},"type":"binary-expr","locations":[{"start":{"line":110,"column":8},"end":{"line":110,"column":28}},{"start":{"line":110,"column":32},"end":{"line":110,"column":44}}],"line":110},"14":{"loc":{"start":{"line":114,"column":4},"end":{"line":147,"column":5}},"type":"if","locations":[{"start":{"line":114,"column":4},"end":{"line":147,"column":5}},{"start":{"line":117,"column":9},"end":{"line":147,"column":5}}],"line":114},"15":{"loc":{"start":{"line":117,"column":9},"end":{"line":147,"column":5}},"type":"if","locations":[{"start":{"line":117,"column":9},"end":{"line":147,"column":5}},{"start":{"line":120,"column":9},"end":{"line":147,"column":5}}],"line":117},"16":{"loc":{"start":{"line":120,"column":9},"end":{"line":147,"column":5}},"type":"if","locations":[{"start":{"line":120,"column":9},"end":{"line":147,"column":5}},{"start":{"line":125,"column":9},"end":{"line":147,"column":5}}],"line":120},"17":{"loc":{"start":{"line":120,"column":13},"end":{"line":120,"column":94}},"type":"binary-expr","locations":[{"start":{"line":120,"column":13},"end":{"line":120,"column":39}},{"start":{"line":120,"column":43},"end":{"line":120,"column":67}},{"start":{"line":120,"column":71},"end":{"line":120,"column":94}}],"line":120},"18":{"loc":{"start":{"line":125,"column":9},"end":{"line":147,"column":5}},"type":"if","locations":[{"start":{"line":125,"column":9},"end":{"line":147,"column":5}},{"start":{"line":131,"column":9},"end":{"line":147,"column":5}}],"line":125},"19":{"loc":{"start":{"line":125,"column":13},"end":{"line":125,"column":56}},"type":"binary-expr","locations":[{"start":{"line":125,"column":13},"end":{"line":125,"column":33}},{"start":{"line":125,"column":37},"end":{"line":125,"column":56}}],"line":125},"20":{"loc":{"start":{"line":127,"column":8},"end":{"line":129,"column":9}},"type":"if","locations":[{"start":{"line":127,"column":8},"end":{"line":129,"column":9}},{"start":{},"end":{}}],"line":127},"21":{"loc":{"start":{"line":131,"column":9},"end":{"line":147,"column":5}},"type":"if","locations":[{"start":{"line":131,"column":9},"end":{"line":147,"column":5}},{"start":{"line":136,"column":9},"end":{"line":147,"column":5}}],"line":131},"22":{"loc":{"start":{"line":131,"column":13},"end":{"line":131,"column":68}},"type":"binary-expr","locations":[{"start":{"line":131,"column":13},"end":{"line":131,"column":39}},{"start":{"line":131,"column":43},"end":{"line":131,"column":68}}],"line":131},"23":{"loc":{"start":{"line":136,"column":9},"end":{"line":147,"column":5}},"type":"if","locations":[{"start":{"line":136,"column":9},"end":{"line":147,"column":5}},{"start":{"line":141,"column":9},"end":{"line":147,"column":5}}],"line":136},"24":{"loc":{"start":{"line":136,"column":13},"end":{"line":136,"column":62}},"type":"binary-expr","locations":[{"start":{"line":136,"column":13},"end":{"line":136,"column":35}},{"start":{"line":136,"column":39},"end":{"line":136,"column":62}}],"line":136},"25":{"loc":{"start":{"line":141,"column":9},"end":{"line":147,"column":5}},"type":"if","locations":[{"start":{"line":141,"column":9},"end":{"line":147,"column":5}},{"start":{},"end":{}}],"line":141}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":0,"12":20,"13":20,"14":20,"15":20,"16":20,"17":34,"18":0,"19":34,"20":4,"21":30,"22":8,"23":8,"24":32,"25":8,"26":22,"27":0,"28":0,"29":0,"30":0,"31":22,"32":0,"33":0,"34":0,"35":0,"36":0,"37":22,"38":156,"39":0,"40":156,"41":156,"42":42,"43":114,"44":8,"45":106,"46":12,"47":24,"48":94,"49":0,"50":0,"51":0,"52":94,"53":4,"54":12,"55":90,"56":88,"57":102,"58":2,"59":0,"60":0,"61":0,"62":156},"f":{"0":1,"1":0,"2":20,"3":34,"4":156},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1],"3":[20,0],"4":[0,34],"5":[34,0],"6":[4,30],"7":[8,22],"8":[30,30,30,30,22],"9":[0,22],"10":[22,22],"11":[0,22],"12":[0,156],"13":[156,0],"14":[42,114],"15":[8,106],"16":[12,94],"17":[106,106,106],"18":[0,94],"19":[94,94],"20":[0,0],"21":[4,90],"22":[94,94],"23":[88,2],"24":[90,14],"25":[0,2]},"inputSourceMap":{"version":3,"file":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/modules/markdown-utils/index.ts","sources":["/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/modules/markdown-utils/index.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @ignore\n * BEGIN HEADER\n *\n * Contains:        Markdown Utilities\n * CVM-Role:        Utility Functions\n * Maintainer:      Hendrik Erz\n * License:         GNU GPL v3\n *\n * Description:     This is the main entry file for various Markdown utilities\n *                  needed throughout the app.\n *\n * END HEADER\n */\n\nimport markdownParser, { type MarkdownParserConfig } from '@common/modules/markdown-editor/parser/markdown-parser'\nimport { parseNode, type ASTNode, type ASTNodeType, type TextNode } from './markdown-ast'\nimport { type Tree } from '@lezer/common'\n\nexport { md2html } from './markdown-to-html'\n\n/**\n * Converts a Markdown string into an AST, utilizing the CodeMirror Markdown\n * parser for the heavy lifting. This effectively takes a Lezer tree and\n * converts it to a custom Markdown AST implementation.\n *\n * @param   {string}   markdown  The Markdown source\n * @param   {Tree}     tree      Optional: If you already have a parsed tree,\n *                               you can pass it here to save some time re-\n *                               parsing the source. Please NOTE: If you pass in\n *                               a tree, you MUST pass the full Markdown source\n *                               that has been used to generate the parse tree,\n *                               since otherwise the offsets in the parse tree\n *                               will be wrong!\n *\n * @return  {ASTNode}            The root node of the AST\n */\nexport function markdownToAST (markdown: string, tree?: Tree, parserConfig?: MarkdownParserConfig): ASTNode {\n  if (tree === undefined) {\n    const { parser } = markdownParser(parserConfig).language\n    tree = parser.parse(markdown)\n  }\n  const ast = parseNode(tree.topNode, markdown)\n  return ast\n}\n\n/**\n * Extracts arbitrary AST nodes. Providing a NodeType that is not used within\n * the AST will return an empty array.\n *\n * @param   {ASTNode}      ast       The AST to extract nodes from\n * @param   {ASTNodeType}  nodeType  The Node type to query\n * @param   {Function}     filter    An optional filter. Receives a node and\n *                                   returns a boolean indicating if the node\n *                                   should be visited.\n *\n * @return  {ASTNode[]}              An array of all found nodes\n */\nexport function extractASTNodes (ast: ASTNode, nodeType: ASTNodeType, filter?: (node: ASTNode) => boolean): ASTNode[] {\n  if (filter !== undefined && !filter(ast)) {\n    return []\n  }\n\n  if (ast.type === nodeType) {\n    return [ast]\n  } else if (ast.type === 'FootnoteRef' || ast.type === 'Highlight' || ast.type === 'ListItem' || ast.type === 'Generic' || ast.type === 'Emphasis') {\n    let returnNodes: ASTNode[] = []\n    for (const child of ast.children) {\n      returnNodes = returnNodes.concat(extractASTNodes(child, nodeType, filter))\n    }\n    return returnNodes\n  } else if (ast.type === 'OrderedList' || ast.type === 'BulletList') {\n    let returnNodes: ASTNode[] = []\n    for (const item of ast.items) {\n      returnNodes = returnNodes.concat(extractASTNodes(item, nodeType, filter))\n    }\n    return returnNodes\n  } else if (ast.type === 'Table') {\n    let returnNodes: ASTNode[] = []\n    for (const row of ast.rows) {\n      for (const cell of row.cells) {\n        returnNodes = returnNodes.concat(extractASTNodes(cell, nodeType, filter))\n      }\n    }\n    return returnNodes\n  } else {\n    return []\n  }\n}\n\n/**\n * Extracts all text nodes from a Markdown AST. Can be used for spellchecking,\n * for example. An optional filter can be provided to exclude text nodes from\n * those nodes that should not be extracted.\n *\n * @param   {ASTNode[]}   ast     The AST root.\n * @param   {Function}    filter  A function that receives an ASTNode and should\n *                                return false if the node should be excluded.\n *\n * @return  {TextNode[]}          A list of all text nodes\n */\nexport function extractTextnodes (ast: ASTNode, filter?: (node: ASTNode) => boolean): TextNode[] {\n  if (filter !== undefined && !filter(ast)) {\n    return []\n  }\n\n  let textNodes: TextNode[] = []\n  if (ast.type === 'Text') {\n    textNodes.push(ast)\n  } else if (ast.type === 'Heading') {\n    textNodes.push(ast.value)\n  } else if (ast.type === 'FootnoteRef' || ast.type === 'Highlight' || ast.type === 'ListItem') {\n    for (const child of ast.children) {\n      textNodes = textNodes.concat(extractTextnodes(child, filter))\n    }\n  } else if (ast.type === 'Image' || ast.type === 'Link') {\n    textNodes.push(ast.alt)\n    if (ast.title !== undefined) {\n      textNodes.push(ast.title)\n    }\n  } else if (ast.type === 'OrderedList' || ast.type === 'BulletList') {\n    for (const item of ast.items) {\n      textNodes = textNodes.concat(extractTextnodes(item, filter))\n    }\n  } else if (ast.type === 'Generic' || ast.type === 'Emphasis') {\n    for (const child of ast.children) {\n      textNodes = textNodes.concat(extractTextnodes(child, filter))\n    }\n  } else if (ast.type === 'Table') {\n    for (const row of ast.rows) {\n      for (const cell of row.cells) {\n        textNodes = textNodes.concat(extractTextnodes(cell, filter))\n      }\n    }\n  }\n  return textNodes\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"97d80c89966036def2abb2d2789bd0583571264a","contentHash":"982fb219fff9af909c00fcd38ccdec3da2a184c01fc690716f1c556473384c9d"},"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/modules/markdown-editor/parser/markdown-parser.ts":{"path":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/modules/markdown-editor/parser/markdown-parser.ts","statementMap":{"0":{"start":{"line":17,"column":0},"end":{"line":17,"column":62}},"1":{"start":{"line":18,"column":0},"end":{"line":18,"column":33}},"2":{"start":{"line":19,"column":22},"end":{"line":19,"column":52}},"3":{"start":{"line":20,"column":19},"end":{"line":20,"column":50}},"4":{"start":{"line":22,"column":24},"end":{"line":22,"column":60}},"5":{"start":{"line":23,"column":19},"end":{"line":23,"column":50}},"6":{"start":{"line":24,"column":22},"end":{"line":24,"column":56}},"7":{"start":{"line":25,"column":19},"end":{"line":25,"column":50}},"8":{"start":{"line":26,"column":26},"end":{"line":26,"column":64}},"9":{"start":{"line":27,"column":20},"end":{"line":27,"column":52}},"10":{"start":{"line":28,"column":20},"end":{"line":28,"column":52}},"11":{"start":{"line":30,"column":16},"end":{"line":30,"column":62}},"12":{"start":{"line":31,"column":18},"end":{"line":31,"column":66}},"13":{"start":{"line":32,"column":16},"end":{"line":32,"column":62}},"14":{"start":{"line":33,"column":14},"end":{"line":33,"column":58}},"15":{"start":{"line":34,"column":17},"end":{"line":34,"column":64}},"16":{"start":{"line":35,"column":18},"end":{"line":35,"column":66}},"17":{"start":{"line":36,"column":18},"end":{"line":36,"column":66}},"18":{"start":{"line":37,"column":14},"end":{"line":37,"column":58}},"19":{"start":{"line":38,"column":14},"end":{"line":38,"column":58}},"20":{"start":{"line":39,"column":15},"end":{"line":39,"column":60}},"21":{"start":{"line":40,"column":12},"end":{"line":40,"column":54}},"22":{"start":{"line":41,"column":15},"end":{"line":41,"column":60}},"23":{"start":{"line":42,"column":14},"end":{"line":42,"column":58}},"24":{"start":{"line":43,"column":16},"end":{"line":43,"column":62}},"25":{"start":{"line":44,"column":16},"end":{"line":44,"column":62}},"26":{"start":{"line":45,"column":13},"end":{"line":45,"column":56}},"27":{"start":{"line":46,"column":13},"end":{"line":46,"column":56}},"28":{"start":{"line":47,"column":15},"end":{"line":47,"column":60}},"29":{"start":{"line":48,"column":16},"end":{"line":48,"column":62}},"30":{"start":{"line":49,"column":15},"end":{"line":49,"column":60}},"31":{"start":{"line":50,"column":17},"end":{"line":50,"column":64}},"32":{"start":{"line":51,"column":17},"end":{"line":51,"column":64}},"33":{"start":{"line":52,"column":18},"end":{"line":52,"column":66}},"34":{"start":{"line":53,"column":15},"end":{"line":53,"column":60}},"35":{"start":{"line":54,"column":14},"end":{"line":54,"column":58}},"36":{"start":{"line":55,"column":17},"end":{"line":55,"column":64}},"37":{"start":{"line":56,"column":21},"end":{"line":56,"column":72}},"38":{"start":{"line":57,"column":21},"end":{"line":57,"column":72}},"39":{"start":{"line":58,"column":20},"end":{"line":58,"column":70}},"40":{"start":{"line":59,"column":15},"end":{"line":59,"column":60}},"41":{"start":{"line":60,"column":21},"end":{"line":60,"column":72}},"42":{"start":{"line":61,"column":15},"end":{"line":61,"column":60}},"43":{"start":{"line":62,"column":17},"end":{"line":62,"column":64}},"44":{"start":{"line":63,"column":14},"end":{"line":63,"column":58}},"45":{"start":{"line":64,"column":17},"end":{"line":64,"column":64}},"46":{"start":{"line":66,"column":26},"end":{"line":66,"column":54}},"47":{"start":{"line":67,"column":26},"end":{"line":67,"column":54}},"48":{"start":{"line":68,"column":29},"end":{"line":68,"column":60}},"49":{"start":{"line":69,"column":22},"end":{"line":69,"column":46}},"50":{"start":{"line":70,"column":24},"end":{"line":70,"column":50}},"51":{"start":{"line":71,"column":30},"end":{"line":71,"column":62}},"52":{"start":{"line":72,"column":26},"end":{"line":72,"column":54}},"53":{"start":{"line":73,"column":35},"end":{"line":73,"column":72}},"54":{"start":{"line":74,"column":27},"end":{"line":74,"column":56}},"55":{"start":{"line":75,"column":25},"end":{"line":75,"column":52}},"56":{"start":{"line":76,"column":22},"end":{"line":138,"column":1}},"57":{"start":{"line":82,"column":72},"end":{"line":82,"column":91}},"58":{"start":{"line":82,"column":92},"end":{"line":82,"column":104}},"59":{"start":{"line":145,"column":4},"end":{"line":217,"column":7}},"60":{"start":{"line":151,"column":26},"end":{"line":151,"column":74}},"61":{"start":{"line":152,"column":12},"end":{"line":154,"column":13}},"62":{"start":{"line":153,"column":16},"end":{"line":153,"column":28}},"63":{"start":{"line":156,"column":12},"end":{"line":160,"column":13}},"64":{"start":{"line":157,"column":16},"end":{"line":159,"column":17}},"65":{"start":{"line":158,"column":20},"end":{"line":158,"column":38}},"66":{"start":{"line":161,"column":12},"end":{"line":161,"column":24}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":82,"column":49},"end":{"line":82,"column":50}},"loc":{"start":{"line":82,"column":70},"end":{"line":82,"column":106}},"line":82},"1":{"name":"markdownParser","decl":{"start":{"line":144,"column":9},"end":{"line":144,"column":23}},"loc":{"start":{"line":144,"column":32},"end":{"line":218,"column":1}},"line":144},"2":{"name":"(anonymous_2)","decl":{"start":{"line":147,"column":23},"end":{"line":147,"column":24}},"loc":{"start":{"line":147,"column":39},"end":{"line":162,"column":9}},"line":147}},"branchMap":{"0":{"loc":{"start":{"line":152,"column":12},"end":{"line":154,"column":13}},"type":"if","locations":[{"start":{"line":152,"column":12},"end":{"line":154,"column":13}},{"start":{},"end":{}}],"line":152},"1":{"loc":{"start":{"line":157,"column":16},"end":{"line":159,"column":17}},"type":"if","locations":[{"start":{"line":157,"column":16},"end":{"line":159,"column":17}},{"start":{},"end":{}}],"line":157},"2":{"loc":{"start":{"line":185,"column":53},"end":{"line":185,"column":127}},"type":"cond-expr","locations":[{"start":{"line":185,"column":92},"end":{"line":185,"column":98}},{"start":{"line":185,"column":101},"end":{"line":185,"column":127}}],"line":185},"3":{"loc":{"start":{"line":185,"column":53},"end":{"line":185,"column":89}},"type":"binary-expr","locations":[{"start":{"line":185,"column":53},"end":{"line":185,"column":68}},{"start":{"line":185,"column":72},"end":{"line":185,"column":89}}],"line":185}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":0,"59":20,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0},"f":{"0":0,"1":20,"2":0},"b":{"0":[0,0],"1":[0,0],"2":[20,0],"3":[20,20]},"inputSourceMap":{"version":3,"file":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/modules/markdown-editor/parser/markdown-parser.ts","sources":["/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/modules/markdown-editor/parser/markdown-parser.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @ignore\n * BEGIN HEADER\n *\n * Contains:        Markdown Parser\n * CVM-Role:        Lezer Parser\n * Maintainer:      Hendrik Erz\n * License:         GNU GPL v3\n *\n * Description:     This is the main parser for Markdown documents. Most of the\n *                  code in here is boilerplate that adds various code\n *                  highlighting languages to the parser.\n *\n * END HEADER\n */\n\nimport { customTags } from '../util/custom-tags'\nimport {\n  StreamLanguage,\n  type LanguageSupport,\n  type Language,\n  type LanguageDescription\n} from '@codemirror/language'\n\n// Import all the languages, first the \"new\" ones\nimport { markdown, markdownLanguage } from '@codemirror/lang-markdown'\nimport { php } from '@codemirror/lang-php'\nimport { python } from '@codemirror/lang-python'\nimport { css } from '@codemirror/lang-css'\nimport { javascript } from '@codemirror/lang-javascript'\nimport { json } from '@codemirror/lang-json'\nimport { yaml } from '@codemirror/lang-yaml'\n// Now from the legacy modes package\nimport { c, cpp, csharp, java, kotlin, objectiveC, dart, scala } from '@codemirror/legacy-modes/mode/clike'\nimport { clojure } from '@codemirror/legacy-modes/mode/clojure'\nimport { cobol } from '@codemirror/legacy-modes/mode/cobol'\nimport { elm } from '@codemirror/legacy-modes/mode/elm'\nimport { fSharp } from '@codemirror/legacy-modes/mode/mllike'\nimport { fortran } from '@codemirror/legacy-modes/mode/fortran'\nimport { haskell } from '@codemirror/legacy-modes/mode/haskell'\nimport { sCSS, less } from '@codemirror/legacy-modes/mode/css'\nimport { xml, html } from '@codemirror/legacy-modes/mode/xml'\nimport { stex } from '@codemirror/legacy-modes/mode/stex'\nimport { r } from '@codemirror/legacy-modes/mode/r'\nimport { ruby } from '@codemirror/legacy-modes/mode/ruby'\nimport { sql } from '@codemirror/legacy-modes/mode/sql'\nimport { swift } from '@codemirror/legacy-modes/mode/swift'\nimport { shell } from '@codemirror/legacy-modes/mode/shell'\nimport { vb } from '@codemirror/legacy-modes/mode/vb'\nimport { go } from '@codemirror/legacy-modes/mode/go'\nimport { rust } from '@codemirror/legacy-modes/mode/rust'\nimport { julia } from '@codemirror/legacy-modes/mode/julia'\nimport { perl } from '@codemirror/legacy-modes/mode/perl'\nimport { turtle } from '@codemirror/legacy-modes/mode/turtle'\nimport { sparql } from '@codemirror/legacy-modes/mode/sparql'\nimport { verilog } from '@codemirror/legacy-modes/mode/verilog'\nimport { vhdl } from '@codemirror/legacy-modes/mode/vhdl'\nimport { tcl } from '@codemirror/legacy-modes/mode/tcl'\nimport { scheme } from '@codemirror/legacy-modes/mode/scheme'\nimport { commonLisp } from '@codemirror/legacy-modes/mode/commonlisp'\nimport { powerShell } from '@codemirror/legacy-modes/mode/powershell'\nimport { smalltalk } from '@codemirror/legacy-modes/mode/smalltalk'\nimport { toml } from '@codemirror/legacy-modes/mode/toml'\nimport { dockerFile } from '@codemirror/legacy-modes/mode/dockerfile'\nimport { diff } from '@codemirror/legacy-modes/mode/diff'\nimport { octave } from '@codemirror/legacy-modes/mode/octave'\nimport { lua } from '@codemirror/legacy-modes/mode/lua'\nimport { pascal } from '@codemirror/legacy-modes/mode/pascal'\n\n// Additional parser\nimport { citationParser } from './citation-parser'\nimport { footnoteParser, footnoteRefParser } from './footnote-parser'\nimport { frontmatterParser, yamlCodeParse } from './frontmatter-parser'\nimport { inlineMathParser, blockMathParser } from './math-parser'\nimport { sloppyParser } from './sloppy-parser'\nimport { gridTableParser, pipeTableParser } from './pandoc-table-parser'\nimport { type ZknLinkParserConfig, zknLinkParser } from './zkn-link-parser'\nimport { pandocAttributesParser } from './pandoc-attributes-parser'\nimport { highlightParser } from './highlight-parser'\nimport { zknTagParser } from './zkn-tag-parser'\n\nconst codeLanguages: Array<{ mode: Language|LanguageDescription|null, selectors: string[] }> = [\n  {\n    // Hear me out: There may be no mermaid syntax highlighting, BUT we need it\n    // to be inside a 'FencedCode' Syntax node so that our renderer can pick it\n    // up. By defining an empty StreamParser, we can ensure that there will be\n    // such a structure, even if it's basically just plain text.\n    mode: StreamLanguage.define({ token (stream, state) { stream.skipToEnd(); return null } }),\n    selectors: ['mermaid']\n  },\n  { mode: css().language, selectors: ['css'] },\n  { mode: javascript().language, selectors: [ 'javascript', 'js', 'node' ] },\n  { mode: json().language, selectors: ['json'] },\n  { mode: markdownLanguage, selectors: [ 'markdown', 'md' ] },\n  // NOTE: The PHP parser usually expects the PHP code to start with <?, unless \"plain\" is set\n  { mode: php({ plain: true }).language, selectors: ['php'] },\n  { mode: python().language, selectors: [ 'python', 'py' ] },\n  { mode: StreamLanguage.define(c), selectors: ['c'] },\n  { mode: StreamLanguage.define(clojure), selectors: ['clojure'] },\n  { mode: StreamLanguage.define(cobol), selectors: ['cobol'] },\n  { mode: StreamLanguage.define(commonLisp), selectors: [ 'clisp', 'commonlisp' ] },\n  { mode: StreamLanguage.define(cpp), selectors: [ 'c++', 'cpp' ] },\n  { mode: StreamLanguage.define(csharp), selectors: [ 'c#', 'csharp', 'cs' ] },\n  { mode: StreamLanguage.define(dart), selectors: [ 'dart', 'dt' ] },\n  { mode: StreamLanguage.define(diff), selectors: ['diff'] },\n  { mode: StreamLanguage.define(dockerFile), selectors: [ 'docker', 'dockerfile' ] },\n  { mode: StreamLanguage.define(elm), selectors: ['elm'] },\n  { mode: StreamLanguage.define(fortran), selectors: ['fortran'] },\n  { mode: StreamLanguage.define(fSharp), selectors: [ 'f#', 'fsharp' ] },\n  { mode: StreamLanguage.define(go), selectors: ['go'] },\n  { mode: StreamLanguage.define(haskell), selectors: [ 'haskell', 'hs' ] },\n  { mode: StreamLanguage.define(html), selectors: ['html'] },\n  { mode: StreamLanguage.define(java), selectors: ['java'] },\n  { mode: StreamLanguage.define(julia), selectors: [ 'julia', 'jl' ] },\n  { mode: StreamLanguage.define(kotlin), selectors: [ 'kotlin', 'kt' ] },\n  { mode: StreamLanguage.define(less), selectors: ['less'] },\n  { mode: StreamLanguage.define(lua), selectors: ['lua'] },\n  { mode: StreamLanguage.define(objectiveC), selectors: [ 'objective-c', 'objectivec', 'objc' ] },\n  { mode: StreamLanguage.define(octave), selectors: ['octave'] },\n  { mode: StreamLanguage.define(pascal), selectors: ['pascal'] },\n  { mode: StreamLanguage.define(perl), selectors: [ 'perl', 'pl' ] },\n  { mode: StreamLanguage.define(powerShell), selectors: ['powershell'] },\n  { mode: StreamLanguage.define(r), selectors: ['r'] },\n  { mode: StreamLanguage.define(ruby), selectors: [ 'ruby', 'rb' ] },\n  { mode: StreamLanguage.define(rust), selectors: [ 'rust', 'rs' ] },\n  { mode: StreamLanguage.define(scala), selectors: ['scala'] },\n  { mode: StreamLanguage.define(scheme), selectors: ['scheme'] },\n  { mode: StreamLanguage.define(sCSS), selectors: ['scss'] },\n  { mode: StreamLanguage.define(shell), selectors: [ 'shell', 'sh', 'bash' ] },\n  { mode: StreamLanguage.define(smalltalk), selectors: [ 'smalltalk', 'st' ] },\n  { mode: StreamLanguage.define(sparql), selectors: ['sparql'] },\n  { mode: StreamLanguage.define(sql({})), selectors: ['sql'] },\n  { mode: StreamLanguage.define(stex), selectors: [ 'latex', 'tex' ] },\n  { mode: StreamLanguage.define(swift), selectors: ['swift'] },\n  { mode: StreamLanguage.define(tcl), selectors: ['tcl'] },\n  { mode: StreamLanguage.define(toml), selectors: [ 'toml', 'ini' ] },\n  { mode: StreamLanguage.define(turtle), selectors: [ 'turtle', 'ttl' ] },\n  { mode: StreamLanguage.define(vb), selectors: [ 'vb.net', 'vb', 'visualbasic' ] },\n  { mode: StreamLanguage.define(verilog), selectors: [ 'verilog', 'v' ] },\n  { mode: StreamLanguage.define(vhdl), selectors: [ 'vhdl', 'vhd' ] },\n  { mode: StreamLanguage.define(xml), selectors: ['xml'] },\n  { mode: yaml().language, selectors: [ 'yaml', 'yml' ] },\n  { mode: javascript({ typescript: true }).language, selectors: [ 'typescript', 'ts' ] }\n]\n\nexport interface MarkdownParserConfig {\n  zknLinkParserConfig?: ZknLinkParserConfig\n}\n\n// TIP: Uncomment the following line to get a full list of all unique characters\n// that are capable of belonging to a selector\n// console.log([...new Set(codeLanguages.map(x => x.selectors).flat().join('').split(''))])\n\n// This file returns a syntax extension that provides parsing and syntax\n// capabilities\nexport default function markdownParser (config?: MarkdownParserConfig): LanguageSupport {\n  return markdown({\n    base: markdownLanguage,\n    codeLanguages: (infoString) => {\n      // infostrings must start with the language and can be surrounded by curly\n      // brackets. We just extract everything from the beginning that is an\n      // allowed selector-part\n      const match = /^{?([a-z.#+-]+)/.exec(infoString.toLowerCase())\n      if (match === null) {\n        return null\n      }\n\n      // Return an adequate language\n      for (const entry of codeLanguages) {\n        if (entry.selectors.includes(match[1])) {\n          return entry.mode\n        }\n      }\n\n      return null\n    },\n    extensions: {\n      // yamlCodeParse is a wrapper that scans the document for the existence of\n      // a YAML frontmatter and then parses its contents. NOTE: Since a single\n      // MarkdownConfig only accepts one parse, I could either add additional\n      // logic to a generalized parser, or start passing additional config\n      // options here, since \"extensions\" also takes an array.\n      wrap: yamlCodeParse(),\n      parseBlock: [\n        // This BlockParser parses YAML frontmatters\n        frontmatterParser,\n        // This BlockParser parses math blocks\n        blockMathParser,\n        footnoteRefParser,\n        gridTableParser,\n        pipeTableParser\n      ],\n      parseInline: [\n        // Add inline parsers that add AST elements for various additional types\n        inlineMathParser,\n        footnoteParser,\n        citationParser,\n        sloppyParser,\n        zknLinkParser(config?.zknLinkParserConfig),\n        zknTagParser,\n        pandocAttributesParser,\n        highlightParser\n      ],\n      // We have to notify the markdown parser about the additional Node Types\n      // that the YAML block parser utilizes\n      // NOTE: Changes here must be reflected in util/custom-tags.ts and theme/syntax.ts!\n      defineNodes: [\n        { name: 'YAMLFrontmatter' },\n        { name: 'YAMLFrontmatterStart', style: customTags.YAMLFrontmatterStart },\n        { name: 'YAMLFrontmatterEnd', style: customTags.YAMLFrontmatterEnd },\n        { name: 'Citation', style: customTags.Citation },\n        { name: 'HighlightMark', style: customTags.HighlightMark },\n        // NOTE: The convention {TagName}/... means that the corresponding styles\n        // from the syntax theme get assigned to all child nodes that are contained\n        // within this node as well. The default is to only style otherwise \"empty\"\n        // spans of plain text.\n        { name: 'HighlightContent', style: { 'HighlightContent/...': customTags.HighlightContent } },\n        { name: 'Footnote', style: customTags.Footnote },\n        { name: 'FootnoteRef', style: customTags.FootnoteRef },\n        { name: 'FootnoteRefLabel', style: customTags.FootnoteRefLabel },\n        { name: 'FootnoteRefBody', style: customTags.FootnoteRefBody },\n        { name: 'ZknLink', style: customTags.ZknLink },\n        { name: 'ZknLinkContent', style: customTags.ZknLinkContent },\n        { name: 'ZknLinkTitle', style: customTags.ZknLinkTitle },\n        { name: 'ZknLinkPipe', style: customTags.ZknLinkPipe },\n        { name: 'ZknTag', style: customTags.ZknTag },\n        { name: 'ZknTagContent', style: customTags.ZknTagContent },\n        { name: 'PandocAttribute', style: customTags.PandocAttribute }\n      ]\n    }\n  })\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"66976394cefc9305088f4cf726538dccfd245e55","contentHash":"ec07507e2ebd72d3270bafe55e9e8b4ecf08110241297645d9174a7ca8f6e5e0"},"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/modules/markdown-editor/util/custom-tags.ts":{"path":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/modules/markdown-editor/util/custom-tags.ts","statementMap":{"0":{"start":{"line":18,"column":0},"end":{"line":18,"column":62}},"1":{"start":{"line":19,"column":0},"end":{"line":19,"column":28}},"2":{"start":{"line":20,"column":20},"end":{"line":20,"column":47}},"3":{"start":{"line":22,"column":0},"end":{"line":47,"column":2}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/modules/markdown-editor/util/custom-tags.ts","sources":["/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/modules/markdown-editor/util/custom-tags.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;;GAeG;;;AAEH,gDAA4C;AAE5C,wFAAwF;AAC3E,QAAA,UAAU,GAAG;IACxB,eAAe,EAAE,eAAG,CAAC,MAAM,CAAC,gBAAI,CAAC,SAAS,CAAC;IAC3C,oBAAoB,EAAE,eAAG,CAAC,MAAM,CAAC,gBAAI,CAAC,gBAAgB,CAAC;IACvD,kBAAkB,EAAE,eAAG,CAAC,MAAM,CAAC,gBAAI,CAAC,gBAAgB,CAAC;IACrD,mDAAmD;IACnD,mBAAmB,EAAE,eAAG,CAAC,MAAM,EAAE;IACjC,kBAAkB,EAAE,eAAG,CAAC,MAAM,EAAE;IAChC,kBAAkB,EAAE,eAAG,CAAC,MAAM,EAAE;IAChC,QAAQ,EAAE,eAAG,CAAC,MAAM,EAAE;IACtB,QAAQ,EAAE,eAAG,CAAC,MAAM,EAAE;IACtB,WAAW,EAAE,eAAG,CAAC,MAAM,EAAE;IACzB,gBAAgB,EAAE,eAAG,CAAC,MAAM,EAAE;IAC9B,eAAe,EAAE,eAAG,CAAC,MAAM,EAAE;IAC7B,qBAAqB;IACrB,OAAO,EAAE,eAAG,CAAC,MAAM,EAAE;IACrB,cAAc,EAAE,eAAG,CAAC,MAAM,EAAE;IAC5B,YAAY,EAAE,eAAG,CAAC,MAAM,EAAE;IAC1B,WAAW,EAAE,eAAG,CAAC,MAAM,CAAC,gBAAI,CAAC,qBAAqB,CAAC;IACnD,oBAAoB;IACpB,MAAM,EAAE,eAAG,CAAC,MAAM,EAAE;IACpB,aAAa,EAAE,eAAG,CAAC,MAAM,EAAE;IAC3B,8DAA8D;IAC9D,eAAe,EAAE,eAAG,CAAC,MAAM,EAAE;IAC7B,aAAa,EAAE,eAAG,CAAC,MAAM,EAAE;IAC3B,gBAAgB,EAAE,eAAG,CAAC,MAAM,EAAE;CAC/B,CAAA","sourcesContent":["/**\n * @ignore\n * BEGIN HEADER\n *\n * Contains:        Custom Tags\n * CVM-Role:        Utility Function\n * Maintainer:      Hendrik Erz\n * License:         GNU GPL v3\n *\n * Description:     This module defines custom tags that our custom parsers add\n *                  to the Lezer Trees emitted by the Markdown mode. These tags\n *                  are provided both to the Markdown parser as well as the\n *                  highlighter mode so they know about them.\n *\n * END HEADER\n */\n\nimport { Tag, tags } from '@lezer/highlight'\n\n// NOTE: Changes here must be reflected in theme/syntax.ts and parser/markdown-parser.ts\nexport const customTags = {\n  YAMLFrontmatter: Tag.define(tags.monospace),\n  YAMLFrontmatterStart: Tag.define(tags.contentSeparator),\n  YAMLFrontmatterEnd: Tag.define(tags.contentSeparator),\n  // Meta-tags only used to contain the actual values\n  YAMLFrontmatterPair: Tag.define(),\n  YAMLFrontmatterSeq: Tag.define(),\n  YAMLFrontmatterMap: Tag.define(),\n  Citation: Tag.define(),\n  Footnote: Tag.define(),\n  FootnoteRef: Tag.define(),\n  FootnoteRefLabel: Tag.define(),\n  FootnoteRefBody: Tag.define(),\n  // Zettelkasten links\n  ZknLink: Tag.define(),\n  ZknLinkContent: Tag.define(),\n  ZknLinkTitle: Tag.define(),\n  ZknLinkPipe: Tag.define(tags.processingInstruction),\n  // Zettelkasten tags\n  ZknTag: Tag.define(),\n  ZknTagContent: Tag.define(),\n  // Pandoc attributes, like: `# Heading or Title {.unnumbered}`\n  PandocAttribute: Tag.define(),\n  HighlightMark: Tag.define(),\n  HighlightContent: Tag.define()\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"bd0d725f5809a338dac9854a375cb603d0d77b54","contentHash":"6f12f7b9192f771bb42c59b104f7703f8eb76c02dbe0d8393d82e9a565482133"},"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/modules/markdown-editor/parser/citation-parser.ts":{"path":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/modules/markdown-editor/parser/citation-parser.ts","statementMap":{"0":{"start":{"line":15,"column":22},"end":{"line":17,"column":1}},"1":{"start":{"line":16,"column":4},"end":{"line":16,"column":62}},"2":{"start":{"line":18,"column":0},"end":{"line":18,"column":62}},"3":{"start":{"line":19,"column":0},"end":{"line":19,"column":32}},"4":{"start":{"line":20,"column":28},"end":{"line":20,"column":86}},"5":{"start":{"line":22,"column":0},"end":{"line":56,"column":2}},"6":{"start":{"line":28,"column":8},"end":{"line":31,"column":9}},"7":{"start":{"line":30,"column":12},"end":{"line":30,"column":22}},"8":{"start":{"line":33,"column":22},"end":{"line":33,"column":54}},"9":{"start":{"line":35,"column":27},"end":{"line":35,"column":65}},"10":{"start":{"line":39,"column":28},"end":{"line":39,"column":80}},"11":{"start":{"line":40,"column":8},"end":{"line":42,"column":9}},"12":{"start":{"line":41,"column":12},"end":{"line":41,"column":22}},"13":{"start":{"line":48,"column":26},"end":{"line":48,"column":91}},"14":{"start":{"line":48,"column":78},"end":{"line":48,"column":90}},"15":{"start":{"line":50,"column":8},"end":{"line":52,"column":9}},"16":{"start":{"line":51,"column":12},"end":{"line":51,"column":22}},"17":{"start":{"line":54,"column":8},"end":{"line":54,"column":90}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":15,"column":56},"end":{"line":15,"column":57}},"loc":{"start":{"line":15,"column":71},"end":{"line":17,"column":1}},"line":15},"1":{"name":"(anonymous_1)","decl":{"start":{"line":26,"column":11},"end":{"line":26,"column":12}},"loc":{"start":{"line":26,"column":31},"end":{"line":55,"column":5}},"line":26},"2":{"name":"(anonymous_2)","decl":{"start":{"line":48,"column":73},"end":{"line":48,"column":74}},"loc":{"start":{"line":48,"column":78},"end":{"line":48,"column":90}},"line":48}},"branchMap":{"0":{"loc":{"start":{"line":15,"column":22},"end":{"line":17,"column":1}},"type":"binary-expr","locations":[{"start":{"line":15,"column":23},"end":{"line":15,"column":27}},{"start":{"line":15,"column":31},"end":{"line":15,"column":51}},{"start":{"line":15,"column":56},"end":{"line":17,"column":1}}],"line":15},"1":{"loc":{"start":{"line":16,"column":11},"end":{"line":16,"column":61}},"type":"cond-expr","locations":[{"start":{"line":16,"column":37},"end":{"line":16,"column":40}},{"start":{"line":16,"column":43},"end":{"line":16,"column":61}}],"line":16},"2":{"loc":{"start":{"line":16,"column":12},"end":{"line":16,"column":33}},"type":"binary-expr","locations":[{"start":{"line":16,"column":12},"end":{"line":16,"column":15}},{"start":{"line":16,"column":19},"end":{"line":16,"column":33}}],"line":16},"3":{"loc":{"start":{"line":28,"column":8},"end":{"line":31,"column":9}},"type":"if","locations":[{"start":{"line":28,"column":8},"end":{"line":31,"column":9}},{"start":{},"end":{}}],"line":28},"4":{"loc":{"start":{"line":28,"column":12},"end":{"line":28,"column":38}},"type":"binary-expr","locations":[{"start":{"line":28,"column":12},"end":{"line":28,"column":23}},{"start":{"line":28,"column":27},"end":{"line":28,"column":38}}],"line":28},"5":{"loc":{"start":{"line":35,"column":27},"end":{"line":35,"column":65}},"type":"cond-expr","locations":[{"start":{"line":35,"column":37},"end":{"line":35,"column":60}},{"start":{"line":35,"column":63},"end":{"line":35,"column":65}}],"line":35},"6":{"loc":{"start":{"line":39,"column":28},"end":{"line":39,"column":80}},"type":"binary-expr","locations":[{"start":{"line":39,"column":28},"end":{"line":39,"column":45}},{"start":{"line":39,"column":49},"end":{"line":39,"column":80}}],"line":39},"7":{"loc":{"start":{"line":40,"column":8},"end":{"line":42,"column":9}},"type":"if","locations":[{"start":{"line":40,"column":8},"end":{"line":42,"column":9}},{"start":{},"end":{}}],"line":40},"8":{"loc":{"start":{"line":50,"column":8},"end":{"line":52,"column":9}},"type":"if","locations":[{"start":{"line":50,"column":8},"end":{"line":52,"column":9}},{"start":{},"end":{}}],"line":50}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1176,"7":1172,"8":4,"9":4,"10":4,"11":4,"12":0,"13":4,"14":0,"15":4,"16":4,"17":0},"f":{"0":1,"1":1176,"2":0},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1],"3":[1172,4],"4":[1176,1176],"5":[4,0],"6":[4,4],"7":[0,4],"8":[4,0]},"inputSourceMap":{"version":3,"file":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/modules/markdown-editor/parser/citation-parser.ts","sources":["/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/modules/markdown-editor/parser/citation-parser.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;GAYG;;;;;;AAGH,uFAA6D;AAE7D,yFAAyF;AAC5E,QAAA,cAAc,GAAiB;IAC1C,0CAA0C;IAC1C,IAAI,EAAE,WAAW;IACjB,MAAM,EAAE,MAAM,EAAE,0DAA0D;IAC1E,KAAK,EAAE,CAAC,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,EAAE;QACxB,0DAA0D;QAC1D,IAAI,IAAI,KAAK,EAAE,IAAI,IAAI,KAAK,EAAE,EAAE,CAAC;YAC/B,iBAAiB;YACjB,OAAO,CAAC,CAAC,CAAA;QACX,CAAC;QAED,6BAA6B;QAC7B,MAAM,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC,CAAA;QAE9C,uCAAuC;QACvC,MAAM,UAAU,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAA;QACzD,2EAA2E;QAC3E,0EAA0E;QAC1E,sBAAsB;QACtB,MAAM,WAAW,GAAG,UAAU,KAAK,EAAE,IAAI,UAAU,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAA;QACxE,IAAI,CAAC,WAAW,EAAE,CAAC;YACjB,OAAO,CAAC,CAAC,CAAA;QACX,CAAC;QAED,4EAA4E;QAC5E,0EAA0E;QAC1E,0EAA0E;QAC1E,2EAA2E;QAC3E,2DAA2D;QAC3D,MAAM,SAAS,GAAG,IAAA,2BAAgB,EAAC,KAAK,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAA;QAEnE,sEAAsE;QACtE,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;YAC3B,OAAO,CAAC,CAAC,CAAA;QACX,CAAC;QAED,+DAA+D;QAC/D,OAAO,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,CAAC,UAAU,EAAE,GAAG,EAAE,GAAG,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAA;IACnF,CAAC;CACF,CAAA","sourcesContent":["/**\n * @ignore\n * BEGIN HEADER\n *\n * Contains:        Citation Parser\n * CVM-Role:        InlineParser\n * Maintainer:      Hendrik Erz\n * License:         GNU GPL v3\n *\n * Description:     This inline parser adds citation elements to the Lezer tree.\n *\n * END HEADER\n */\n\nimport { type InlineParser } from '@lezer/markdown'\nimport extractCitations from '@common/util/extract-citations'\n\n// TODO: Docs for this: https://github.com/lezer-parser/markdown#user-content-blockparser\nexport const citationParser: InlineParser = {\n  // This parser should only match citations\n  name: 'citations',\n  before: 'Link', // [@citekey, p. 123] will otherwise be detected as a link\n  parse: (ctx, next, pos) => {\n    // The next char must be either an opening bracket or an @\n    if (next !== 64 && next !== 91) {\n      // 64 = [; 91 = @\n      return -1\n    }\n\n    // Ignore anything before pos\n    const slice = ctx.text.slice(pos - ctx.offset)\n\n    // Ensure the character before is valid\n    const charBefore = pos > 0 ? ctx.slice(pos - 1, pos) : ''\n    // NOTE: The Markdown mode will actually count a single inline context with\n    // single linebreaks in between (due to hard-wrapping), so we also have to\n    // check for newlines.\n    const validBefore = charBefore === '' || '( \\n\\r\\t'.includes(charBefore)\n    if (!validBefore) {\n      return -1\n    }\n\n    // NOTE: We MUST always extract the citations from the whole line. Otherwise\n    // @-symbols in illegal positions (e.g. emails) will be detected as valid.\n    // However, running extractCitations on a considerable piece of text has a\n    // large performance impact, so we need to ensure we only run it if there's\n    // a reasonable chance there's a citation at this position.\n    const citations = extractCitations(slice).filter(c => c.from === 0)\n\n    // The first found citation after currentOffset must be exactly there.\n    if (citations.length !== 1) {\n      return -1\n    }\n\n    // At this point we have a citation and it's at the current pos\n    return ctx.addElement(ctx.elt('Citation', pos, pos + citations[0].source.length))\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"b7e5ea1abc3579db26d800196c805ada8bf9eb94","contentHash":"38e3d4642a544fb8d17459dfdafb2ecda2b9c8f90178b7a9c6b4ddb36bf9e7bb"},"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/util/extract-citations.ts":{"path":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/util/extract-citations.ts","statementMap":{"0":{"start":{"line":20,"column":0},"end":{"line":20,"column":62}},"1":{"start":{"line":21,"column":0},"end":{"line":21,"column":35}},"2":{"start":{"line":29,"column":22},"end":{"line":46,"column":1}},"3":{"start":{"line":60,"column":19},"end":{"line":60,"column":119}},"4":{"start":{"line":75,"column":23},"end":{"line":75,"column":183}},"5":{"start":{"line":92,"column":18},"end":{"line":92,"column":59}},"6":{"start":{"line":105,"column":21},"end":{"line":109,"column":5}},"7":{"start":{"line":110,"column":4},"end":{"line":112,"column":5}},"8":{"start":{"line":111,"column":8},"end":{"line":111,"column":24}},"9":{"start":{"line":114,"column":4},"end":{"line":114,"column":27}},"10":{"start":{"line":116,"column":4},"end":{"line":138,"column":5}},"11":{"start":{"line":117,"column":8},"end":{"line":137,"column":9}},"12":{"start":{"line":118,"column":12},"end":{"line":136,"column":13}},"13":{"start":{"line":119,"column":16},"end":{"line":119,"column":39}},"14":{"start":{"line":120,"column":16},"end":{"line":134,"column":17}},"15":{"start":{"line":123,"column":20},"end":{"line":123,"column":76}},"16":{"start":{"line":128,"column":20},"end":{"line":128,"column":75}},"17":{"start":{"line":129,"column":34},"end":{"line":129,"column":65}},"18":{"start":{"line":130,"column":20},"end":{"line":133,"column":21}},"19":{"start":{"line":131,"column":24},"end":{"line":131,"column":52}},"20":{"start":{"line":132,"column":24},"end":{"line":132,"column":89}},"21":{"start":{"line":135,"column":16},"end":{"line":135,"column":32}},"22":{"start":{"line":142,"column":4},"end":{"line":154,"column":5}},"23":{"start":{"line":143,"column":8},"end":{"line":143,"column":34}},"24":{"start":{"line":149,"column":22},"end":{"line":149,"column":44}},"25":{"start":{"line":150,"column":8},"end":{"line":153,"column":9}},"26":{"start":{"line":151,"column":12},"end":{"line":151,"column":40}},"27":{"start":{"line":152,"column":12},"end":{"line":152,"column":68}},"28":{"start":{"line":155,"column":4},"end":{"line":155,"column":20}},"29":{"start":{"line":165,"column":21},"end":{"line":165,"column":23}},"30":{"start":{"line":166,"column":4},"end":{"line":260,"column":5}},"31":{"start":{"line":167,"column":19},"end":{"line":167,"column":30}},"32":{"start":{"line":168,"column":17},"end":{"line":168,"column":39}},"33":{"start":{"line":169,"column":26},"end":{"line":169,"column":28}},"34":{"start":{"line":170,"column":24},"end":{"line":170,"column":29}},"35":{"start":{"line":171,"column":29},"end":{"line":171,"column":37}},"36":{"start":{"line":172,"column":37},"end":{"line":172,"column":45}},"37":{"start":{"line":173,"column":31},"end":{"line":173,"column":39}},"38":{"start":{"line":174,"column":31},"end":{"line":174,"column":39}},"39":{"start":{"line":178,"column":8},"end":{"line":180,"column":9}},"40":{"start":{"line":179,"column":12},"end":{"line":179,"column":19}},"41":{"start":{"line":181,"column":8},"end":{"line":257,"column":9}},"42":{"start":{"line":183,"column":12},"end":{"line":246,"column":13}},"43":{"start":{"line":184,"column":30},"end":{"line":184,"column":70}},"44":{"start":{"line":185,"column":16},"end":{"line":187,"column":17}},"45":{"start":{"line":186,"column":20},"end":{"line":186,"column":29}},"46":{"start":{"line":190,"column":37},"end":{"line":197,"column":17}},"47":{"start":{"line":200,"column":34},"end":{"line":200,"column":53}},"48":{"start":{"line":201,"column":16},"end":{"line":209,"column":17}},"49":{"start":{"line":202,"column":20},"end":{"line":202,"column":85}},"50":{"start":{"line":203,"column":20},"end":{"line":208,"column":21}},"51":{"start":{"line":204,"column":24},"end":{"line":204,"column":105}},"52":{"start":{"line":207,"column":24},"end":{"line":207,"column":63}},"53":{"start":{"line":216,"column":40},"end":{"line":216,"column":68}},"54":{"start":{"line":217,"column":48},"end":{"line":217,"column":84}},"55":{"start":{"line":218,"column":34},"end":{"line":218,"column":53}},"56":{"start":{"line":220,"column":38},"end":{"line":220,"column":42}},"57":{"start":{"line":221,"column":16},"end":{"line":230,"column":17}},"58":{"start":{"line":224,"column":20},"end":{"line":224,"column":46}},"59":{"start":{"line":225,"column":20},"end":{"line":225,"column":44}},"60":{"start":{"line":227,"column":21},"end":{"line":230,"column":17}},"61":{"start":{"line":228,"column":20},"end":{"line":228,"column":135}},"62":{"start":{"line":229,"column":20},"end":{"line":229,"column":113}},"63":{"start":{"line":231,"column":51},"end":{"line":231,"column":94}},"64":{"start":{"line":232,"column":16},"end":{"line":232,"column":47}},"65":{"start":{"line":233,"column":16},"end":{"line":235,"column":17}},"66":{"start":{"line":234,"column":20},"end":{"line":234,"column":47}},"67":{"start":{"line":236,"column":16},"end":{"line":244,"column":17}},"68":{"start":{"line":237,"column":20},"end":{"line":237,"column":49}},"69":{"start":{"line":239,"column":21},"end":{"line":244,"column":17}},"70":{"start":{"line":243,"column":20},"end":{"line":243,"column":51}},"71":{"start":{"line":245,"column":16},"end":{"line":245,"column":45}},"72":{"start":{"line":250,"column":12},"end":{"line":250,"column":29}},"73":{"start":{"line":251,"column":12},"end":{"line":256,"column":15}},"74":{"start":{"line":259,"column":8},"end":{"line":259,"column":76}},"75":{"start":{"line":261,"column":4},"end":{"line":261,"column":20}}},"fnMap":{"0":{"name":"parseSuffix","decl":{"start":{"line":104,"column":9},"end":{"line":104,"column":20}},"loc":{"start":{"line":104,"column":46},"end":{"line":156,"column":1}},"line":104},"1":{"name":"extractCitations","decl":{"start":{"line":164,"column":9},"end":{"line":164,"column":25}},"loc":{"start":{"line":164,"column":36},"end":{"line":262,"column":1}},"line":164}},"branchMap":{"0":{"loc":{"start":{"line":110,"column":4},"end":{"line":112,"column":5}},"type":"if","locations":[{"start":{"line":110,"column":4},"end":{"line":112,"column":5}},{"start":{},"end":{}}],"line":110},"1":{"loc":{"start":{"line":118,"column":12},"end":{"line":136,"column":13}},"type":"if","locations":[{"start":{"line":118,"column":12},"end":{"line":136,"column":13}},{"start":{},"end":{}}],"line":118},"2":{"loc":{"start":{"line":120,"column":16},"end":{"line":134,"column":17}},"type":"if","locations":[{"start":{"line":120,"column":16},"end":{"line":134,"column":17}},{"start":{"line":125,"column":21},"end":{"line":134,"column":17}}],"line":120},"3":{"loc":{"start":{"line":130,"column":20},"end":{"line":133,"column":21}},"type":"if","locations":[{"start":{"line":130,"column":20},"end":{"line":133,"column":21}},{"start":{},"end":{}}],"line":130},"4":{"loc":{"start":{"line":142,"column":4},"end":{"line":154,"column":5}},"type":"if","locations":[{"start":{"line":142,"column":4},"end":{"line":154,"column":5}},{"start":{"line":145,"column":9},"end":{"line":154,"column":5}}],"line":142},"5":{"loc":{"start":{"line":150,"column":8},"end":{"line":153,"column":9}},"type":"if","locations":[{"start":{"line":150,"column":8},"end":{"line":153,"column":9}},{"start":{},"end":{}}],"line":150},"6":{"loc":{"start":{"line":178,"column":8},"end":{"line":180,"column":9}},"type":"if","locations":[{"start":{"line":178,"column":8},"end":{"line":180,"column":9}},{"start":{},"end":{}}],"line":178},"7":{"loc":{"start":{"line":181,"column":8},"end":{"line":257,"column":9}},"type":"if","locations":[{"start":{"line":181,"column":8},"end":{"line":257,"column":9}},{"start":{"line":248,"column":13},"end":{"line":257,"column":9}}],"line":181},"8":{"loc":{"start":{"line":185,"column":16},"end":{"line":187,"column":17}},"type":"if","locations":[{"start":{"line":185,"column":16},"end":{"line":187,"column":17}},{"start":{},"end":{}}],"line":185},"9":{"loc":{"start":{"line":201,"column":16},"end":{"line":209,"column":17}},"type":"if","locations":[{"start":{"line":201,"column":16},"end":{"line":209,"column":17}},{"start":{},"end":{}}],"line":201},"10":{"loc":{"start":{"line":203,"column":20},"end":{"line":208,"column":21}},"type":"if","locations":[{"start":{"line":203,"column":20},"end":{"line":208,"column":21}},{"start":{"line":206,"column":25},"end":{"line":208,"column":21}}],"line":203},"11":{"loc":{"start":{"line":221,"column":16},"end":{"line":230,"column":17}},"type":"if","locations":[{"start":{"line":221,"column":16},"end":{"line":230,"column":17}},{"start":{"line":227,"column":21},"end":{"line":230,"column":17}}],"line":221},"12":{"loc":{"start":{"line":221,"column":20},"end":{"line":221,"column":90}},"type":"binary-expr","locations":[{"start":{"line":221,"column":20},"end":{"line":221,"column":49}},{"start":{"line":221,"column":53},"end":{"line":221,"column":90}}],"line":221},"13":{"loc":{"start":{"line":227,"column":21},"end":{"line":230,"column":17}},"type":"if","locations":[{"start":{"line":227,"column":21},"end":{"line":230,"column":17}},{"start":{},"end":{}}],"line":227},"14":{"loc":{"start":{"line":227,"column":25},"end":{"line":227,"column":95}},"type":"binary-expr","locations":[{"start":{"line":227,"column":25},"end":{"line":227,"column":62}},{"start":{"line":227,"column":66},"end":{"line":227,"column":95}}],"line":227},"15":{"loc":{"start":{"line":228,"column":36},"end":{"line":228,"column":134}},"type":"cond-expr","locations":[{"start":{"line":228,"column":93},"end":{"line":228,"column":108}},{"start":{"line":228,"column":111},"end":{"line":228,"column":134}}],"line":228},"16":{"loc":{"start":{"line":228,"column":36},"end":{"line":228,"column":90}},"type":"binary-expr","locations":[{"start":{"line":228,"column":36},"end":{"line":228,"column":60}},{"start":{"line":228,"column":64},"end":{"line":228,"column":90}}],"line":228},"17":{"loc":{"start":{"line":229,"column":42},"end":{"line":229,"column":112}},"type":"cond-expr","locations":[{"start":{"line":229,"column":87},"end":{"line":229,"column":93}},{"start":{"line":229,"column":96},"end":{"line":229,"column":112}}],"line":229},"18":{"loc":{"start":{"line":229,"column":42},"end":{"line":229,"column":84}},"type":"binary-expr","locations":[{"start":{"line":229,"column":42},"end":{"line":229,"column":60}},{"start":{"line":229,"column":64},"end":{"line":229,"column":84}}],"line":229},"19":{"loc":{"start":{"line":233,"column":16},"end":{"line":235,"column":17}},"type":"if","locations":[{"start":{"line":233,"column":16},"end":{"line":235,"column":17}},{"start":{},"end":{}}],"line":233},"20":{"loc":{"start":{"line":236,"column":16},"end":{"line":244,"column":17}},"type":"if","locations":[{"start":{"line":236,"column":16},"end":{"line":244,"column":17}},{"start":{"line":239,"column":21},"end":{"line":244,"column":17}}],"line":236},"21":{"loc":{"start":{"line":236,"column":20},"end":{"line":236,"column":90}},"type":"binary-expr","locations":[{"start":{"line":236,"column":20},"end":{"line":236,"column":49}},{"start":{"line":236,"column":53},"end":{"line":236,"column":90}}],"line":236},"22":{"loc":{"start":{"line":239,"column":21},"end":{"line":244,"column":17}},"type":"if","locations":[{"start":{"line":239,"column":21},"end":{"line":244,"column":17}},{"start":{},"end":{}}],"line":239},"23":{"loc":{"start":{"line":239,"column":25},"end":{"line":239,"column":83}},"type":"binary-expr","locations":[{"start":{"line":239,"column":25},"end":{"line":239,"column":45}},{"start":{"line":239,"column":49},"end":{"line":239,"column":83}}],"line":239}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":22,"7":22,"8":9,"9":13,"10":13,"11":164,"12":1386,"13":6,"14":6,"15":1,"16":5,"17":5,"18":5,"19":5,"20":5,"21":6,"22":7,"23":2,"24":5,"25":5,"26":5,"27":5,"28":7,"29":22,"30":22,"31":19,"32":19,"33":19,"34":19,"35":19,"36":19,"37":19,"38":19,"39":19,"40":1,"41":19,"42":11,"43":14,"44":14,"45":0,"46":14,"47":14,"48":14,"49":2,"50":2,"51":1,"52":1,"53":14,"54":14,"55":14,"56":14,"57":14,"58":11,"59":11,"60":3,"61":3,"62":3,"63":14,"64":14,"65":14,"66":14,"67":14,"68":11,"69":3,"70":0,"71":14,"72":8,"73":8,"74":19,"75":22},"f":{"0":22,"1":22},"b":{"0":[9,13],"1":[6,1380],"2":[1,5],"3":[5,0],"4":[2,5],"5":[5,0],"6":[1,18],"7":[11,8],"8":[0,14],"9":[2,12],"10":[1,1],"11":[11,3],"12":[14,12],"13":[3,0],"14":[3,2],"15":[2,1],"16":[3,3],"17":[0,3],"18":[3,3],"19":[14,0],"20":[11,3],"21":[14,12],"22":[0,3],"23":[3,0]},"inputSourceMap":{"version":3,"file":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/util/extract-citations.ts","sources":["/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/util/extract-citations.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @ignore\n * BEGIN HEADER\n *\n * Contains:        extractCitations function\n * CVM-Role:        Utility Function\n * Maintainer:      Hendrik Erz\n * License:         GNU GPL v3\n *\n * Description:     This function can be used to extract citations from a piece\n *                  of Markdown text as closely to the implementation of Pandoc\n *                  Citeproc as possible. This function cannot guarantee full\n *                  compliance because I honestly can't read Haskell. However,\n *                  the documentation is quite extensive, so I orient myself at\n *                  those.\n *\n * END HEADER\n */\n\n/**\n * The locatorLabels have been sourced from the Citr library. Basically it's just\n * a map with valid CSL locator labels and an array of possible natural labels\n * which a user might want to write (instead of the standardized labels).\n *\n * @var {{ [key: string]: string[] }}}\n */\nconst locatorLabels: Record<string, string[]> = {\n  book: [ 'Buch', 'Bücher', 'B.', 'book', 'books', 'bk.', 'bks.', 'livre', 'livres', 'liv.' ],\n  chapter: [ 'Kapitel', 'Kap.', 'chapter', 'chapters', 'chap.', 'chaps', 'chapitre', 'chapitres' ],\n  column: [ 'Spalte', 'Spalten', 'Sp.', 'column', 'columns', 'col.', 'cols', 'colonne', 'colonnes' ],\n  figure: [ 'Abbildung', 'Abbildungen', 'Abb.', 'figure', 'figures', 'fig.', 'figs' ],\n  folio: [ 'Blatt', 'Blätter', 'Fol.', 'folio', 'folios', 'fol.', 'fols', 'fᵒ', 'fᵒˢ' ],\n  issue: [ 'Nummer', 'Nummern', 'Nr.', 'number', 'numbers', 'no.', 'nos.', 'numéro', 'numéros', 'nᵒ', 'nᵒˢ' ],\n  line: [ 'Zeile', 'Zeilen', 'Z', 'line', 'lines', 'l.', 'll.', 'ligne', 'lignes' ],\n  note: [ 'Note', 'Noten', 'N.', 'note', 'notes', 'n.', 'nn.' ],\n  opus: [ 'Opus', 'Opera', 'op.', 'opus', 'opera', 'opp.' ],\n  page: [ 'Seite', 'Seiten', 'S.', 'page', 'pages', 'p.', 'pp.' ],\n  paragraph: [ 'Absatz', 'Absätze', 'Abs.', '¶', '¶¶', 'paragraph', 'paragraphs', 'para.', 'paras', 'paragraphe', 'paragraphes', 'paragr.' ],\n  part: [ 'Teil', 'Teile', 'part', 'parts', 'pt.', 'pts', 'partie', 'parties', 'part.' ],\n  section: [ 'Abschnitt', 'Abschnitte', 'Abschn.', '§', '§§', 'section', 'sections', 'sec.', 'secs', 'sect.' ],\n  'sub verbo': [ 'sub verbo', 'sub verbis', 's.&#160;v.', 's.&#160;vv.', 's.v.', 's.vv.' ],\n  verse: [ 'Vers', 'Verse', 'V.', 'verse', 'verses', 'v.', 'vv.', 'verset', 'versets' ],\n  volume: [ 'Band', 'Bände', 'Bd.', 'Bde.', 'volume', 'volumes', 'vol.', 'vols.' ]\n}\n\n/**\n * Citation detection: The first alternative matches \"full\" citations surrounded\n * by square brackets, whereas the second one matches in-text citations,\n * optionally with suffixes.\n *\n * * Group 1 matches regular \"full\" citations\n * * Group 2 matches in-text citations (not surrounded by brackets)\n * * Group 3 matches optional square-brackets suffixes to group 2 matches\n *\n * For more information, see https://pandoc.org/MANUAL.html#extension-citations\n *\n * @var {RegExp}\n */\nconst citationRE = /(?:\\[([^[\\]]*@[^[\\]]+)\\])|(?<=\\s|^|(-))(?:@([\\p{L}\\d_][^\\s]*[\\p{L}\\d_]|\\{.+\\})(?: +\\[(.*?)\\])?)/gum\n\n/**\n * I hate everything at this. This can match every single possible variation on\n * whatever the f*** you can possibly do within square brackets according to the\n * documentation. I opted for named groups for these because otherwise I have no\n * idea what I have been doing here.\n *\n * * Group prefix: Contains the prefix, ends with a dash if we should suppress the author\n * * Group citekey: Contains the actual citekey, can be surrounded in curly brackets\n * * Group explicitLocator: Contains an explicit locator statement. If given, we MUST ignore any form of locator in the suffix\n * * Group explicitLocatorInSuffix: Same as above, but not concatenated to the citekey\n * * Group suffix: Contains the suffix, but may start with a locator (if explicitLocator and explicitLocatorInSuffix are not given)\n *\n * @var {RegExp}\n */\nconst fullCitationRE = /(?<prefix>.+)?(?:@(?<citekey>[\\p{L}\\d_][^\\s{]*[\\p{L}\\d_]|\\{.+\\}))(?:\\{(?<explicitLocator>.*)\\})?(?:,\\s+(?:\\{(?<explicitLocatorInSuffix>.*)\\})?(?<suffix>.*))?/u\n\n/**\n * This regular expression matches locator ranges, like the following:\n *\n * * 23-45, and further (here it matches up to, not including the comma)\n * * 45\n * * 15423\n * * 14235-12532\n * * 12-34, 23, 56\n * * 12, 23-14, 23\n * * 12, 54, 12-23\n * * 1, 1-4\n * * 3\n * * NEW NEW NEW: Now also matches Roman numerals as sometimes used in forewords!\n *\n * @var {RegExp}\n */\nconst locatorRE = /^(?:[\\d, -]*\\d|[ivxlcdm, -]*[ivxlcdm])/i\n\n/**\n * This is the return interface from this module: It declares a from-to position\n * indicating where in the original Markdown string the citation has been found\n * and an array citations which contains the parsed CSL Items that can be passed\n * to citeproc-js.\n */\nexport interface CitePosition {\n  // The start position of this citation\n  from: number\n  // The end position of this citation\n  to: number\n  // The full source of this citation\n  source: string\n  // True if the citation should be composite\n  composite: boolean\n  // The list of cite items in CSL JSON style\n  citations: CiteItem[]\n}\n\n/**\n * This interface describes the potential return of the parseSuffix function. It\n * can return a locator, a label, and a suffix. More specifically, it will return\n * a label in any case, defaulting to \"page\", just like citeproc.\n */\ninterface CiteItemSuffix {\n  locator: string|undefined\n  label: string\n  suffix: string|undefined\n}\n\n// This is the same interface from citeproc.d.ts, but since the unit tests do not\n// load the ambient declaration files, we have to declare it here as well. Doesn't\n// hurt the linter.\ninterface CiteItem {\n  id: string\n  locator?: string\n  label?: string\n  'suppress-author'?: boolean\n  'author-only'?: boolean\n  prefix?: string\n  suffix?: string\n}\n\n/**\n * This takes a suffix and extracts optional label and locator from this. Pass\n * true for the containsLocator property to indicate to this function that what\n * it got was not a regular suffix with an optional locator, but an explicit\n * locator so it knows it just needs to look for an optional label.\n *\n * @param   {string}          suffix           The suffix to parse\n * @param   {boolean}         containsLocator  If true, forces parseSuffix to return a locator\n *\n * @return  {CiteItemSuffix}                   An object containing three optional properties locator, label, or suffix.\n */\nfunction parseSuffix (suffix: string|undefined, containsLocator: boolean): CiteItemSuffix {\n  const retValue: CiteItemSuffix = {\n    locator: undefined,\n    label: 'page',\n    suffix: undefined\n  }\n\n  if (suffix === undefined) {\n    return retValue\n  }\n\n  // Make sure the suffix does not start or end with spaces\n  suffix = suffix.trim()\n\n  // If there is a label, the suffix must start with it\n  for (const label in locatorLabels) {\n    for (const natural of locatorLabels[label]) {\n      if (suffix.toLowerCase().startsWith(natural.toLowerCase())) {\n        retValue.label = label\n        if (containsLocator) {\n          // The suffix actually is the full locator, we just had to extract\n          // the label from it. There is no remaining suffix.\n          retValue.locator = suffix.substr(natural.length).trim()\n        } else {\n          // The caller indicated that this is a regular suffix, so we must also\n          // extract the locator from what is left after label extraction.\n          retValue.suffix = suffix.substr(natural.length).trim()\n          const match = locatorRE.exec(retValue.suffix)\n          if (match !== null) {\n            retValue.locator = match[0] // Extract the full match\n            retValue.suffix = retValue.suffix.substr(match[0].length).trim()\n          }\n        }\n\n        return retValue // Early exit\n      }\n    }\n  }\n\n  // If we're here, there was no explicit label given, but the caller has indicated\n  // that this suffix MUST contain a locator. This means that the whole suffix is\n  // the locator.\n  if (containsLocator) {\n    retValue.locator = suffix\n  } else {\n    // The caller has not indicated that the whole suffix is the locator, so it\n    // can be at the beginning. We only accept simple page/number ranges here.\n    // For everything, the user should please be more specific.\n    const match = locatorRE.exec(suffix)\n    if (match !== null) {\n      retValue.locator = match[0] // Full match is the locator\n      retValue.suffix = suffix.substr(match[0].length).trim() // The rest is the suffix.\n    }\n  }\n\n  return retValue\n}\n\n/**\n * Extracts citations from a string of Markdown, similar to how Citeproc does it.\n *\n * @param   {string}          markdown  The Markdown to parse\n *\n * @return  {CitePosition[]}            An array containing every found citation\n */\nexport default function extractCitations (markdown: string): CitePosition[] {\n  const retValue = []\n\n  for (const match of markdown.matchAll(citationRE)) {\n    let from = match.index! // Here we know index will be set\n    let to = from + match[0].length\n    const citations = []\n    let composite = false // Is set to true for in-text citations\n\n    const fullCitation: string|undefined = match[1]\n    const inTextSuppressAuthor: string|undefined = match[2]\n    const inTextCitation: string|undefined = match[3]\n    const optionalSuffix: string|undefined = match[4]\n\n    // If we have an in-text citation and we should suppress the author, the\n    // match.index does NOT include the positive lookbehind, so we have to manually\n    // shift \"from\" to one before.\n    if (inTextSuppressAuthor !== undefined) {\n      from--\n    }\n\n    if (fullCitation !== undefined) {\n      // We have a lame, full citation.\n      for (const citationPart of fullCitation.split(';')) {\n        const match = fullCitationRE.exec(citationPart.trim())\n        if (match === null) {\n          continue // Faulty citation\n        }\n\n        // We explicitly cast groups since we have groups in our RegExp and as\n        // such the groups object will be set.\n        const thisCitation: CiteItem = {\n          id: (match.groups as any).citekey.replace(/{(.+)}/, '$1'),\n          prefix: undefined,\n          locator: undefined,\n          label: 'page',\n          'suppress-author': false,\n          suffix: undefined\n        }\n\n        // First, deal with the prefix. The speciality here is that it can\n        // indicate if we should suppress the author.\n        const rawPrefix: string|undefined = (match.groups as any).prefix\n        if (rawPrefix !== undefined) {\n          thisCitation['suppress-author'] = rawPrefix.trim().endsWith('-')\n          if (thisCitation['suppress-author']) {\n            thisCitation.prefix = rawPrefix.substring(0, rawPrefix.trim().length - 1).trim()\n          } else {\n            thisCitation.prefix = rawPrefix.trim()\n          }\n        }\n\n        // Second, deal with the suffix. This one can be much more tricky than\n        // the prefix. We have three alternatives where the locator may be\n        // present: If we have an explicitLocator or an explicitLocatorInSuffix,\n        // we should extract the locator from there and leave the actual suffix\n        // untouched. Only if those two alternatives are not present, then we\n        // have a look at the rawSuffix and extract a (potential) locator.\n        const explicitLocator: string|undefined = (match.groups as any).explicitLocator\n        const explicitLocatorInSuffix: string|undefined = (match.groups as any).explicitLocatorInSuffix\n        const rawSuffix: string|undefined = (match.groups as any).suffix\n\n        let suffixToParse\n        let containsLocator = true\n        if (explicitLocator === undefined && explicitLocatorInSuffix === undefined) {\n          // Potential locator in rawSuffix. Only in this case should we overwrite\n          // the suffix (hence the same if-condition below)\n          suffixToParse = rawSuffix\n          containsLocator = false\n        } else if (explicitLocatorInSuffix !== undefined || explicitLocator !== undefined) {\n          suffixToParse = explicitLocator ?? explicitLocatorInSuffix\n          thisCitation.suffix = rawSuffix?.trim()\n        }\n\n        const { label, locator, suffix } = parseSuffix(suffixToParse, containsLocator)\n        thisCitation.locator = locator\n\n        if (label !== undefined) {\n          thisCitation.label = label\n        }\n\n        if (explicitLocator === undefined && explicitLocatorInSuffix === undefined) {\n          thisCitation.suffix = suffix\n        } else if (suffix !== undefined && thisCitation.locator !== undefined) {\n          // If we're here, we should not change the suffix, but parseSuffix may\n          // have put something into the suffix return. If we're here, that will\n          // definitely be a part of the locator.\n          thisCitation.locator += suffix\n        }\n\n        citations.push(thisCitation)\n      }\n    } else {\n      // We have an in-text citation, so we can take a shortcut\n      composite = true\n      citations.push({\n        prefix: undefined,\n        id: inTextCitation.replace(/{(.+)}/, '$1'),\n        'suppress-author': inTextSuppressAuthor !== undefined,\n        ...parseSuffix(optionalSuffix, false) // Populate more depending on the suffix\n      })\n    }\n\n    // After all of our yadda yadda, push the citation\n    retValue.push({ from, to, citations, composite, source: match[0] })\n  }\n\n  return retValue\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"f274685e6f9b792091f848bd923fdd916ef4872c","contentHash":"7ef0559069b59eefd56608e8f98ea89f0569a725ee62c1e0b44bfc9647470afd"},"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/modules/markdown-editor/parser/footnote-parser.ts":{"path":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/modules/markdown-editor/parser/footnote-parser.ts","statementMap":{"0":{"start":{"line":15,"column":0},"end":{"line":15,"column":62}},"1":{"start":{"line":16,"column":0},"end":{"line":16,"column":60}},"2":{"start":{"line":17,"column":24},"end":{"line":17,"column":50}},"3":{"start":{"line":19,"column":0},"end":{"line":36,"column":2}},"4":{"start":{"line":24,"column":8},"end":{"line":26,"column":9}},"5":{"start":{"line":25,"column":12},"end":{"line":25,"column":22}},"6":{"start":{"line":27,"column":33},"end":{"line":27,"column":49}},"7":{"start":{"line":29,"column":22},"end":{"line":29,"column":86}},"8":{"start":{"line":30,"column":8},"end":{"line":32,"column":9}},"9":{"start":{"line":31,"column":12},"end":{"line":31,"column":22}},"10":{"start":{"line":34,"column":8},"end":{"line":34,"column":79}},"11":{"start":{"line":37,"column":0},"end":{"line":72,"column":2}},"12":{"start":{"line":40,"column":22},"end":{"line":40,"column":56}},"13":{"start":{"line":41,"column":8},"end":{"line":43,"column":9}},"14":{"start":{"line":42,"column":12},"end":{"line":42,"column":25}},"15":{"start":{"line":44,"column":24},"end":{"line":44,"column":37}},"16":{"start":{"line":45,"column":22},"end":{"line":45,"column":95}},"17":{"start":{"line":46,"column":21},"end":{"line":46,"column":52}},"18":{"start":{"line":47,"column":17},"end":{"line":47,"column":49}},"19":{"start":{"line":48,"column":29},"end":{"line":48,"column":63}},"20":{"start":{"line":50,"column":8},"end":{"line":53,"column":9}},"21":{"start":{"line":51,"column":12},"end":{"line":51,"column":41}},"22":{"start":{"line":52,"column":12},"end":{"line":52,"column":39}},"23":{"start":{"line":55,"column":21},"end":{"line":55,"column":23}},"24":{"start":{"line":56,"column":8},"end":{"line":59,"column":9}},"25":{"start":{"line":57,"column":29},"end":{"line":57,"column":47}},"26":{"start":{"line":58,"column":12},"end":{"line":58,"column":50}},"27":{"start":{"line":63,"column":8},"end":{"line":65,"column":9}},"28":{"start":{"line":64,"column":12},"end":{"line":64,"column":26}},"29":{"start":{"line":66,"column":25},"end":{"line":66,"column":106}},"30":{"start":{"line":67,"column":21},"end":{"line":67,"column":73}},"31":{"start":{"line":68,"column":24},"end":{"line":68,"column":74}},"32":{"start":{"line":69,"column":8},"end":{"line":69,"column":32}},"33":{"start":{"line":70,"column":8},"end":{"line":70,"column":20}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":23,"column":4},"end":{"line":23,"column":5}},"loc":{"start":{"line":23,"column":26},"end":{"line":35,"column":5}},"line":23},"1":{"name":"(anonymous_1)","decl":{"start":{"line":39,"column":4},"end":{"line":39,"column":5}},"loc":{"start":{"line":39,"column":21},"end":{"line":71,"column":5}},"line":39}},"branchMap":{"0":{"loc":{"start":{"line":24,"column":8},"end":{"line":26,"column":9}},"type":"if","locations":[{"start":{"line":24,"column":8},"end":{"line":26,"column":9}},{"start":{},"end":{}}],"line":24},"1":{"loc":{"start":{"line":24,"column":12},"end":{"line":24,"column":38}},"type":"binary-expr","locations":[{"start":{"line":24,"column":12},"end":{"line":24,"column":23}},{"start":{"line":24,"column":27},"end":{"line":24,"column":38}}],"line":24},"2":{"loc":{"start":{"line":30,"column":8},"end":{"line":32,"column":9}},"type":"if","locations":[{"start":{"line":30,"column":8},"end":{"line":32,"column":9}},{"start":{},"end":{}}],"line":30},"3":{"loc":{"start":{"line":30,"column":12},"end":{"line":30,"column":45}},"type":"binary-expr","locations":[{"start":{"line":30,"column":12},"end":{"line":30,"column":26}},{"start":{"line":30,"column":30},"end":{"line":30,"column":45}}],"line":30},"4":{"loc":{"start":{"line":41,"column":8},"end":{"line":43,"column":9}},"type":"if","locations":[{"start":{"line":41,"column":8},"end":{"line":43,"column":9}},{"start":{},"end":{}}],"line":41},"5":{"loc":{"start":{"line":50,"column":15},"end":{"line":50,"column":64}},"type":"binary-expr","locations":[{"start":{"line":50,"column":15},"end":{"line":50,"column":29}},{"start":{"line":50,"column":33},"end":{"line":50,"column":64}}],"line":50},"6":{"loc":{"start":{"line":56,"column":15},"end":{"line":56,"column":93}},"type":"binary-expr","locations":[{"start":{"line":56,"column":15},"end":{"line":56,"column":38}},{"start":{"line":56,"column":42},"end":{"line":56,"column":93}}],"line":56},"7":{"loc":{"start":{"line":63,"column":8},"end":{"line":65,"column":9}},"type":"if","locations":[{"start":{"line":63,"column":8},"end":{"line":65,"column":9}},{"start":{},"end":{}}],"line":63}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1176,"5":1172,"6":4,"7":4,"8":4,"9":4,"10":0,"11":1,"12":28,"13":28,"14":28,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0},"f":{"0":1176,"1":28},"b":{"0":[1172,4],"1":[1176,1172],"2":[4,0],"3":[4,0],"4":[28,0],"5":[0,0],"6":[0,0],"7":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/modules/markdown-editor/parser/footnote-parser.ts","sources":["/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/modules/markdown-editor/parser/footnote-parser.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @ignore\n * BEGIN HEADER\n *\n * Contains:        Footnote Parser\n * CVM-Role:        InlineParser\n * Maintainer:      Hendrik Erz\n * License:         GNU GPL v3\n *\n * Description:     This inline parser adds footnote elements to the Lezer tree.\n *\n * END HEADER\n */\n\nimport { type InlineParser, type BlockParser } from '@lezer/markdown'\nimport { partialParse } from './partial-parse'\n\n// TODO: Docs for this: https://github.com/lezer-parser/markdown#user-content-blockparser\nexport const footnoteParser: InlineParser = {\n  // This parser should only match inline footnotes\n  name: 'footnotes',\n  before: 'Link', // [^1] will otherwise be detected as a link\n  parse (ctx, next, pos) {\n    if (next !== 91 && next !== 94) { // [, ^\n      return -1\n    }\n\n    const relativePosition = pos - ctx.offset\n    // Matches [^identifier] (alternative 1) and ^[inline] (alternative 2)\n    const match = /\\[\\^[^\\s]+?\\]|\\^\\[.+?\\]/.exec(ctx.text.slice(relativePosition))\n\n    if (match === null || match.index > 0) {\n      return -1\n    }\n\n    // At this point we have a footnote and it's at the current pos\n    return ctx.addElement(ctx.elt('Footnote', pos, pos + match[0].length))\n  }\n}\n\nexport const footnoteRefParser: BlockParser = {\n  name: 'footnote-refs',\n  parse (ctx, line) {\n    const match = /^\\[\\^[^\\s]+\\]:\\s/.exec(line.text)\n    if (match === null) {\n      return false\n    }\n\n    const refFrom = ctx.lineStart\n\n    const label = ctx.elt('FootnoteRefLabel', refFrom, ctx.lineStart + match[0].length - 1)\n\n    const from = ctx.lineStart + match[0].length\n    let to = ctx.lineStart + line.text.length // One newline less here\n\n    const footnoteBody: string[] = [line.text.slice(match[0].length)]\n\n    // Everything at least indented by 4 spaces OR empty lines belong to this paragraph\n    while (ctx.nextLine() && /^\\s{4,}|^\\s*$/.test(line.text)) {\n      footnoteBody.push(line.text)\n      to += line.text.length + 1\n    }\n\n    // Remove trailing empty lines from the body itself\n    let bodyTo = to\n    while (footnoteBody.length > 0 && footnoteBody[footnoteBody.length - 1].trim() === '') {\n      const lastline = footnoteBody.pop() as string\n      bodyTo = bodyTo - lastline.length - 1\n    }\n\n    // Since footnotes can be empty, the above while loop will substract one too\n    // much from empty footnotes (so that bodyTo = from - 1). Here we correct\n    // for that.\n    if (bodyTo < from) {\n      bodyTo = from\n    }\n\n    const treeElem = partialParse(ctx, ctx.parser, footnoteBody.join('\\n'), from)\n    const body = ctx.elt('FootnoteRefBody', from, bodyTo, [treeElem])\n\n    const wrapper = ctx.elt('FootnoteRef', refFrom, to, [ label, body ])\n    ctx.addElement(wrapper)\n\n    return true\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"11fe306a2ed5a312577d022f9521d4b703b3f164","contentHash":"8ae75b6fb85cab369a7c07af807203eca1f6bf8df49073273d57f7b0511cbd76"},"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/modules/markdown-editor/parser/partial-parse.ts":{"path":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/modules/markdown-editor/parser/partial-parse.ts","statementMap":{"0":{"start":{"line":16,"column":0},"end":{"line":16,"column":62}},"1":{"start":{"line":17,"column":0},"end":{"line":17,"column":36}},"2":{"start":{"line":18,"column":17},"end":{"line":18,"column":41}},"3":{"start":{"line":37,"column":22},"end":{"line":37,"column":40}},"4":{"start":{"line":42,"column":19},"end":{"line":42,"column":45}},"5":{"start":{"line":43,"column":23},"end":{"line":43,"column":44}},"6":{"start":{"line":44,"column":4},"end":{"line":46,"column":5}},"7":{"start":{"line":45,"column":8},"end":{"line":45,"column":47}},"8":{"start":{"line":47,"column":4},"end":{"line":47,"column":20}}},"fnMap":{"0":{"name":"partialParse","decl":{"start":{"line":36,"column":9},"end":{"line":36,"column":21}},"loc":{"start":{"line":36,"column":49},"end":{"line":48,"column":1}},"line":36}},"branchMap":{"0":{"loc":{"start":{"line":44,"column":4},"end":{"line":46,"column":5}},"type":"if","locations":[{"start":{"line":44,"column":4},"end":{"line":46,"column":5}},{"start":{},"end":{}}],"line":44}},"s":{"0":1,"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"f":{"0":0},"b":{"0":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/modules/markdown-editor/parser/partial-parse.ts","sources":["/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/modules/markdown-editor/parser/partial-parse.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;GAaG;;AAsBH,oCAaC;AAjCD,0CAAiD;AAGjD;;;;;;;;;;;;;;;;GAgBG;AACH,SAAgB,YAAY,CAAE,GAA+B,EAAE,MAAc,EAAE,IAAY,EAAE,MAAc;IACzG,MAAM,SAAS,GAAG,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAA;IACpC,4EAA4E;IAC5E,4EAA4E;IAC5E,yEAAyE;IACzE,aAAa;IACb,IAAI,QAAQ,GAAG,GAAG,CAAC,GAAG,CAAC,SAAS,EAAE,MAAM,CAAC,CAAA;IACzC,MAAM,UAAU,GAAG,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAA;IACxC,IAAI,UAAU,YAAY,aAAI,EAAE,CAAC;QAC/B,QAAQ,GAAG,GAAG,CAAC,GAAG,CAAC,UAAU,EAAE,MAAM,CAAC,CAAA;IACxC,CAAC;IAED,OAAO,QAAQ,CAAA;AACjB,CAAC","sourcesContent":["/**\n * @ignore\n * BEGIN HEADER\n *\n * Contains:        Partial Parse\n * CVM-Role:        Utility Function\n * Maintainer:      Hendrik Erz\n * License:         GNU GPL v3\n *\n * Description:     Given a parser function, this utility function renders a\n *                  document part and returns the partial tree for that part.\n *\n * END HEADER\n */\n\nimport { type Parser, Tree } from '@lezer/common'\nimport { type BlockContext, type InlineContext, type Element } from '@lezer/markdown'\n\n/**\n * This function parses the given `text` using a `parser` of your choice and\n * returns an `Element` that you can attach to a @lezer/markdown tree. This\n * helps if you need to parse a piece of text inside a document with a known\n * language but have to wrap it into some custom element. NOTE: Only to be used\n * within a block or inline parser within the main Markdown parser!\n *\n * @param   {BlockContext|InlineContext}  ctx     The context\n * @param   {Parser}                      parser  Either a Lezer parser or a\n *                                                StreamParser\n * @param   {string}                      text    The text to be parsed\n * @param   {number}                      offset  The offset in the document\n *                                                where `text` begins\n *\n * @return  {Element}                             A detached child tree for you\n *                                                to hook up.\n */\nexport function partialParse (ctx: BlockContext|InlineContext, parser: Parser, text: string, offset: number): Element {\n  const innerTree = parser.parse(text)\n  // Here we detach the syntax tree from the containing `Document` node, since\n  // a parser expects that it needs to parse a full document. However, a child\n  // `Document` element may or may not cause problems so we take it off its\n  // root here.\n  let treeElem = ctx.elt(innerTree, offset)\n  const firstChild = innerTree.children[0]\n  if (firstChild instanceof Tree) {\n    treeElem = ctx.elt(firstChild, offset)\n  }\n\n  return treeElem\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"b9ac6b8d760c887e11ffad656640de1c91a7fe94","contentHash":"e864970c72e08a4718e6eb3b5ed41408c64daca09e9b89ebac4f74d94ec93047"},"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/modules/markdown-editor/parser/frontmatter-parser.ts":{"path":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/modules/markdown-editor/parser/frontmatter-parser.ts","statementMap":{"0":{"start":{"line":15,"column":0},"end":{"line":15,"column":62}},"1":{"start":{"line":16,"column":0},"end":{"line":16,"column":35}},"2":{"start":{"line":17,"column":0},"end":{"line":17,"column":38}},"3":{"start":{"line":18,"column":17},"end":{"line":18,"column":41}},"4":{"start":{"line":19,"column":20},"end":{"line":19,"column":52}},"5":{"start":{"line":24,"column":19},"end":{"line":24,"column":58}},"6":{"start":{"line":25,"column":4},"end":{"line":32,"column":7}},"7":{"start":{"line":26,"column":8},"end":{"line":31,"column":9}},"8":{"start":{"line":27,"column":12},"end":{"line":27,"column":78}},"9":{"start":{"line":27,"column":46},"end":{"line":27,"column":75}},"10":{"start":{"line":30,"column":12},"end":{"line":30,"column":24}},"11":{"start":{"line":39,"column":0},"end":{"line":90,"column":2}},"12":{"start":{"line":49,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":50,"column":12},"end":{"line":50,"column":25}},"14":{"start":{"line":56,"column":26},"end":{"line":56,"column":28}},"15":{"start":{"line":57,"column":8},"end":{"line":59,"column":9}},"16":{"start":{"line":58,"column":12},"end":{"line":58,"column":38}},"17":{"start":{"line":60,"column":8},"end":{"line":65,"column":9}},"18":{"start":{"line":64,"column":12},"end":{"line":64,"column":25}},"19":{"start":{"line":70,"column":8},"end":{"line":72,"column":9}},"20":{"start":{"line":71,"column":12},"end":{"line":71,"column":25}},"21":{"start":{"line":78,"column":28},"end":{"line":82,"column":10}},"22":{"start":{"line":86,"column":8},"end":{"line":86,"column":23}},"23":{"start":{"line":87,"column":8},"end":{"line":87,"column":36}},"24":{"start":{"line":88,"column":8},"end":{"line":88,"column":20}}},"fnMap":{"0":{"name":"yamlCodeParse","decl":{"start":{"line":23,"column":9},"end":{"line":23,"column":22}},"loc":{"start":{"line":23,"column":25},"end":{"line":33,"column":1}},"line":23},"1":{"name":"(anonymous_1)","decl":{"start":{"line":25,"column":36},"end":{"line":25,"column":37}},"loc":{"start":{"line":25,"column":53},"end":{"line":32,"column":5}},"line":25},"2":{"name":"(anonymous_2)","decl":{"start":{"line":27,"column":38},"end":{"line":27,"column":39}},"loc":{"start":{"line":27,"column":46},"end":{"line":27,"column":75}},"line":27},"3":{"name":"(anonymous_3)","decl":{"start":{"line":46,"column":11},"end":{"line":46,"column":12}},"loc":{"start":{"line":46,"column":26},"end":{"line":89,"column":5}},"line":46}},"branchMap":{"0":{"loc":{"start":{"line":26,"column":8},"end":{"line":31,"column":9}},"type":"if","locations":[{"start":{"line":26,"column":8},"end":{"line":31,"column":9}},{"start":{"line":29,"column":13},"end":{"line":31,"column":9}}],"line":26},"1":{"loc":{"start":{"line":49,"column":8},"end":{"line":51,"column":9}},"type":"if","locations":[{"start":{"line":49,"column":8},"end":{"line":51,"column":9}},{"start":{},"end":{}}],"line":49},"2":{"loc":{"start":{"line":49,"column":12},"end":{"line":49,"column":54}},"type":"binary-expr","locations":[{"start":{"line":49,"column":12},"end":{"line":49,"column":31}},{"start":{"line":49,"column":35},"end":{"line":49,"column":54}}],"line":49},"3":{"loc":{"start":{"line":57,"column":15},"end":{"line":57,"column":68}},"type":"binary-expr","locations":[{"start":{"line":57,"column":15},"end":{"line":57,"column":29}},{"start":{"line":57,"column":33},"end":{"line":57,"column":68}}],"line":57},"4":{"loc":{"start":{"line":60,"column":8},"end":{"line":65,"column":9}},"type":"if","locations":[{"start":{"line":60,"column":8},"end":{"line":65,"column":9}},{"start":{},"end":{}}],"line":60},"5":{"loc":{"start":{"line":70,"column":8},"end":{"line":72,"column":9}},"type":"if","locations":[{"start":{"line":70,"column":8},"end":{"line":72,"column":9}},{"start":{},"end":{}}],"line":70},"6":{"loc":{"start":{"line":70,"column":12},"end":{"line":70,"column":62}},"type":"binary-expr","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":32}},{"start":{"line":70,"column":36},"end":{"line":70,"column":62}}],"line":70}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":20,"6":20,"7":184,"8":4,"9":12,"10":180,"11":1,"12":54,"13":50,"14":4,"15":4,"16":20,"17":4,"18":0,"19":4,"20":0,"21":4,"22":4,"23":4,"24":4},"f":{"0":20,"1":184,"2":12,"3":54},"b":{"0":[4,180],"1":[50,4],"2":[54,4],"3":[24,24],"4":[0,4],"5":[0,4],"6":[4,4]},"inputSourceMap":{"version":3,"file":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/modules/markdown-editor/parser/frontmatter-parser.ts","sources":["/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/modules/markdown-editor/parser/frontmatter-parser.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;GAYG;;;AASH,sCASC;AAhBD,0CAA6D;AAE7D,qDAA4C;AAE5C,+EAA+E;AAC/E,2EAA2E;AAC3E,6CAA6C;AAC7C,SAAgB,aAAa;IAC3B,MAAM,MAAM,GAAG,IAAA,gBAAI,GAAE,CAAC,QAAQ,CAAC,MAAM,CAAA;IACrC,OAAO,IAAA,mBAAU,EAAC,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE;QAChC,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,KAAK,iBAAiB,EAAE,CAAC;YACzC,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,KAAK,UAAU,EAAE,CAAA;QACnE,CAAC;aAAM,CAAC;YACN,OAAO,IAAI,CAAA;QACb,CAAC;IACH,CAAC,CAAC,CAAA;AACJ,CAAC;AAED;;;;GAIG;AACU,QAAA,iBAAiB,GAAgB;IAC5C,mFAAmF;IACnF,cAAc;IACd,IAAI,EAAE,aAAa;IACnB,0EAA0E;IAC1E,+CAA+C;IAC/C,MAAM,EAAE,gBAAgB;IACxB,KAAK,EAAE,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE;QACnB,yDAAyD;QACzD,kCAAkC;QAClC,IAAI,IAAI,CAAC,IAAI,KAAK,KAAK,IAAI,GAAG,CAAC,SAAS,KAAK,CAAC,EAAE,CAAC;YAC/C,OAAO,KAAK,CAAA;QACd,CAAC;QAED,0EAA0E;QAC1E,oEAAoE;QACpE,4EAA4E;QAC5E,wBAAwB;QACxB,MAAM,SAAS,GAAa,EAAE,CAAA;QAC9B,OAAO,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;YAC7D,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;QAC3B,CAAC;QAED,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;YACxC,qEAAqE;YACrE,sEAAsE;YACtE,wBAAwB;YACxB,OAAO,KAAK,CAAA;QACd,CAAC;QAED,uEAAuE;QACvE,wEAAwE;QACxE,4EAA4E;QAC5E,8CAA8C;QAC9C,IAAI,SAAS,CAAC,MAAM,GAAG,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE,CAAC;YACvD,OAAO,KAAK,CAAA;QACd,CAAC;QAED,2EAA2E;QAC3E,yEAAyE;QACzE,0EAA0E;QAC1E,qEAAqE;QACrE,cAAc;QAEd,MAAM,WAAW,GAAG,GAAG,CAAC,GAAG,CAAC,iBAAiB,EAAE,CAAC,EAAE,GAAG,CAAC,SAAS,GAAG,CAAC,EAAE;YACnE,GAAG,CAAC,GAAG,CAAC,sBAAsB,EAAE,CAAC,EAAE,CAAC,CAAC;YACrC,GAAG,CAAC,GAAG,CAAC,UAAU,EAAE,CAAC,EAAE,GAAG,CAAC,SAAS,GAAG,CAAC,CAAC;YACzC,GAAG,CAAC,GAAG,CAAC,oBAAoB,EAAE,GAAG,CAAC,SAAS,EAAE,GAAG,CAAC,SAAS,GAAG,CAAC,CAAC;SAChE,CAAC,CAAA;QAEF,4EAA4E;QAC5E,yEAAyE;QACzE,qEAAqE;QACrE,GAAG,CAAC,QAAQ,EAAE,CAAA;QAEd,GAAG,CAAC,UAAU,CAAC,WAAW,CAAC,CAAA;QAC3B,OAAO,IAAI,CAAA,CAAC,sCAAsC;IACpD,CAAC;CACF,CAAA","sourcesContent":["/**\n * @ignore\n * BEGIN HEADER\n *\n * Contains:        Frontmatter Parser\n * CVM-Role:        InlineParser\n * Maintainer:      Hendrik Erz\n * License:         GNU GPL v3\n *\n * Description:     This block parser adds YAML frontmatter syntax tags.\n *\n * END HEADER\n */\n\nimport { type ParseWrapper, parseMixed } from '@lezer/common'\nimport { type BlockParser } from '@lezer/markdown'\nimport { yaml } from '@codemirror/lang-yaml'\n\n// Adapted from: https://github.com/lezer-parser/markdown/blob/main/src/nest.ts\n// This function looks out for parsed frontmatter nodes and starts an inner\n// parse to add syntax highlighting to these.\nexport function yamlCodeParse (): ParseWrapper {\n  const parser = yaml().language.parser\n  return parseMixed((node, input) => {\n    if (node.type.name === 'YAMLFrontmatter') {\n      return { parser, overlay: node => node.type.name === 'CodeText' }\n    } else {\n      return null\n    }\n  })\n}\n\n/**\n * A BlockParser that looks out for frontmatter blocks and wraps them in a\n * YAMLFrontmatter and CodeText node. The parsing of the actual contents is done\n * with a separate parse wrapper (see above)\n */\nexport const frontmatterParser: BlockParser = {\n  // We need to give the parser a name. Since it should only parse YAML frontmatters,\n  // here we go.\n  name: 'frontmatter',\n  // It must run before the HorizontalRule block parser since the delimiters\n  // can also be interpreted as horizontal rules.\n  before: 'HorizontalRule',\n  parse: (ctx, line) => {\n    // This parser is inspired by the BlockParsers defined in\n    // @lezer/markdown/src/markdown.ts\n    if (line.text !== '---' || ctx.lineStart !== 0) {\n      return false\n    }\n\n    // We have a possible YAML frontmatter. Now we need to look for the end of\n    // the frontmatter (i.e. look for a line that is either --- or ...).\n    // Meanwhile, we'll be collecting all lines encountered so that we can parse\n    // them into a YAML AST.\n    const yamlLines: string[] = []\n    while (ctx.nextLine() && !/^(?:-{3}|\\.{3})$/.test(line.text)) {\n      yamlLines.push(line.text)\n    }\n\n    if (!/^(?:-{3}|\\.{3})$/.test(line.text)) {\n      // The parser has collected the full rest of the document. This means\n      // the frontmatter never stopped. In order to maintain readability, we\n      // simply abort parsing.\n      return false\n    }\n\n    // A final check: A frontmatter is allowed to be empty, but it is NOT a\n    // valid document if there is whitespace at the top (i.e. no blank lines\n    // between the delimiters and the frontmatter content). Note that whitespace\n    // *after* the frontmatter content is allowed.\n    if (yamlLines.length > 0 && yamlLines[0].trim() === '') {\n      return false\n    }\n\n    // At this point we have a correct and full YAML frontmatter, we know where\n    // it starts and we know where it ends. In order to simplify creating the\n    // required AST, we defer to letting the YAML parser parse this thing into\n    // a tree that we can then simply convert into the format consumed by\n    // Codemirror.\n\n    const wrapperNode = ctx.elt('YAMLFrontmatter', 0, ctx.lineStart + 3, [\n      ctx.elt('YAMLFrontmatterStart', 0, 3),\n      ctx.elt('CodeText', 4, ctx.lineStart - 1),\n      ctx.elt('YAMLFrontmatterEnd', ctx.lineStart, ctx.lineStart + 3)\n    ])\n\n    // Now that we are certain that we have a frontmatter, we must \"consume\" the\n    // final line of the frontmatter so that the HorizontalRule parser cannot\n    // detect this as a HorizontalRule (if the frontmatter ends with ---)\n    ctx.nextLine()\n\n    ctx.addElement(wrapperNode)\n    return true // Signal that we've parsed this block\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"6f755ba028a1076d55a59c6b05c269fe140e7ce1","contentHash":"3241465f84995ecfee8b7d829eddb225f3346ecb8e2c57a5980063c312982bbe"},"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/modules/markdown-editor/parser/math-parser.ts":{"path":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/modules/markdown-editor/parser/math-parser.ts","statementMap":{"0":{"start":{"line":16,"column":0},"end":{"line":16,"column":62}},"1":{"start":{"line":17,"column":0},"end":{"line":17,"column":60}},"2":{"start":{"line":18,"column":19},"end":{"line":18,"column":50}},"3":{"start":{"line":19,"column":17},"end":{"line":19,"column":41}},"4":{"start":{"line":20,"column":15},"end":{"line":20,"column":60}},"5":{"start":{"line":21,"column":24},"end":{"line":21,"column":50}},"6":{"start":{"line":22,"column":17},"end":{"line":22,"column":66}},"7":{"start":{"line":23,"column":0},"end":{"line":52,"column":2}},"8":{"start":{"line":27,"column":8},"end":{"line":29,"column":9}},"9":{"start":{"line":28,"column":12},"end":{"line":28,"column":22}},"10":{"start":{"line":30,"column":29},"end":{"line":30,"column":106}},"11":{"start":{"line":32,"column":33},"end":{"line":32,"column":49}},"12":{"start":{"line":33,"column":8},"end":{"line":33,"column":50}},"13":{"start":{"line":35,"column":22},"end":{"line":35,"column":49}},"14":{"start":{"line":37,"column":8},"end":{"line":39,"column":9}},"15":{"start":{"line":38,"column":12},"end":{"line":38,"column":22}},"16":{"start":{"line":41,"column":31},"end":{"line":41,"column":43}},"17":{"start":{"line":42,"column":21},"end":{"line":42,"column":24}},"18":{"start":{"line":43,"column":27},"end":{"line":43,"column":80}},"19":{"start":{"line":44,"column":8},"end":{"line":44,"column":32}},"20":{"start":{"line":45,"column":25},"end":{"line":45,"column":92}},"21":{"start":{"line":46,"column":8},"end":{"line":46,"column":34}},"22":{"start":{"line":47,"column":8},"end":{"line":47,"column":28}},"23":{"start":{"line":48,"column":8},"end":{"line":48,"column":77}},"24":{"start":{"line":49,"column":28},"end":{"line":49,"column":90}},"25":{"start":{"line":50,"column":8},"end":{"line":50,"column":43}},"26":{"start":{"line":53,"column":0},"end":{"line":100,"column":2}},"27":{"start":{"line":58,"column":28},"end":{"line":58,"column":44}},"28":{"start":{"line":61,"column":8},"end":{"line":63,"column":9}},"29":{"start":{"line":62,"column":12},"end":{"line":62,"column":25}},"30":{"start":{"line":65,"column":30},"end":{"line":65,"column":32}},"31":{"start":{"line":67,"column":26},"end":{"line":67,"column":39}},"32":{"start":{"line":68,"column":21},"end":{"line":68,"column":57}},"33":{"start":{"line":69,"column":8},"end":{"line":71,"column":9}},"34":{"start":{"line":70,"column":12},"end":{"line":70,"column":42}},"35":{"start":{"line":72,"column":8},"end":{"line":77,"column":9}},"36":{"start":{"line":76,"column":12},"end":{"line":76,"column":25}},"37":{"start":{"line":80,"column":25},"end":{"line":80,"column":49}},"38":{"start":{"line":81,"column":26},"end":{"line":81,"column":57}},"39":{"start":{"line":83,"column":27},"end":{"line":83,"column":48}},"40":{"start":{"line":84,"column":23},"end":{"line":84,"column":47}},"41":{"start":{"line":85,"column":8},"end":{"line":87,"column":9}},"42":{"start":{"line":86,"column":12},"end":{"line":86,"column":49}},"43":{"start":{"line":89,"column":28},"end":{"line":93,"column":10}},"44":{"start":{"line":94,"column":8},"end":{"line":94,"column":36}},"45":{"start":{"line":97,"column":8},"end":{"line":97,"column":23}},"46":{"start":{"line":98,"column":8},"end":{"line":98,"column":20}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":26,"column":11},"end":{"line":26,"column":12}},"loc":{"start":{"line":26,"column":31},"end":{"line":51,"column":5}},"line":26},"1":{"name":"(anonymous_1)","decl":{"start":{"line":57,"column":11},"end":{"line":57,"column":12}},"loc":{"start":{"line":57,"column":26},"end":{"line":99,"column":5}},"line":57}},"branchMap":{"0":{"loc":{"start":{"line":27,"column":8},"end":{"line":29,"column":9}},"type":"if","locations":[{"start":{"line":27,"column":8},"end":{"line":29,"column":9}},{"start":{},"end":{}}],"line":27},"1":{"loc":{"start":{"line":37,"column":8},"end":{"line":39,"column":9}},"type":"if","locations":[{"start":{"line":37,"column":8},"end":{"line":39,"column":9}},{"start":{},"end":{}}],"line":37},"2":{"loc":{"start":{"line":37,"column":12},"end":{"line":37,"column":60}},"type":"binary-expr","locations":[{"start":{"line":37,"column":12},"end":{"line":37,"column":26}},{"start":{"line":37,"column":30},"end":{"line":37,"column":60}}],"line":37},"3":{"loc":{"start":{"line":61,"column":8},"end":{"line":63,"column":9}},"type":"if","locations":[{"start":{"line":61,"column":8},"end":{"line":63,"column":9}},{"start":{},"end":{}}],"line":61},"4":{"loc":{"start":{"line":69,"column":15},"end":{"line":69,"column":61}},"type":"binary-expr","locations":[{"start":{"line":69,"column":15},"end":{"line":69,"column":29}},{"start":{"line":69,"column":33},"end":{"line":69,"column":61}}],"line":69},"5":{"loc":{"start":{"line":72,"column":8},"end":{"line":77,"column":9}},"type":"if","locations":[{"start":{"line":72,"column":8},"end":{"line":77,"column":9}},{"start":{},"end":{}}],"line":72},"6":{"loc":{"start":{"line":85,"column":8},"end":{"line":87,"column":9}},"type":"if","locations":[{"start":{"line":85,"column":8},"end":{"line":87,"column":9}},{"start":{},"end":{}}],"line":85}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1172,"9":1172,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":1,"27":28,"28":28,"29":28,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0},"f":{"0":1172,"1":28},"b":{"0":[1172,0],"1":[0,0],"2":[0,0],"3":[28,0],"4":[0,0],"5":[0,0],"6":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/modules/markdown-editor/parser/math-parser.ts","sources":["/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/modules/markdown-editor/parser/math-parser.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @ignore\n * BEGIN HEADER\n *\n * Contains:        Math Parser\n * CVM-Role:        InlineParser, BlockParser\n * Maintainer:      Hendrik Erz\n * License:         GNU GPL v3\n *\n * Description:     This module provides an inline and a block parser for both\n *                  inline and block math.\n *\n * END HEADER\n */\n\nimport { type InlineParser, type BlockParser } from '@lezer/markdown'\nimport { StreamLanguage } from '@codemirror/language'\nimport { Tree } from '@lezer/common'\nimport { stexMath } from '@codemirror/legacy-modes/mode/stex'\nimport { partialParse } from './partial-parse'\n\nconst stexLang = StreamLanguage.define(stexMath)\n\nexport const inlineMathParser: InlineParser = {\n  // This parser should only match inline-math (we have to divide that here)\n  name: 'inlineMath',\n  parse: (ctx, next, pos) => {\n    if (next !== 36) { // $\n      return -1\n    }\n\n    const inlineMathRE = /(?<![\\\\$])(?<dollar>\\${1,2})(?![\\s$])(?<eq>.+?)(?<![\\s\\\\])\\k<dollar>(?!\\d)/g\n    // Set the lastIndex to the relative position where we're currently parsing ...\n    const relativePosition = pos - ctx.offset\n    inlineMathRE.lastIndex = relativePosition\n\n    // .. attempt a match ...\n    const match = inlineMathRE.exec(ctx.text)\n    // ... check that we had one, and that it is at the very start of the string ...\n    if (match === null || match.index > relativePosition) {\n      return -1 // There was either no match, or we're not yet there\n    }\n\n    // ... and work through the match.\n    const { eq, dollar } = match.groups as Record<string, string>\n\n    let curPos = pos\n    const childNodes = [ctx.elt('CodeMark', curPos, curPos + dollar.length)]\n\n    curPos += dollar.length\n    const treeElem = partialParse(ctx, stexLang.parser, eq, curPos)\n    childNodes.push(treeElem)\n\n    curPos += eq.length\n    childNodes.push(ctx.elt('CodeMark', curPos, curPos + dollar.length))\n    const wrapperElem = ctx.elt('InlineCode', pos, curPos + dollar.length, childNodes)\n    return ctx.addElement(wrapperElem)\n  }\n}\n\nexport const blockMathParser: BlockParser = {\n  // We need to give the parser a name. Since it should only parse YAML frontmatters,\n  // here we go.\n  name: 'blockMath',\n  parse: (ctx, line) => {\n    const blockMathRE = /^(\\s*\\$\\$)\\s*$/\n    // This parser is inspired by the BlockParsers defined in\n    // @lezer/markdown/src/markdown.ts\n    if (!blockMathRE.test(line.text)) {\n      return false\n    }\n\n    // We have a possible math block\n    const equationLines: string[] = []\n    // We also need the position at which the block ends\n    const startFrom = ctx.lineStart\n    const from = ctx.lineStart + line.text.length + 1\n    while (ctx.nextLine() && !blockMathRE.test(line.text)) {\n      equationLines.push(line.text)\n    }\n\n    if (!blockMathRE.test(line.text)) {\n      // The parser has collected the full rest of the document. This means\n      // the math block never stopped. In order to maintain readability, we\n      // simply abort parsing.\n      return false\n    }\n\n    // Let the stex mode parse the block into a tree and create a new element\n    // from that tree.\n    const equation = equationLines.join('\\n')\n    const innerTree = stexLang.parser.parse(equation)\n\n    // Here we detach the syntax tree from the containing `Document` node\n    const firstChild = innerTree.children[0]\n    let treeElem = ctx.elt(innerTree, from)\n    if (firstChild instanceof Tree) {\n      treeElem = ctx.elt(firstChild, from)\n    }\n\n    // Now create the wrapper\n    const wrapperNode = ctx.elt('FencedCode', startFrom, ctx.lineStart + line.text.length, [\n      ctx.elt('CodeMark', startFrom, from - 1), // Ignore the newline char (to ensure the math renderer can differentiate math blocks from code blocks)\n      ctx.elt('CodeText', from, from + equation.length, [treeElem]),\n      ctx.elt('CodeMark', Math.max(from + equation.length, ctx.lineStart), ctx.lineStart + line.text.length)\n    ])\n\n    ctx.addElement(wrapperNode)\n\n    // Ensure the closing code mark is also contained within this block. NOTE:\n    // Needs to be done AFTER we have used the line info to create the widget!\n    ctx.nextLine()\n    return true // Signal that we've parsed this block\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"306c3bdd4f9610cf64cadbe1c1131d74dba5104c","contentHash":"947689c1051876d30a0274ddf5c7aef218c1d640778d746c46cf0a3f73886292"},"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/modules/markdown-editor/parser/sloppy-parser.ts":{"path":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/modules/markdown-editor/parser/sloppy-parser.ts","statementMap":{"0":{"start":{"line":23,"column":0},"end":{"line":23,"column":62}},"1":{"start":{"line":24,"column":0},"end":{"line":24,"column":30}},"2":{"start":{"line":25,"column":24},"end":{"line":25,"column":60}},"3":{"start":{"line":26,"column":17},"end":{"line":26,"column":106}},"4":{"start":{"line":27,"column":0},"end":{"line":130,"column":2}},"5":{"start":{"line":31,"column":8},"end":{"line":33,"column":9}},"6":{"start":{"line":32,"column":12},"end":{"line":32,"column":22}},"7":{"start":{"line":34,"column":28},"end":{"line":34,"column":50}},"8":{"start":{"line":35,"column":31},"end":{"line":35,"column":47}},"9":{"start":{"line":36,"column":30},"end":{"line":36,"column":60}},"10":{"start":{"line":37,"column":22},"end":{"line":37,"column":53}},"11":{"start":{"line":38,"column":23},"end":{"line":38,"column":34}},"12":{"start":{"line":39,"column":8},"end":{"line":41,"column":9}},"13":{"start":{"line":40,"column":12},"end":{"line":40,"column":22}},"14":{"start":{"line":48,"column":25},"end":{"line":48,"column":27}},"15":{"start":{"line":50,"column":19},"end":{"line":50,"column":22}},"16":{"start":{"line":51,"column":17},"end":{"line":51,"column":25}},"17":{"start":{"line":52,"column":8},"end":{"line":52,"column":53}},"18":{"start":{"line":53,"column":8},"end":{"line":55,"column":9}},"19":{"start":{"line":54,"column":12},"end":{"line":54,"column":61}},"20":{"start":{"line":57,"column":8},"end":{"line":57,"column":18}},"21":{"start":{"line":58,"column":8},"end":{"line":58,"column":67}},"22":{"start":{"line":62,"column":26},"end":{"line":62,"column":76}},"23":{"start":{"line":63,"column":21},"end":{"line":63,"column":46}},"24":{"start":{"line":64,"column":23},"end":{"line":64,"column":36}},"25":{"start":{"line":65,"column":30},"end":{"line":65,"column":32}},"26":{"start":{"line":66,"column":8},"end":{"line":81,"column":32}},"27":{"start":{"line":72,"column":12},"end":{"line":80,"column":13}},"28":{"start":{"line":73,"column":35},"end":{"line":73,"column":57}},"29":{"start":{"line":74,"column":16},"end":{"line":78,"column":17}},"30":{"start":{"line":76,"column":20},"end":{"line":76,"column":97}},"31":{"start":{"line":77,"column":20},"end":{"line":77,"column":60}},"32":{"start":{"line":79,"column":16},"end":{"line":79,"column":22}},"33":{"start":{"line":82,"column":8},"end":{"line":82,"column":69}},"34":{"start":{"line":84,"column":8},"end":{"line":84,"column":18}},"35":{"start":{"line":85,"column":8},"end":{"line":85,"column":22}},"36":{"start":{"line":86,"column":8},"end":{"line":86,"column":53}},"37":{"start":{"line":87,"column":8},"end":{"line":87,"column":57}},"38":{"start":{"line":89,"column":8},"end":{"line":89,"column":18}},"39":{"start":{"line":90,"column":23},"end":{"line":90,"column":24}},"40":{"start":{"line":91,"column":8},"end":{"line":100,"column":9}},"41":{"start":{"line":92,"column":22},"end":{"line":92,"column":54}},"42":{"start":{"line":93,"column":12},"end":{"line":98,"column":13}},"43":{"start":{"line":94,"column":16},"end":{"line":94,"column":27}},"44":{"start":{"line":96,"column":17},"end":{"line":98,"column":13}},"45":{"start":{"line":97,"column":16},"end":{"line":97,"column":27}},"46":{"start":{"line":99,"column":12},"end":{"line":99,"column":17}},"47":{"start":{"line":101,"column":8},"end":{"line":103,"column":9}},"48":{"start":{"line":102,"column":12},"end":{"line":102,"column":22}},"49":{"start":{"line":106,"column":18},"end":{"line":106,"column":68}},"50":{"start":{"line":107,"column":8},"end":{"line":126,"column":9}},"51":{"start":{"line":109,"column":12},"end":{"line":109,"column":45}},"52":{"start":{"line":110,"column":12},"end":{"line":110,"column":52}},"53":{"start":{"line":111,"column":12},"end":{"line":111,"column":26}},"54":{"start":{"line":112,"column":12},"end":{"line":112,"column":26}},"55":{"start":{"line":113,"column":12},"end":{"line":113,"column":57}},"56":{"start":{"line":114,"column":32},"end":{"line":114,"column":75}},"57":{"start":{"line":115,"column":12},"end":{"line":115,"column":22}},"58":{"start":{"line":116,"column":12},"end":{"line":116,"column":36}},"59":{"start":{"line":117,"column":12},"end":{"line":117,"column":58}},"60":{"start":{"line":118,"column":12},"end":{"line":118,"column":22}},"61":{"start":{"line":119,"column":12},"end":{"line":119,"column":26}},"62":{"start":{"line":120,"column":12},"end":{"line":120,"column":57}},"63":{"start":{"line":121,"column":12},"end":{"line":121,"column":61}},"64":{"start":{"line":124,"column":12},"end":{"line":124,"column":56}},"65":{"start":{"line":125,"column":12},"end":{"line":125,"column":59}},"66":{"start":{"line":127,"column":24},"end":{"line":127,"column":77}},"67":{"start":{"line":128,"column":8},"end":{"line":128,"column":39}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":30,"column":11},"end":{"line":30,"column":12}},"loc":{"start":{"line":30,"column":31},"end":{"line":129,"column":5}},"line":30}},"branchMap":{"0":{"loc":{"start":{"line":31,"column":8},"end":{"line":33,"column":9}},"type":"if","locations":[{"start":{"line":31,"column":8},"end":{"line":33,"column":9}},{"start":{},"end":{}}],"line":31},"1":{"loc":{"start":{"line":31,"column":12},"end":{"line":31,"column":38}},"type":"binary-expr","locations":[{"start":{"line":31,"column":12},"end":{"line":31,"column":23}},{"start":{"line":31,"column":27},"end":{"line":31,"column":38}}],"line":31},"2":{"loc":{"start":{"line":39,"column":8},"end":{"line":41,"column":9}},"type":"if","locations":[{"start":{"line":39,"column":8},"end":{"line":41,"column":9}},{"start":{},"end":{}}],"line":39},"3":{"loc":{"start":{"line":53,"column":8},"end":{"line":55,"column":9}},"type":"if","locations":[{"start":{"line":53,"column":8},"end":{"line":55,"column":9}},{"start":{},"end":{}}],"line":53},"4":{"loc":{"start":{"line":72,"column":12},"end":{"line":80,"column":13}},"type":"if","locations":[{"start":{"line":72,"column":12},"end":{"line":80,"column":13}},{"start":{},"end":{}}],"line":72},"5":{"loc":{"start":{"line":91,"column":15},"end":{"line":91,"column":64}},"type":"binary-expr","locations":[{"start":{"line":91,"column":15},"end":{"line":91,"column":27}},{"start":{"line":91,"column":31},"end":{"line":91,"column":64}}],"line":91},"6":{"loc":{"start":{"line":93,"column":12},"end":{"line":98,"column":13}},"type":"if","locations":[{"start":{"line":93,"column":12},"end":{"line":98,"column":13}},{"start":{"line":96,"column":17},"end":{"line":98,"column":13}}],"line":93},"7":{"loc":{"start":{"line":96,"column":17},"end":{"line":98,"column":13}},"type":"if","locations":[{"start":{"line":96,"column":17},"end":{"line":98,"column":13}},{"start":{},"end":{}}],"line":96},"8":{"loc":{"start":{"line":101,"column":8},"end":{"line":103,"column":9}},"type":"if","locations":[{"start":{"line":101,"column":8},"end":{"line":103,"column":9}},{"start":{},"end":{}}],"line":101},"9":{"loc":{"start":{"line":107,"column":8},"end":{"line":126,"column":9}},"type":"if","locations":[{"start":{"line":107,"column":8},"end":{"line":126,"column":9}},{"start":{"line":123,"column":13},"end":{"line":126,"column":9}}],"line":107},"10":{"loc":{"start":{"line":127,"column":32},"end":{"line":127,"column":57}},"type":"cond-expr","locations":[{"start":{"line":127,"column":41},"end":{"line":127,"column":47}},{"start":{"line":127,"column":50},"end":{"line":127,"column":57}}],"line":127}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1176,"6":1170,"7":6,"8":6,"9":6,"10":6,"11":6,"12":6,"13":2,"14":4,"15":4,"16":4,"17":4,"18":4,"19":0,"20":4,"21":4,"22":4,"23":4,"24":4,"25":4,"26":4,"27":8,"28":4,"29":4,"30":0,"31":0,"32":4,"33":4,"34":4,"35":4,"36":4,"37":4,"38":4,"39":4,"40":4,"41":70,"42":70,"43":0,"44":70,"45":4,"46":70,"47":4,"48":0,"49":4,"50":4,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":4,"65":4,"66":4,"67":4},"f":{"0":1176},"b":{"0":[1170,6],"1":[1176,1174],"2":[2,4],"3":[0,4],"4":[4,4],"5":[74,70],"6":[0,70],"7":[4,66],"8":[0,4],"9":[0,4],"10":[4,0]},"inputSourceMap":{"version":3,"file":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/modules/markdown-editor/parser/sloppy-parser.ts","sources":["/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/modules/markdown-editor/parser/sloppy-parser.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @ignore\n * BEGIN HEADER\n *\n * Contains:        Image and Link parser\n * CVM-Role:        View\n * Maintainer:      Hendrik Erz\n * License:         GNU GPL v3\n *\n * Description:     A small parser that can parse images and links that,\n *                  contrary to the built-in parser, allows spaces and non-\n *                  encoded characters in URLs. While this is the correct\n *                  behavior, Markdown has to deal with many local images and\n *                  links, and in there it's quite annoying either to have to\n *                  replace all spaces with %20, or have the images not work.\n *                  Here we basically implement a more \"sloppy\" parser that\n *                  gives our users the ability to paste readable, non-URL-\n *                  encoded file paths.\n *\n * END HEADER\n */\n\nimport { type InlineParser, type Element } from '@lezer/markdown'\nimport { markdown, markdownLanguage } from '@codemirror/lang-markdown'\n\nconst mdParser = markdown({ base: markdownLanguage }).language.parser\n\nexport const sloppyParser: InlineParser = {\n  name: 'sloppy-parser', // Could be a fancy restaurant name or a bad one for a photographer\n  before: 'Link',\n  parse: (ctx, next, pos) => {\n    if (next !== 33 && next !== 91) { // 33 == !, 91 == [\n      return -1\n    }\n\n    const imgOrLinkRE = /^!?\\[[^\\]]+\\]\\(.+\\)/i\n    const relativeOffset = pos - ctx.offset\n    const relativeSlice = ctx.text.slice(relativeOffset)\n    const match = imgOrLinkRE.exec(relativeSlice)\n    const isLink = next === 91\n\n    if (match === null) {\n      return -1\n    }\n\n    // NOTE: Since Markdown links can contain brackets, we cannot do this with\n    // a RegExp-only solution (we could, but that might render us vulnerable to\n    // infinite loops in the RegExp engine if done improperly). Henceforth, we\n    // use RegExp only to detect whether there's an actually valid link at the\n    // current context position. Next, we literally go char by char to find all\n    // the elements we need\n\n    const children: Element[] = []\n    // Code Marks: ![\n    let from = pos\n    let to = from + 1\n    children.push(ctx.elt('LinkMark', from, to))\n    if (!isLink) {\n      children.push(ctx.elt('LinkMark', ++from, ++to))\n    }\n\n    // Alt-text\n    from = to\n    to = from + ctx.text.slice(from - ctx.offset).indexOf(']')\n\n    // The ALT-text can contain inline content (cf.\n    // https://spec.commonmark.org/0.30/#example-515) so we have to run an\n    // additional inline parse on it.\n    const linkLabel = ctx.text.slice(from - ctx.offset, to - ctx.offset)\n    const tree = mdParser.parse(linkLabel)\n    const cursor = tree.cursor()\n    const labelChildren: Element[] = []\n\n    do {\n      // ALT text can only contain inline nodes, but the parser will wrap\n      // everything in both a Document and a Paragraph b/c it sees its as a\n      // standalone document. Since the ALT text can only contain inline\n      // elements, we skip the \"Document\" wrapper and only extract the children\n      // of the next \"Paragraph\" element.\n      if (cursor.name === 'Paragraph') {\n        let currentChild = cursor.node.firstChild\n        while (currentChild !== null) {\n          // ctx.elt luckily also takes in an entire Tree, saving us a recursion\n          labelChildren.push(\n            ctx.elt(currentChild.toTree(), from + currentChild.from)\n          )\n          currentChild = currentChild.nextSibling\n        }\n        break\n      }\n    } while (cursor.next())\n\n    children.push(ctx.elt('LinkLabel', from, to, labelChildren))\n\n    // Code Marks: ](\n    from = to\n    to = from + 1\n    children.push(ctx.elt('LinkMark', from, to))\n    children.push(ctx.elt('LinkMark', ++from, ++to))\n\n    // Perform our bracket matching magic ✨\n    from = to\n    let brackets = 1 // Count the opening bracket\n    while (brackets > 0 && to < ctx.offset + ctx.text.length) {\n      const c = ctx.text.charAt(to - ctx.offset)\n      if (c === '(') {\n        brackets++\n      } else if (c === ')') {\n        brackets--\n      }\n      to++\n    }\n\n    if (brackets > 0) {\n      return -1 // The link didn't end until the end of the line\n    }\n\n    // Now, `to` points after the final bracket. The next check we have to do is\n    // see if there's a title inside.\n    let url = ctx.text.slice(from - ctx.offset, to - ctx.offset)\n\n    if (/\".+\"\\)$/.test(url)) {\n      // We have a title\n      to = from + url.indexOf('\"') - 1\n      children.push(ctx.elt('URL', from, to))\n\n      from = to + 1\n      to = from + 1\n      children.push(ctx.elt('LinkMark', from, to))\n\n      const titleLength = url.lastIndexOf('\"') - url.indexOf('\"') - 1\n      from = to\n      to = from + titleLength\n      children.push(ctx.elt('LinkTitle', from, to))\n\n      from = to\n      to = from + 1\n      children.push(ctx.elt('LinkMark', from, to))\n      children.push(ctx.elt('LinkMark', ++from, ++to))\n    } else {\n      children.push(ctx.elt('URL', from, to - 1))\n      children.push(ctx.elt('LinkMark', to - 1, to))\n    }\n\n    const wrapper = ctx.elt(isLink ? 'Link' : 'Image', pos, to, children)\n    return ctx.addElement(wrapper)\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"509f79af486cf5cadc735ccab86b37d8e9e4f929","contentHash":"72154d2ca4e0e6e1044abdb2b99913daaed6cca8eac5cf17ddbfb763e192dbc2"},"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/modules/markdown-editor/parser/pandoc-table-parser.ts":{"path":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/modules/markdown-editor/parser/pandoc-table-parser.ts","statementMap":{"0":{"start":{"line":21,"column":0},"end":{"line":21,"column":62}},"1":{"start":{"line":22,"column":0},"end":{"line":22,"column":59}},"2":{"start":{"line":24,"column":15},"end":{"line":24,"column":39}},"3":{"start":{"line":25,"column":21},"end":{"line":25,"column":32}},"4":{"start":{"line":26,"column":19},"end":{"line":26,"column":34}},"5":{"start":{"line":27,"column":22},"end":{"line":27,"column":32}},"6":{"start":{"line":39,"column":17},"end":{"line":39,"column":19}},"7":{"start":{"line":42,"column":15},"end":{"line":42,"column":18}},"8":{"start":{"line":43,"column":13},"end":{"line":43,"column":34}},"9":{"start":{"line":44,"column":4},"end":{"line":67,"column":5}},"10":{"start":{"line":45,"column":8},"end":{"line":45,"column":32}},"11":{"start":{"line":46,"column":28},"end":{"line":46,"column":49}},"12":{"start":{"line":47,"column":8},"end":{"line":65,"column":9}},"13":{"start":{"line":48,"column":24},"end":{"line":48,"column":59}},"14":{"start":{"line":49,"column":12},"end":{"line":49,"column":60}},"15":{"start":{"line":53,"column":29},"end":{"line":53,"column":72}},"16":{"start":{"line":54,"column":27},"end":{"line":54,"column":35}},"17":{"start":{"line":55,"column":25},"end":{"line":55,"column":33}},"18":{"start":{"line":56,"column":12},"end":{"line":63,"column":13}},"19":{"start":{"line":57,"column":16},"end":{"line":61,"column":17}},"20":{"start":{"line":58,"column":20},"end":{"line":58,"column":74}},"21":{"start":{"line":59,"column":20},"end":{"line":59,"column":81}},"22":{"start":{"line":60,"column":20},"end":{"line":60,"column":38}},"23":{"start":{"line":62,"column":16},"end":{"line":62,"column":25}},"24":{"start":{"line":64,"column":12},"end":{"line":64,"column":63}},"25":{"start":{"line":66,"column":8},"end":{"line":66,"column":22}},"26":{"start":{"line":68,"column":4},"end":{"line":68,"column":44}},"27":{"start":{"line":81,"column":17},"end":{"line":81,"column":19}},"28":{"start":{"line":85,"column":15},"end":{"line":85,"column":18}},"29":{"start":{"line":86,"column":13},"end":{"line":86,"column":34}},"30":{"start":{"line":87,"column":22},"end":{"line":87,"column":26}},"31":{"start":{"line":88,"column":23},"end":{"line":88,"column":28}},"32":{"start":{"line":89,"column":4},"end":{"line":120,"column":5}},"33":{"start":{"line":90,"column":8},"end":{"line":90,"column":36}},"34":{"start":{"line":91,"column":8},"end":{"line":97,"column":9}},"35":{"start":{"line":92,"column":26},"end":{"line":92,"column":61}},"36":{"start":{"line":93,"column":12},"end":{"line":93,"column":62}},"37":{"start":{"line":94,"column":12},"end":{"line":94,"column":33}},"38":{"start":{"line":95,"column":12},"end":{"line":95,"column":22}},"39":{"start":{"line":96,"column":12},"end":{"line":96,"column":21}},"40":{"start":{"line":98,"column":25},"end":{"line":98,"column":27}},"41":{"start":{"line":99,"column":23},"end":{"line":99,"column":27}},"42":{"start":{"line":100,"column":21},"end":{"line":100,"column":25}},"43":{"start":{"line":101,"column":8},"end":{"line":113,"column":9}},"44":{"start":{"line":102,"column":12},"end":{"line":111,"column":13}},"45":{"start":{"line":103,"column":29},"end":{"line":103,"column":70}},"46":{"start":{"line":104,"column":16},"end":{"line":104,"column":63}},"47":{"start":{"line":105,"column":16},"end":{"line":105,"column":77}},"48":{"start":{"line":106,"column":16},"end":{"line":106,"column":38}},"49":{"start":{"line":108,"column":17},"end":{"line":111,"column":13}},"50":{"start":{"line":109,"column":16},"end":{"line":109,"column":81}},"51":{"start":{"line":110,"column":16},"end":{"line":110,"column":27}},"52":{"start":{"line":112,"column":12},"end":{"line":112,"column":21}},"53":{"start":{"line":114,"column":8},"end":{"line":114,"column":59}},"54":{"start":{"line":115,"column":8},"end":{"line":115,"column":18}},"55":{"start":{"line":116,"column":8},"end":{"line":119,"column":9}},"56":{"start":{"line":117,"column":12},"end":{"line":117,"column":32}},"57":{"start":{"line":118,"column":12},"end":{"line":118,"column":32}},"58":{"start":{"line":121,"column":4},"end":{"line":121,"column":44}},"59":{"start":{"line":123,"column":0},"end":{"line":146,"column":2}},"60":{"start":{"line":127,"column":8},"end":{"line":129,"column":9}},"61":{"start":{"line":128,"column":12},"end":{"line":128,"column":25}},"62":{"start":{"line":132,"column":22},"end":{"line":132,"column":33}},"63":{"start":{"line":133,"column":22},"end":{"line":133,"column":35}},"64":{"start":{"line":135,"column":8},"end":{"line":137,"column":9}},"65":{"start":{"line":136,"column":12},"end":{"line":136,"column":34}},"66":{"start":{"line":138,"column":8},"end":{"line":140,"column":9}},"67":{"start":{"line":139,"column":12},"end":{"line":139,"column":25}},"68":{"start":{"line":141,"column":20},"end":{"line":141,"column":52}},"69":{"start":{"line":142,"column":20},"end":{"line":142,"column":58}},"70":{"start":{"line":143,"column":8},"end":{"line":143,"column":28}},"71":{"start":{"line":144,"column":8},"end":{"line":144,"column":20}},"72":{"start":{"line":147,"column":23},"end":{"line":177,"column":1}},"73":{"start":{"line":151,"column":8},"end":{"line":151,"column":21}},"74":{"start":{"line":156,"column":22},"end":{"line":156,"column":46}},"75":{"start":{"line":157,"column":8},"end":{"line":159,"column":9}},"76":{"start":{"line":158,"column":12},"end":{"line":158,"column":25}},"77":{"start":{"line":160,"column":8},"end":{"line":162,"column":9}},"78":{"start":{"line":161,"column":12},"end":{"line":161,"column":25}},"79":{"start":{"line":164,"column":8},"end":{"line":171,"column":9}},"80":{"start":{"line":164,"column":21},"end":{"line":164,"column":22}},"81":{"start":{"line":165,"column":12},"end":{"line":167,"column":13}},"82":{"start":{"line":166,"column":16},"end":{"line":166,"column":25}},"83":{"start":{"line":168,"column":12},"end":{"line":170,"column":13}},"84":{"start":{"line":169,"column":16},"end":{"line":169,"column":29}},"85":{"start":{"line":173,"column":20},"end":{"line":173,"column":92}},"86":{"start":{"line":174,"column":8},"end":{"line":174,"column":38}},"87":{"start":{"line":175,"column":8},"end":{"line":175,"column":20}},"88":{"start":{"line":178,"column":0},"end":{"line":193,"column":2}},"89":{"start":{"line":181,"column":8},"end":{"line":191,"column":9}},"90":{"start":{"line":187,"column":12},"end":{"line":187,"column":34}},"91":{"start":{"line":190,"column":12},"end":{"line":190,"column":24}}},"fnMap":{"0":{"name":"parseGridTable","decl":{"start":{"line":38,"column":9},"end":{"line":38,"column":23}},"loc":{"start":{"line":38,"column":46},"end":{"line":69,"column":1}},"line":38},"1":{"name":"parsePipeTable","decl":{"start":{"line":80,"column":9},"end":{"line":80,"column":23}},"loc":{"start":{"line":80,"column":46},"end":{"line":122,"column":1}},"line":80},"2":{"name":"(anonymous_2)","decl":{"start":{"line":125,"column":11},"end":{"line":125,"column":12}},"loc":{"start":{"line":125,"column":26},"end":{"line":145,"column":5}},"line":125},"3":{"name":"(anonymous_3)","decl":{"start":{"line":148,"column":4},"end":{"line":148,"column":5}},"loc":{"start":{"line":148,"column":30},"end":{"line":152,"column":5}},"line":148},"4":{"name":"(anonymous_4)","decl":{"start":{"line":153,"column":4},"end":{"line":153,"column":5}},"loc":{"start":{"line":153,"column":22},"end":{"line":176,"column":5}},"line":153},"5":{"name":"(anonymous_5)","decl":{"start":{"line":180,"column":4},"end":{"line":180,"column":5}},"loc":{"start":{"line":180,"column":20},"end":{"line":192,"column":5}},"line":180}},"branchMap":{"0":{"loc":{"start":{"line":47,"column":8},"end":{"line":65,"column":9}},"type":"if","locations":[{"start":{"line":47,"column":8},"end":{"line":65,"column":9}},{"start":{"line":51,"column":13},"end":{"line":65,"column":9}}],"line":47},"1":{"loc":{"start":{"line":57,"column":16},"end":{"line":61,"column":17}},"type":"if","locations":[{"start":{"line":57,"column":16},"end":{"line":61,"column":17}},{"start":{},"end":{}}],"line":57},"2":{"loc":{"start":{"line":91,"column":8},"end":{"line":97,"column":9}},"type":"if","locations":[{"start":{"line":91,"column":8},"end":{"line":97,"column":9}},{"start":{},"end":{}}],"line":91},"3":{"loc":{"start":{"line":102,"column":12},"end":{"line":111,"column":13}},"type":"if","locations":[{"start":{"line":102,"column":12},"end":{"line":111,"column":13}},{"start":{"line":108,"column":17},"end":{"line":111,"column":13}}],"line":102},"4":{"loc":{"start":{"line":102,"column":16},"end":{"line":102,"column":43}},"type":"binary-expr","locations":[{"start":{"line":102,"column":16},"end":{"line":102,"column":26}},{"start":{"line":102,"column":30},"end":{"line":102,"column":43}}],"line":102},"5":{"loc":{"start":{"line":103,"column":29},"end":{"line":103,"column":70}},"type":"cond-expr","locations":[{"start":{"line":103,"column":43},"end":{"line":103,"column":56}},{"start":{"line":103,"column":59},"end":{"line":103,"column":70}}],"line":103},"6":{"loc":{"start":{"line":108,"column":17},"end":{"line":111,"column":13}},"type":"if","locations":[{"start":{"line":108,"column":17},"end":{"line":111,"column":13}},{"start":{},"end":{}}],"line":108},"7":{"loc":{"start":{"line":108,"column":21},"end":{"line":108,"column":52}},"type":"binary-expr","locations":[{"start":{"line":108,"column":21},"end":{"line":108,"column":31}},{"start":{"line":108,"column":35},"end":{"line":108,"column":52}}],"line":108},"8":{"loc":{"start":{"line":116,"column":8},"end":{"line":119,"column":9}},"type":"if","locations":[{"start":{"line":116,"column":8},"end":{"line":119,"column":9}},{"start":{},"end":{}}],"line":116},"9":{"loc":{"start":{"line":127,"column":8},"end":{"line":129,"column":9}},"type":"if","locations":[{"start":{"line":127,"column":8},"end":{"line":129,"column":9}},{"start":{},"end":{}}],"line":127},"10":{"loc":{"start":{"line":135,"column":15},"end":{"line":135,"column":94}},"type":"binary-expr","locations":[{"start":{"line":135,"column":15},"end":{"line":135,"column":29}},{"start":{"line":135,"column":34},"end":{"line":135,"column":60}},{"start":{"line":135,"column":64},"end":{"line":135,"column":93}}],"line":135},"11":{"loc":{"start":{"line":138,"column":8},"end":{"line":140,"column":9}},"type":"if","locations":[{"start":{"line":138,"column":8},"end":{"line":140,"column":9}},{"start":{},"end":{}}],"line":138},"12":{"loc":{"start":{"line":157,"column":8},"end":{"line":159,"column":9}},"type":"if","locations":[{"start":{"line":157,"column":8},"end":{"line":159,"column":9}},{"start":{},"end":{}}],"line":157},"13":{"loc":{"start":{"line":160,"column":8},"end":{"line":162,"column":9}},"type":"if","locations":[{"start":{"line":160,"column":8},"end":{"line":162,"column":9}},{"start":{},"end":{}}],"line":160},"14":{"loc":{"start":{"line":165,"column":12},"end":{"line":167,"column":13}},"type":"if","locations":[{"start":{"line":165,"column":12},"end":{"line":167,"column":13}},{"start":{},"end":{}}],"line":165},"15":{"loc":{"start":{"line":168,"column":12},"end":{"line":170,"column":13}},"type":"if","locations":[{"start":{"line":168,"column":12},"end":{"line":170,"column":13}},{"start":{},"end":{}}],"line":168},"16":{"loc":{"start":{"line":181,"column":8},"end":{"line":191,"column":9}},"type":"if","locations":[{"start":{"line":181,"column":8},"end":{"line":191,"column":9}},{"start":{"line":189,"column":13},"end":{"line":191,"column":9}}],"line":181}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":1,"60":28,"61":28,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":1,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":1,"89":28,"90":0,"91":28},"f":{"0":0,"1":0,"2":28,"3":0,"4":0,"5":28},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[28,0],"10":[0,0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,28]},"inputSourceMap":{"version":3,"file":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/modules/markdown-editor/parser/pandoc-table-parser.ts","sources":["/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/modules/markdown-editor/parser/pandoc-table-parser.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @ignore\n * BEGIN HEADER\n *\n * Contains:        Pandoc table Parser\n * CVM-Role:        Block Parser\n * Maintainer:      Hendrik Erz\n * License:         GNU GPL v3\n *\n * Description:     Since the default Markdown mode only offers limited support\n *                  for tables, this parser ensures we detect any kind of table\n *                  supported by Pandoc in a given document. The exception are\n *                  simple tables, both because they are hard to detect and as\n *                  other parsers will always take precedence. Tl;DR: Use pipe\n *                  or grid tables instead. That's what we have the TableEditor\n *                  for.\n *\n * END HEADER\n */\n\nimport {\n  type BlockParser,\n  type Element,\n  type BlockContext,\n  type LeafBlockParser\n} from '@lezer/markdown'\n\n// Group 1: ^| table contents |$; Group 2: some text | with pipes in between\nconst pipeRE = /^(\\|.+?\\|)$|(.+?\\|.+?)/\nconst pipeHeaderRE = /^[|+:-]+$/\nconst gridLineRE = /^\\+[-=+:]+\\+$/\nconst gridContentRE = /^\\|.+\\|$/\n\n/**\n * Parses a grid table and returns a subtree that can be used for syntax highlighting\n *\n * @param   {BlockContext}  ctx    The context\n * @param   {number}        pos    Where the table starts in the document\n * @param   {number}        end    Where the table ends in the document\n * @param   {string[]}      lines  The list of lines belonging to the table\n *\n * @return  {Element}              The subtree\n */\nfunction parseGridTable (ctx: BlockContext, pos: number, end: number, lines: string[]): Element {\n  const rows: Element[] = []\n  // Grid Tables alternate between separator lines and content lines. Content\n  // lines can span multiple rows\n  let from = pos\n  let to = pos + lines[0].length\n  for (const line of lines) {\n    to = from + line.length\n    const isSeparator = gridLineRE.test(line)\n    if (isSeparator) {\n      const sep = ctx.elt('TableDelimiter', from, to)\n      rows.push(ctx.elt('TableRow', from, to, [sep]))\n    } else {\n      // Content line -> move through the line and mark delimiters as we see them\n      const children: Element[] = [ctx.elt('TableDelimiter', from, from + 1)]\n      let cellFrom = from + 1\n      let cellTo = cellFrom\n      for (const ch of line.substring(1)) {\n        if (ch === '|') {\n          children.push(ctx.elt('TableCell', cellFrom, cellTo))\n          children.push(ctx.elt('TableDelimiter', cellTo, cellTo + 1))\n          cellFrom = cellTo\n        }\n        cellTo++\n      }\n      rows.push(ctx.elt('TableRow', from, to, children))\n    }\n    from = to + 1\n  }\n  return ctx.elt('Table', pos, end, rows)\n}\n\n/**\n * Parses a pipe table and returns a subtree that can be used for syntax highlighting\n *\n * @param   {BlockContext}  ctx    The context\n * @param   {number}        pos    Where the table starts in the document\n * @param   {number}        end    Where the table ends in the document\n * @param   {string[]}      lines  The list of lines belonging to the table\n *\n * @return  {Element}              The subtree\n */\nfunction parsePipeTable (ctx: BlockContext, pos: number, end: number, lines: string[]): Element {\n  const rows: Element[] = []\n  // For pipe tables, the first row is always the header, the second always the\n  // delimiter, afterwards only content cells.\n  // const header = ctx.elt('TableHeader')\n  let from = pos\n  let to = pos + lines[0].length\n  let isFirstLine = true\n  let isHeaderLine = false\n  for (const line of lines) {\n    to = from + line.length + 1\n    if (isHeaderLine) {\n      const delim = ctx.elt('TableDelimiter', from, to)\n      rows.push(ctx.elt('TableRow', from, to, [delim]))\n      isHeaderLine = false\n      from = to\n      continue\n    }\n\n    const children: Element[] = []\n    let cellFrom = from\n    let cellTo = from\n    for (const ch of line) {\n      if (ch === '|' && cellTo > from) {\n        const type = isFirstLine ? 'TableHeader' : 'TableCell'\n        children.push(ctx.elt(type, cellFrom, cellTo))\n        children.push(ctx.elt('TableDelimiter', cellTo, cellTo + 1))\n        cellFrom = cellTo + 1\n      } else if (ch === '|' && cellFrom === from) {\n        children.push(ctx.elt('TableDelimiter', cellFrom, cellFrom + 1))\n        cellFrom++\n      }\n      cellTo++\n    }\n\n    rows.push(ctx.elt('TableRow', from, to, children))\n    from = to\n\n    if (isFirstLine) {\n      isHeaderLine = true\n      isFirstLine = false\n    }\n  }\n  return ctx.elt('Table', pos, end, rows)\n}\n\nexport const gridTableParser: BlockParser = {\n  name: 'grid-table',\n  parse: (ctx, line) => {\n    // Let's begin with the easiest thing to detect: grid tables\n    if (!gridLineRE.test(line.text)) {\n      return false\n    }\n    // We have a potential grid table. The end of the table is being marked by\n    // the last line that matches a grid line.\n    const lines: string[] = [line.text]\n    const start = ctx.lineStart\n    // We have alternating lines with +---+ and | cell |\n    while (ctx.nextLine() && (gridLineRE.test(line.text) || gridContentRE.test(line.text))) {\n      lines.push(line.text)\n    }\n\n    if (lines.length < 3) {\n      return false // Grid tables must span at least three lines\n    }\n\n    const end = ctx.lineStart + line.text.length\n\n    const elt = parseGridTable(ctx, start, end, lines)\n    ctx.addElement(elt)\n    return true\n  }\n}\n\nconst pipeLeafParser: LeafBlockParser = {\n  nextLine (ctx, line, leaf) {\n    // Pipe tables are only finished on empty lines, i.e. we don't have to do\n    // any logic in here.\n    return false\n  },\n  finish (ctx, leaf) {\n    // Called when there is an empty line, or something similar. At this point\n    // we need to check that whatever is in the leaf block is a valid pipe table\n    const lines = leaf.content.split('\\n')\n    if (lines.length < 3) {\n      return false // Pipe tables must have at least three lines\n    }\n\n    if (!pipeHeaderRE.test(lines[1])) {\n      return false // Second line must be a pipe table header\n    }\n\n    // All other lines must conform to pipeRE\n    for (let i = 0; i < lines.length; i++) {\n      if (i === 1) {\n        continue\n      }\n\n      if (!pipeRE.test(lines[i])) {\n        return false\n      }\n    }\n\n    // Construct the pipe table\n    const elt = parsePipeTable(ctx, leaf.start, leaf.start + leaf.content.length, lines)\n    ctx.addLeafElement(leaf, elt)\n    return true\n  }\n}\n\nexport const pipeTableParser: BlockParser = {\n  name: 'pipe-table',\n  leaf (ctx, leaf) {\n    if (pipeRE.test(leaf.content)) {\n      // NOTE: This will not detect \"full\" or \"regular\" pipe tables, since these\n      // will already be handled by the GFM table parser. This parser therefore\n      // basically only takes care of the \"ugly\" pipe tables (where the outer\n      // pipes are omitted). So don't wonder if out of your test pipe tables\n      // only some are detected, that's the reason.\n      return pipeLeafParser\n    } else {\n      return null\n    }\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"4658fcb32ea7607c805eece6e25c0a87548dd7fb","contentHash":"92df11066419c02d633d8b0ca46a465befbede67c7727e83dfd2af53862477ee"},"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/modules/markdown-editor/parser/zkn-link-parser.ts":{"path":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/modules/markdown-editor/parser/zkn-link-parser.ts","statementMap":{"0":{"start":{"line":15,"column":0},"end":{"line":15,"column":62}},"1":{"start":{"line":16,"column":0},"end":{"line":16,"column":31}},"2":{"start":{"line":18,"column":22},"end":{"line":66,"column":1}},"3":{"start":{"line":19,"column":4},"end":{"line":65,"column":6}},"4":{"start":{"line":24,"column":34},"end":{"line":24,"column":50}},"5":{"start":{"line":25,"column":31},"end":{"line":25,"column":60}},"6":{"start":{"line":26,"column":12},"end":{"line":28,"column":13}},"7":{"start":{"line":27,"column":16},"end":{"line":27,"column":26}},"8":{"start":{"line":29,"column":12},"end":{"line":31,"column":13}},"9":{"start":{"line":30,"column":16},"end":{"line":30,"column":26}},"10":{"start":{"line":32,"column":25},"end":{"line":32,"column":28}},"11":{"start":{"line":33,"column":23},"end":{"line":33,"column":58}},"12":{"start":{"line":35,"column":30},"end":{"line":35,"column":33}},"13":{"start":{"line":36,"column":28},"end":{"line":36,"column":41}},"14":{"start":{"line":38,"column":28},"end":{"line":38,"column":58}},"15":{"start":{"line":39,"column":26},"end":{"line":39,"column":37}},"16":{"start":{"line":41,"column":29},"end":{"line":44,"column":13}},"17":{"start":{"line":46,"column":32},"end":{"line":46,"column":39}},"18":{"start":{"line":47,"column":30},"end":{"line":47,"column":37}},"19":{"start":{"line":48,"column":29},"end":{"line":48,"column":93}},"20":{"start":{"line":49,"column":28},"end":{"line":49,"column":49}},"21":{"start":{"line":53,"column":12},"end":{"line":61,"column":13}},"22":{"start":{"line":55,"column":35},"end":{"line":55,"column":115}},"23":{"start":{"line":56,"column":16},"end":{"line":56,"column":300}},"24":{"start":{"line":60,"column":16},"end":{"line":60,"column":89}},"25":{"start":{"line":62,"column":28},"end":{"line":62,"column":66}},"26":{"start":{"line":63,"column":12},"end":{"line":63,"column":43}},"27":{"start":{"line":67,"column":0},"end":{"line":67,"column":38}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":18,"column":22},"end":{"line":18,"column":23}},"loc":{"start":{"line":18,"column":40},"end":{"line":66,"column":1}},"line":18},"1":{"name":"(anonymous_1)","decl":{"start":{"line":23,"column":15},"end":{"line":23,"column":16}},"loc":{"start":{"line":23,"column":35},"end":{"line":64,"column":9}},"line":23}},"branchMap":{"0":{"loc":{"start":{"line":26,"column":12},"end":{"line":28,"column":13}},"type":"if","locations":[{"start":{"line":26,"column":12},"end":{"line":28,"column":13}},{"start":{},"end":{}}],"line":26},"1":{"loc":{"start":{"line":29,"column":12},"end":{"line":31,"column":13}},"type":"if","locations":[{"start":{"line":29,"column":12},"end":{"line":31,"column":13}},{"start":{},"end":{}}],"line":29},"2":{"loc":{"start":{"line":53,"column":12},"end":{"line":61,"column":13}},"type":"if","locations":[{"start":{"line":53,"column":12},"end":{"line":61,"column":13}},{"start":{"line":58,"column":17},"end":{"line":61,"column":13}}],"line":53},"3":{"loc":{"start":{"line":53,"column":16},"end":{"line":53,"column":54}},"type":"binary-expr","locations":[{"start":{"line":53,"column":16},"end":{"line":53,"column":27}},{"start":{"line":53,"column":31},"end":{"line":53,"column":54}}],"line":53},"4":{"loc":{"start":{"line":55,"column":36},"end":{"line":55,"column":97}},"type":"cond-expr","locations":[{"start":{"line":55,"column":75},"end":{"line":55,"column":81}},{"start":{"line":55,"column":84},"end":{"line":55,"column":97}}],"line":55},"5":{"loc":{"start":{"line":55,"column":36},"end":{"line":55,"column":72}},"type":"binary-expr","locations":[{"start":{"line":55,"column":36},"end":{"line":55,"column":51}},{"start":{"line":55,"column":55},"end":{"line":55,"column":72}}],"line":55},"6":{"loc":{"start":{"line":56,"column":46},"end":{"line":56,"column":92}},"type":"cond-expr","locations":[{"start":{"line":56,"column":59},"end":{"line":56,"column":73}},{"start":{"line":56,"column":76},"end":{"line":56,"column":92}}],"line":56},"7":{"loc":{"start":{"line":56,"column":213},"end":{"line":56,"column":259}},"type":"cond-expr","locations":[{"start":{"line":56,"column":226},"end":{"line":56,"column":242}},{"start":{"line":56,"column":245},"end":{"line":56,"column":259}}],"line":56}},"s":{"0":1,"1":1,"2":1,"3":20,"4":1172,"5":1172,"6":1172,"7":1172,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":1},"f":{"0":20,"1":1172},"b":{"0":[1172,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/modules/markdown-editor/parser/zkn-link-parser.ts","sources":["/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/modules/markdown-editor/parser/zkn-link-parser.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @ignore\n * BEGIN HEADER\n *\n * Contains:        Zettelkasten Link Parser\n * CVM-Role:        InlineParser\n * Maintainer:      Hendrik Erz\n * License:         GNU GPL v3\n *\n * Description:     A small parser that adds Zettelkasten link elements to the tree.\n *\n * END HEADER\n */\n\nimport { type InlineParser } from '@lezer/markdown'\n\nexport interface ZknLinkParserConfig {\n  /**\n   * Describes whether internal Zettelkasten/Wiki-Links should follow the format\n   * `[[link|title]]`, or `[[title|link]]`. If not provided, the parser falls\n   * back to the default `[[link|title]]`.\n   *\n   * * The `[[link|title]]` syntax is used by:\n   *   * Obsidian\n   *   * Wikipedia (MediaWiki)\n   *   * VimWiki\n   *   * Orgmode\n   * * The `[[title|link]]` syntax is used by:\n   *   * GitHub\n   */\n  format?: 'link|title'|'title|link'\n}\n\n// This parser adds Zettelkasten links to the syntax tree.\nexport const zknLinkParser = function (config?: ZknLinkParserConfig): InlineParser {\n  return {\n    // This parser should only match citations\n    name: 'zkn-links',\n    before: 'Link', // In case of default [[links]], the inner brackets would be detected as links\n    parse: (ctx, next, pos) => {\n      const currentOffset = pos - ctx.offset\n      const restOfLine = ctx.text.slice(currentOffset)\n      if (!restOfLine.startsWith('[[')) {\n        return -1\n      }\n\n      if (restOfLine.indexOf(']]') < 2) {\n        return -1\n      }\n\n      const from = pos\n      const to = from + restOfLine.indexOf(']]') + 2\n\n      // [[\n      const startFrom = pos\n      const startTo = startFrom + 2\n\n      // ]]\n      const endFrom = pos + restOfLine.indexOf(']]')\n      const endTo = endFrom + 2\n\n      // Populate the children array\n      const children = [\n        ctx.elt('CodeMark', startFrom, startTo),\n        ctx.elt('CodeMark', endFrom, endTo)\n      ]\n\n      // Link contents\n      const contentFrom = startTo\n      const contentTo = endFrom\n      const contents = ctx.text.slice(contentFrom - ctx.offset, contentTo - ctx.offset)\n\n      const pipeIdx = contents.indexOf('|')\n      // NOTE: In order to avoid either empty links or empty titles and having\n      // to deal with these edge cases, we disallow putting pipes at either the\n      // beginning or the end of a link.\n      if (pipeIdx > 0 && !contents.endsWith('|')) {\n        // The link contains both a link and a title.\n        const titleFirst = config?.format === 'title|link'\n        children.splice(1, 0,\n          ctx.elt(titleFirst ? 'ZknLinkTitle' : 'ZknLinkContent', contentFrom, contentFrom + pipeIdx),\n          ctx.elt('ZknLinkPipe', contentFrom + pipeIdx, contentFrom + pipeIdx + 1),\n          ctx.elt(titleFirst ? 'ZknLinkContent' : 'ZknLinkTitle', contentFrom + pipeIdx + 1, contentTo)\n        )\n      } else {\n        // The link equals the title, no pipe found\n        children.splice(1, 0, ctx.elt('ZknLinkContent', contentFrom, contentTo))\n      }\n\n      const wrapper = ctx.elt('ZknLink', from, to, children)\n\n      return ctx.addElement(wrapper)\n    }\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"f08f4bb801c4d7e0abacc0c752ecaef678f43421","contentHash":"22940504fb18b36f0cf86b7a9f367ee3ef61fa911898ba0327b7419d8c2c1005"},"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/modules/markdown-editor/parser/pandoc-attributes-parser.ts":{"path":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/modules/markdown-editor/parser/pandoc-attributes-parser.ts","statementMap":{"0":{"start":{"line":22,"column":0},"end":{"line":22,"column":62}},"1":{"start":{"line":23,"column":0},"end":{"line":23,"column":40}},"2":{"start":{"line":27,"column":0},"end":{"line":55,"column":2}},"3":{"start":{"line":30,"column":8},"end":{"line":32,"column":9}},"4":{"start":{"line":31,"column":12},"end":{"line":31,"column":22}},"5":{"start":{"line":33,"column":8},"end":{"line":35,"column":9}},"6":{"start":{"line":34,"column":12},"end":{"line":34,"column":22}},"7":{"start":{"line":37,"column":31},"end":{"line":37,"column":47}},"8":{"start":{"line":38,"column":8},"end":{"line":40,"column":9}},"9":{"start":{"line":39,"column":12},"end":{"line":39,"column":22}},"10":{"start":{"line":41,"column":20},"end":{"line":41,"column":58}},"11":{"start":{"line":45,"column":34},"end":{"line":45,"column":89}},"12":{"start":{"line":46,"column":8},"end":{"line":48,"column":9}},"13":{"start":{"line":47,"column":12},"end":{"line":47,"column":22}},"14":{"start":{"line":49,"column":27},"end":{"line":52,"column":10}},"15":{"start":{"line":53,"column":8},"end":{"line":53,"column":82}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":29,"column":11},"end":{"line":29,"column":12}},"loc":{"start":{"line":29,"column":31},"end":{"line":54,"column":5}},"line":29}},"branchMap":{"0":{"loc":{"start":{"line":30,"column":8},"end":{"line":32,"column":9}},"type":"if","locations":[{"start":{"line":30,"column":8},"end":{"line":32,"column":9}},{"start":{},"end":{}}],"line":30},"1":{"loc":{"start":{"line":33,"column":8},"end":{"line":35,"column":9}},"type":"if","locations":[{"start":{"line":33,"column":8},"end":{"line":35,"column":9}},{"start":{},"end":{}}],"line":33},"2":{"loc":{"start":{"line":38,"column":8},"end":{"line":40,"column":9}},"type":"if","locations":[{"start":{"line":38,"column":8},"end":{"line":40,"column":9}},{"start":{},"end":{}}],"line":38},"3":{"loc":{"start":{"line":46,"column":8},"end":{"line":48,"column":9}},"type":"if","locations":[{"start":{"line":46,"column":8},"end":{"line":48,"column":9}},{"start":{},"end":{}}],"line":46},"4":{"loc":{"start":{"line":46,"column":12},"end":{"line":46,"column":73}},"type":"binary-expr","locations":[{"start":{"line":46,"column":12},"end":{"line":46,"column":51}},{"start":{"line":46,"column":55},"end":{"line":46,"column":73}}],"line":46}},"s":{"0":1,"1":1,"2":1,"3":1168,"4":1168,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},"f":{"0":1168},"b":{"0":[1168,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/modules/markdown-editor/parser/pandoc-attributes-parser.ts","sources":["/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/modules/markdown-editor/parser/pandoc-attributes-parser.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;;;;;;GAmBG;;;AAIH;;GAEG;AACU,QAAA,sBAAsB,GAAiB;IAClD,IAAI,EAAE,mBAAmB;IACzB,KAAK,EAAE,CAAC,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,EAAE;QACxB,IAAI,IAAI,KAAK,GAAG,EAAE,CAAC,CAAC,YAAY;YAC9B,OAAO,CAAC,CAAC,CAAA;QACX,CAAC;QAED,IAAI,GAAG,KAAK,GAAG,CAAC,MAAM,EAAE,CAAC;YACvB,OAAO,CAAC,CAAC,CAAA,CAAC,+CAA+C;QAC3D,CAAC;QAED,qCAAqC;QACrC,MAAM,cAAc,GAAG,GAAG,GAAG,GAAG,CAAC,MAAM,CAAA;QACvC,IAAI,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,cAAc,EAAE,CAAC;YAC5C,OAAO,CAAC,CAAC,CAAA;QACX,CAAC;QAED,MAAM,GAAG,GAAG,GAAG,CAAC,MAAM,GAAG,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA;QAElD,2EAA2E;QAC3E,4EAA4E;QAC5E,oDAAoD;QACpD,MAAM,iBAAiB,GAAG,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAA;QACjF,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC;YAClE,OAAO,CAAC,CAAC,CAAA;QACX,CAAC;QAED,MAAM,UAAU,GAAG,GAAG,CAAC,GAAG,CAAC,YAAY,EAAE,GAAG,EAAE,GAAG,EAAE;YACjD,GAAG,CAAC,GAAG,CAAC,UAAU,EAAE,GAAG,EAAE,GAAG,GAAG,CAAC,CAAC;YACjC,GAAG,CAAC,GAAG,CAAC,UAAU,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC;SAClC,CAAC,CAAA;QAEF,OAAO,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,CAAC,iBAAiB,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,CAAA;IAC3E,CAAC;CACF,CAAA","sourcesContent":["/**\n * @ignore\n * BEGIN HEADER\n *\n * Contains:        Pandoc Attributes parser\n * CVM-Role:        View\n * Maintainer:      Hendrik Erz\n * License:         GNU GPL v3\n *\n * Description:     Pandoc supports attributes for various elements in order to\n *                  add metadata to elements. For example, headers can receive a\n *                  custom identifier by specifying it in curly braces\n *                  afterwards, code-blocks can receive more metadata by\n *                  wrapping the info string in curly braces, and images can\n *                  receive specific width and height metrics. This inline\n *                  parser here parses these into tree elements that can then be\n *                  styled.\n *\n * END HEADER\n */\n\nimport { type InlineParser } from '@lezer/markdown'\n\n/**\n * Parses Pandoc attribute strings (e.g. `{.unnumbered}`) in the code\n */\nexport const pandocAttributesParser: InlineParser = {\n  name: 'pandoc-attributes',\n  parse: (ctx, next, pos) => {\n    if (next !== 123) { // 123 === {\n      return -1\n    }\n\n    if (pos === ctx.offset) {\n      return -1 // Curly brackets must only *follow* something.\n    }\n\n    // Ensure a matching closing bracket.\n    const relativeOffset = pos - ctx.offset\n    if (ctx.text.indexOf('}') <= relativeOffset) {\n      return -1\n    }\n\n    const end = ctx.offset + ctx.text.indexOf('}') + 1\n\n    // Final check: Pandoc attributes must be either the last thing on the line\n    // (then they basically apply to the whole line, i.e. with code block meta),\n    // or directly preceeded by a non-whitespace symbol.\n    const isWhitespaceAfter = /^\\s*$/.test(ctx.text.slice(ctx.text.indexOf('}') + 1))\n    if (/\\s/.test(ctx.text[relativeOffset - 1]) && !isWhitespaceAfter) {\n      return -1\n    }\n\n    const inlineCode = ctx.elt('InlineCode', pos, end, [\n      ctx.elt('CodeMark', pos, pos + 1),\n      ctx.elt('CodeMark', end - 1, end)\n    ])\n\n    return ctx.addElement(ctx.elt('PandocAttribute', pos, end, [inlineCode]))\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"c36fb4e04a037f1da434cfe7417d60c3cebd0853","contentHash":"de512ff9f29537046ed7bf3bc138ea0520cb4e0b48ec23bc90873847df4a38be"},"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/modules/markdown-editor/parser/highlight-parser.ts":{"path":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/modules/markdown-editor/parser/highlight-parser.ts","statementMap":{"0":{"start":{"line":15,"column":0},"end":{"line":15,"column":62}},"1":{"start":{"line":16,"column":0},"end":{"line":16,"column":33}},"2":{"start":{"line":17,"column":22},"end":{"line":20,"column":1}},"3":{"start":{"line":29,"column":17},"end":{"line":29,"column":39}},"4":{"start":{"line":33,"column":4},"end":{"line":33,"column":43}},"5":{"start":{"line":35,"column":0},"end":{"line":62,"column":2}},"6":{"start":{"line":39,"column":8},"end":{"line":41,"column":9}},"7":{"start":{"line":40,"column":12},"end":{"line":40,"column":22}},"8":{"start":{"line":43,"column":8},"end":{"line":45,"column":9}},"9":{"start":{"line":44,"column":12},"end":{"line":44,"column":22}},"10":{"start":{"line":54,"column":20},"end":{"line":54,"column":38}},"11":{"start":{"line":55,"column":20},"end":{"line":55,"column":39}},"12":{"start":{"line":56,"column":28},"end":{"line":56,"column":98}},"13":{"start":{"line":57,"column":27},"end":{"line":57,"column":98}},"14":{"start":{"line":58,"column":26},"end":{"line":58,"column":52}},"15":{"start":{"line":59,"column":26},"end":{"line":59,"column":36}},"16":{"start":{"line":60,"column":8},"end":{"line":60,"column":83}}},"fnMap":{"0":{"name":"allowedSurroundingChar","decl":{"start":{"line":28,"column":9},"end":{"line":28,"column":31}},"loc":{"start":{"line":28,"column":35},"end":{"line":34,"column":1}},"line":28},"1":{"name":"(anonymous_1)","decl":{"start":{"line":37,"column":11},"end":{"line":37,"column":12}},"loc":{"start":{"line":37,"column":31},"end":{"line":61,"column":5}},"line":37}},"branchMap":{"0":{"loc":{"start":{"line":39,"column":8},"end":{"line":41,"column":9}},"type":"if","locations":[{"start":{"line":39,"column":8},"end":{"line":41,"column":9}},{"start":{},"end":{}}],"line":39},"1":{"loc":{"start":{"line":39,"column":12},"end":{"line":39,"column":46}},"type":"binary-expr","locations":[{"start":{"line":39,"column":12},"end":{"line":39,"column":23}},{"start":{"line":39,"column":35},"end":{"line":39,"column":46}}],"line":39},"2":{"loc":{"start":{"line":43,"column":8},"end":{"line":45,"column":9}},"type":"if","locations":[{"start":{"line":43,"column":8},"end":{"line":45,"column":9}},{"start":{},"end":{}}],"line":43},"3":{"loc":{"start":{"line":43,"column":12},"end":{"line":43,"column":57}},"type":"binary-expr","locations":[{"start":{"line":43,"column":12},"end":{"line":43,"column":27}},{"start":{"line":43,"column":31},"end":{"line":43,"column":57}}],"line":43},"4":{"loc":{"start":{"line":56,"column":28},"end":{"line":56,"column":98}},"type":"binary-expr","locations":[{"start":{"line":56,"column":28},"end":{"line":56,"column":31}},{"start":{"line":56,"column":36},"end":{"line":56,"column":52}},{"start":{"line":56,"column":56},"end":{"line":56,"column":97}}],"line":56},"5":{"loc":{"start":{"line":57,"column":27},"end":{"line":57,"column":98}},"type":"binary-expr","locations":[{"start":{"line":57,"column":27},"end":{"line":57,"column":30}},{"start":{"line":57,"column":35},"end":{"line":57,"column":52}},{"start":{"line":57,"column":56},"end":{"line":57,"column":97}}],"line":57},"6":{"loc":{"start":{"line":58,"column":26},"end":{"line":58,"column":52}},"type":"binary-expr","locations":[{"start":{"line":58,"column":26},"end":{"line":58,"column":37}},{"start":{"line":58,"column":41},"end":{"line":58,"column":52}}],"line":58}},"s":{"0":1,"1":1,"2":1,"3":0,"4":0,"5":1,"6":1168,"7":1168,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0},"f":{"0":0,"1":1168},"b":{"0":[1168,0],"1":[1168,1168],"2":[0,0],"3":[0,0],"4":[0,0,0],"5":[0,0,0],"6":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/modules/markdown-editor/parser/highlight-parser.ts","sources":["/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/modules/markdown-editor/parser/highlight-parser.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;GAYG;;;AAIH,MAAM,aAAa,GAAkB;IACnC,OAAO,EAAE,kBAAkB;IAC3B,IAAI,EAAE,eAAe,CAAC,2EAA2E;CAClG,CAAA;AAED;;;;;;GAMG;AACH,SAAS,sBAAsB,CAAE,CAAS;IACxC,MAAM,IAAI,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAA;IACnC,8EAA8E;IAC9E,4EAA4E;IAC5E,6BAA6B;IAC7B,OAAO,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;AACxC,CAAC;AAEY,QAAA,eAAe,GAAiB;IAC3C,IAAI,EAAE,YAAY;IAClB,KAAK,EAAE,CAAC,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,EAAE;QACxB,wDAAwD;QACxD,IAAI,IAAI,KAAK,EAAE,CAAC,OAAO,IAAI,IAAI,KAAK,EAAE,CAAC,OAAO,EAAE,CAAC;YAC/C,OAAO,CAAC,CAAC,CAAA;QACX,CAAC;QAED,sDAAsD;QACtD,IAAI,GAAG,KAAK,GAAG,CAAC,GAAG,IAAI,IAAI,KAAK,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC;YAClD,OAAO,CAAC,CAAC,CAAA;QACX,CAAC;QAED,4EAA4E;QAC5E,0EAA0E;QAC1E,0EAA0E;QAC1E,0EAA0E;QAC1E,yEAAyE;QACzE,2EAA2E;QAC3E,yEAAyE;QACzE,gBAAgB;QAChB,MAAM,GAAG,GAAG,GAAG,KAAK,GAAG,CAAC,MAAM,CAAA;QAC9B,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,KAAK,GAAG,CAAC,GAAG,CAAA;QAC/B,MAAM,WAAW,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,MAAM,IAAI,sBAAsB,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;QAC1F,MAAM,UAAU,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,IAAI,sBAAsB,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;QAE1F,MAAM,SAAS,GAAG,WAAW,IAAI,CAAC,UAAU,CAAA;QAC5C,MAAM,SAAS,GAAG,UAAU,CAAA;QAE5B,OAAO,GAAG,CAAC,YAAY,CAAC,aAAa,EAAE,GAAG,EAAE,GAAG,GAAG,CAAC,EAAE,SAAS,EAAE,SAAS,CAAC,CAAA;IAC5E,CAAC;CACF,CAAA","sourcesContent":["/**\n * @ignore\n * BEGIN HEADER\n *\n * Contains:        Citation Parser\n * CVM-Role:        InlineParser\n * Maintainer:      Hendrik Erz\n * License:         GNU GPL v3\n *\n * Description:     This inline parser adds highlight elements to the tree\n *\n * END HEADER\n */\n\nimport { type InlineParser, type DelimiterType } from '@lezer/markdown'\n\nconst MarkDelimiter: DelimiterType = {\n  resolve: 'HighlightContent',\n  mark: 'HighlightMark' // No specific syntax node (for now due to backwards compatibility reasons)\n}\n\n/**\n * Determines if the provided char is allowed to surround highlighting marks\n *\n * @param   {number}   c  The char code\n *\n * @return  {boolean}     Whether it's allowed before/after a highlight mark\n */\nfunction allowedSurroundingChar (c: number): boolean {\n  const char = String.fromCharCode(c)\n  // Regex matches whitespace (Z), non-word-characters (math, currentcy; S), and\n  // general punctuation characters. NOTE: Partially \"stolen\" and adapted from\n  // the Lezer Markdown parser.\n  return /\\p{Z}|\\p{S}|\\p{P}/u.test(char)\n}\n\nexport const highlightParser: InlineParser = {\n  name: 'highlights',\n  parse: (ctx, next, pos) => {\n    // The next char must be either a colon or an equal sign\n    if (next !== 58 /* : */ && next !== 61 /* = */) {\n      return -1\n    }\n\n    // The one following `next` must be the same character\n    if (pos === ctx.end || next !== ctx.char(pos + 1)) {\n      return -1\n    }\n\n    // A highlight marker is considered opening if it is at the beginning of the\n    // line (bol) or is preceded by whitespace or any punctuation or generally\n    // non-word characters. Furthermore, it must not be followed by whitespace\n    // (or punctuation/certain chars) and not be at the end of the line (eol).\n    // For a highlight marker to be considered closing, it needs the opposite\n    // requirements. This is why we need both checks (because otherwise closing\n    // tags would allow preceding whitespace which would prompt Pandoc not to\n    // render them).\n    const bol = pos === ctx.offset\n    const eol = pos + 2 === ctx.end\n    const validBefore = bol || (pos > ctx.offset && allowedSurroundingChar(ctx.char(pos - 1)))\n    const validAfter = eol || (pos + 1 < ctx.end && allowedSurroundingChar(ctx.char(pos + 2)))\n\n    const isOpening = validBefore && !validAfter\n    const isClosing = validAfter\n\n    return ctx.addDelimiter(MarkDelimiter, pos, pos + 2, isOpening, isClosing)\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"3ce5390ba21c2b92eb2a540a967283bb8895e325","contentHash":"325c5597ef6bfe93cbe016397193d0416a70c9f82e7272c94ca661fba572aa04"},"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/modules/markdown-editor/parser/zkn-tag-parser.ts":{"path":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/modules/markdown-editor/parser/zkn-tag-parser.ts","statementMap":{"0":{"start":{"line":15,"column":0},"end":{"line":15,"column":62}},"1":{"start":{"line":16,"column":0},"end":{"line":16,"column":30}},"2":{"start":{"line":18,"column":27},"end":{"line":18,"column":48}},"3":{"start":{"line":19,"column":14},"end":{"line":19,"column":71}},"4":{"start":{"line":20,"column":0},"end":{"line":44,"column":2}},"5":{"start":{"line":23,"column":8},"end":{"line":25,"column":9}},"6":{"start":{"line":24,"column":12},"end":{"line":24,"column":22}},"7":{"start":{"line":27,"column":8},"end":{"line":29,"column":9}},"8":{"start":{"line":28,"column":12},"end":{"line":28,"column":22}},"9":{"start":{"line":30,"column":30},"end":{"line":30,"column":46}},"10":{"start":{"line":31,"column":27},"end":{"line":31,"column":56}},"11":{"start":{"line":32,"column":22},"end":{"line":32,"column":44}},"12":{"start":{"line":33,"column":8},"end":{"line":35,"column":9}},"13":{"start":{"line":34,"column":12},"end":{"line":34,"column":22}},"14":{"start":{"line":36,"column":20},"end":{"line":36,"column":41}},"15":{"start":{"line":40,"column":24},"end":{"line":40,"column":58}},"16":{"start":{"line":41,"column":20},"end":{"line":41,"column":58}},"17":{"start":{"line":42,"column":8},"end":{"line":42,"column":35}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":22,"column":11},"end":{"line":22,"column":12}},"loc":{"start":{"line":22,"column":31},"end":{"line":43,"column":5}},"line":22}},"branchMap":{"0":{"loc":{"start":{"line":23,"column":8},"end":{"line":25,"column":9}},"type":"if","locations":[{"start":{"line":23,"column":8},"end":{"line":25,"column":9}},{"start":{},"end":{}}],"line":23},"1":{"loc":{"start":{"line":27,"column":8},"end":{"line":29,"column":9}},"type":"if","locations":[{"start":{"line":27,"column":8},"end":{"line":29,"column":9}},{"start":{},"end":{}}],"line":27},"2":{"loc":{"start":{"line":27,"column":12},"end":{"line":27,"column":85}},"type":"binary-expr","locations":[{"start":{"line":27,"column":12},"end":{"line":27,"column":28}},{"start":{"line":27,"column":32},"end":{"line":27,"column":85}}],"line":27},"3":{"loc":{"start":{"line":33,"column":8},"end":{"line":35,"column":9}},"type":"if","locations":[{"start":{"line":33,"column":8},"end":{"line":35,"column":9}},{"start":{},"end":{}}],"line":33}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1172,"6":1168,"7":4,"8":0,"9":4,"10":4,"11":4,"12":4,"13":0,"14":4,"15":4,"16":4,"17":4},"f":{"0":1172},"b":{"0":[1168,4],"1":[0,4],"2":[4,4],"3":[0,4]},"inputSourceMap":{"version":3,"file":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/modules/markdown-editor/parser/zkn-tag-parser.ts","sources":["/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/modules/markdown-editor/parser/zkn-tag-parser.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;GAYG;;;AAIH,oEAAoE;AACpE,MAAM,kBAAkB,GAAG,WAAW,CAAC,KAAK,CAAC,EAAE,CAAC,CAAA;AAChD,MAAM,KAAK,GAAG,yDAAyD,CAAA;AAE1D,QAAA,YAAY,GAAiB;IACxC,IAAI,EAAE,UAAU;IAChB,KAAK,EAAE,CAAC,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,EAAE;QACxB,IAAI,IAAI,KAAK,EAAE,EAAE,CAAC,CAAC,IAAI;YACrB,OAAO,CAAC,CAAC,CAAA;QACX,CAAC;QAED,6BAA6B;QAC7B,IAAI,GAAG,GAAG,GAAG,CAAC,MAAM,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC;YAC9E,OAAO,CAAC,CAAC,CAAA;QACX,CAAC;QAED,MAAM,aAAa,GAAG,GAAG,GAAG,GAAG,CAAC,MAAM,CAAA;QACtC,MAAM,UAAU,GAAG,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,CAAA;QAEhD,MAAM,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,CAAA;QACpC,IAAI,KAAK,KAAK,IAAI,EAAE,CAAC;YACnB,OAAO,CAAC,CAAC,CAAA;QACX,CAAC;QAED,MAAM,GAAG,GAAG,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAA;QACjC,2EAA2E;QAC3E,wDAAwD;QACxD,qDAAqD;QACrD,MAAM,OAAO,GAAG,GAAG,CAAC,GAAG,CAAC,eAAe,EAAE,GAAG,EAAE,GAAG,CAAC,CAAA;QAClD,MAAM,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,QAAQ,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,OAAO,CAAC,CAAC,CAAA;QAClD,OAAO,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,CAAA;IAC5B,CAAC;CACF,CAAA","sourcesContent":["/**\n * @ignore\n * BEGIN HEADER\n *\n * Contains:        Zettelkasten Tag Parser\n * CVM-Role:        InlineParser\n * Maintainer:      Hendrik Erz\n * License:         GNU GPL v3\n *\n * Description:     A small parser that adds Zettelkasten tags to the tree.\n *\n * END HEADER\n */\n\nimport { type InlineParser } from '@lezer/markdown'\n\n// Any character allowed before a tag (the first are space and nbsp)\nconst allowedCharsBefore = '  \\t\\n({['.split('')\nconst tagRE = /^##?[^\\s,.:;…!?\"'`»«“”‘’—–@$%&*#^+~÷\\\\/|<=>[\\](){}]+#?/u\n\nexport const zknTagParser: InlineParser = {\n  name: 'zkn-tags',\n  parse: (ctx, next, pos) => {\n    if (next !== 35) { // #\n      return -1\n    }\n\n    // Check the character before\n    if (pos > ctx.offset && !allowedCharsBefore.includes(ctx.slice(pos - 1, pos))) {\n      return -1\n    }\n\n    const currentOffset = pos - ctx.offset\n    const restOfLine = ctx.text.slice(currentOffset)\n\n    const match = tagRE.exec(restOfLine)\n    if (match === null) {\n      return -1\n    }\n\n    const end = pos + match[0].length\n    // NOTE: Apparently syntax themes only style leaf nodes, not containers, so\n    // we'll wrap the whole tag into a single ZknTagContent.\n    // const markElem = ctx.elt('CodeMark', pos, pos + 1)\n    const content = ctx.elt('ZknTagContent', pos, end)\n    const tag = ctx.elt('ZknTag', pos, end, [content])\n    return ctx.addElement(tag)\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"3c61a6da96cfffa2f7fd1ac6da401b623129a765","contentHash":"f00eb14fd9cb6d2ca884c18c7afae71a80ea7530d023c51b9c1aa66c4c6069c7"},"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/modules/markdown-utils/markdown-ast/index.ts":{"path":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/modules/markdown-utils/markdown-ast/index.ts","statementMap":{"0":{"start":{"line":35,"column":22},"end":{"line":37,"column":1}},"1":{"start":{"line":36,"column":4},"end":{"line":36,"column":62}},"2":{"start":{"line":38,"column":0},"end":{"line":38,"column":62}},"3":{"start":{"line":39,"column":0},"end":{"line":39,"column":30}},"4":{"start":{"line":40,"column":28},"end":{"line":40,"column":86}},"5":{"start":{"line":41,"column":27},"end":{"line":41,"column":56}},"6":{"start":{"line":42,"column":37},"end":{"line":42,"column":76}},"7":{"start":{"line":43,"column":28},"end":{"line":43,"column":58}},"8":{"start":{"line":44,"column":25},"end":{"line":44,"column":52}},"9":{"start":{"line":57,"column":4},"end":{"line":422,"column":5}},"10":{"start":{"line":62,"column":24},"end":{"line":62,"column":50}},"11":{"start":{"line":63,"column":24},"end":{"line":63,"column":44}},"12":{"start":{"line":64,"column":12},"end":{"line":73,"column":13}},"13":{"start":{"line":65,"column":16},"end":{"line":72,"column":18}},"14":{"start":{"line":74,"column":28},"end":{"line":85,"column":13}},"15":{"start":{"line":86,"column":26},"end":{"line":86,"column":54}},"16":{"start":{"line":87,"column":12},"end":{"line":92,"column":13}},"17":{"start":{"line":91,"column":16},"end":{"line":91,"column":147}},"18":{"start":{"line":93,"column":12},"end":{"line":93,"column":27}},"19":{"start":{"line":96,"column":28},"end":{"line":105,"column":13}},"20":{"start":{"line":106,"column":12},"end":{"line":106,"column":27}},"21":{"start":{"line":114,"column":25},"end":{"line":114,"column":52}},"22":{"start":{"line":115,"column":26},"end":{"line":115,"column":65}},"23":{"start":{"line":116,"column":28},"end":{"line":124,"column":13}},"24":{"start":{"line":125,"column":12},"end":{"line":125,"column":27}},"25":{"start":{"line":129,"column":25},"end":{"line":129,"column":52}},"26":{"start":{"line":130,"column":26},"end":{"line":130,"column":103}},"27":{"start":{"line":131,"column":28},"end":{"line":139,"column":13}},"28":{"start":{"line":140,"column":12},"end":{"line":140,"column":27}},"29":{"start":{"line":143,"column":28},"end":{"line":151,"column":13}},"30":{"start":{"line":152,"column":12},"end":{"line":152,"column":27}},"31":{"start":{"line":155,"column":29},"end":{"line":155,"column":75}},"32":{"start":{"line":156,"column":28},"end":{"line":164,"column":13}},"33":{"start":{"line":165,"column":12},"end":{"line":165,"column":27}},"34":{"start":{"line":168,"column":26},"end":{"line":168,"column":59}},"35":{"start":{"line":169,"column":25},"end":{"line":169,"column":57}},"36":{"start":{"line":170,"column":28},"end":{"line":178,"column":13}},"37":{"start":{"line":179,"column":12},"end":{"line":184,"column":13}},"38":{"start":{"line":180,"column":16},"end":{"line":180,"column":84}},"39":{"start":{"line":183,"column":16},"end":{"line":183,"column":31}},"40":{"start":{"line":187,"column":28},"end":{"line":194,"column":13}},"41":{"start":{"line":195,"column":12},"end":{"line":195,"column":80}},"42":{"start":{"line":198,"column":28},"end":{"line":208,"column":13}},"43":{"start":{"line":209,"column":12},"end":{"line":241,"column":13}},"44":{"start":{"line":210,"column":33},"end":{"line":218,"column":17}},"45":{"start":{"line":219,"column":33},"end":{"line":219,"column":58}},"46":{"start":{"line":220,"column":16},"end":{"line":232,"column":17}},"47":{"start":{"line":221,"column":20},"end":{"line":221,"column":57}},"48":{"start":{"line":222,"column":20},"end":{"line":222,"column":53}},"49":{"start":{"line":223,"column":35},"end":{"line":223,"column":99}},"50":{"start":{"line":224,"column":34},"end":{"line":224,"column":82}},"51":{"start":{"line":225,"column":20},"end":{"line":225,"column":45}},"52":{"start":{"line":226,"column":20},"end":{"line":231,"column":21}},"53":{"start":{"line":227,"column":24},"end":{"line":227,"column":50}},"54":{"start":{"line":228,"column":24},"end":{"line":230,"column":25}},"55":{"start":{"line":229,"column":28},"end":{"line":229,"column":54}},"56":{"start":{"line":234,"column":29},"end":{"line":234,"column":50}},"57":{"start":{"line":235,"column":35},"end":{"line":235,"column":85}},"58":{"start":{"line":236,"column":16},"end":{"line":239,"column":17}},"59":{"start":{"line":237,"column":33},"end":{"line":237,"column":83}},"60":{"start":{"line":238,"column":20},"end":{"line":238,"column":54}},"61":{"start":{"line":240,"column":16},"end":{"line":240,"column":98}},"62":{"start":{"line":242,"column":12},"end":{"line":242,"column":27}},"63":{"start":{"line":245,"column":28},"end":{"line":254,"column":13}},"64":{"start":{"line":255,"column":12},"end":{"line":282,"column":13}},"65":{"start":{"line":256,"column":33},"end":{"line":264,"column":17}},"66":{"start":{"line":265,"column":33},"end":{"line":265,"column":58}},"67":{"start":{"line":266,"column":16},"end":{"line":273,"column":17}},"68":{"start":{"line":267,"column":20},"end":{"line":267,"column":57}},"69":{"start":{"line":268,"column":20},"end":{"line":268,"column":53}},"70":{"start":{"line":269,"column":35},"end":{"line":269,"column":81}},"71":{"start":{"line":270,"column":20},"end":{"line":272,"column":21}},"72":{"start":{"line":271,"column":24},"end":{"line":271,"column":48}},"73":{"start":{"line":275,"column":29},"end":{"line":275,"column":50}},"74":{"start":{"line":276,"column":35},"end":{"line":276,"column":85}},"75":{"start":{"line":277,"column":16},"end":{"line":280,"column":17}},"76":{"start":{"line":278,"column":33},"end":{"line":278,"column":83}},"77":{"start":{"line":279,"column":20},"end":{"line":279,"column":54}},"78":{"start":{"line":281,"column":16},"end":{"line":281,"column":98}},"79":{"start":{"line":283,"column":12},"end":{"line":283,"column":27}},"80":{"start":{"line":287,"column":23},"end":{"line":287,"column":48}},"81":{"start":{"line":288,"column":25},"end":{"line":288,"column":50}},"82":{"start":{"line":289,"column":12},"end":{"line":296,"column":13}},"83":{"start":{"line":290,"column":33},"end":{"line":290,"column":71}},"84":{"start":{"line":291,"column":16},"end":{"line":295,"column":17}},"85":{"start":{"line":294,"column":20},"end":{"line":294,"column":32}},"86":{"start":{"line":297,"column":27},"end":{"line":297,"column":52}},"87":{"start":{"line":298,"column":28},"end":{"line":306,"column":13}},"88":{"start":{"line":307,"column":12},"end":{"line":307,"column":27}},"89":{"start":{"line":310,"column":27},"end":{"line":310,"column":52}},"90":{"start":{"line":311,"column":28},"end":{"line":318,"column":13}},"91":{"start":{"line":319,"column":12},"end":{"line":319,"column":27}},"92":{"start":{"line":322,"column":33},"end":{"line":322,"column":61}},"93":{"start":{"line":323,"column":28},"end":{"line":330,"column":13}},"94":{"start":{"line":331,"column":12},"end":{"line":331,"column":27}},"95":{"start":{"line":335,"column":28},"end":{"line":342,"column":13}},"96":{"start":{"line":343,"column":12},"end":{"line":343,"column":27}},"97":{"start":{"line":347,"column":28},"end":{"line":355,"column":13}},"98":{"start":{"line":356,"column":12},"end":{"line":356,"column":80}},"99":{"start":{"line":359,"column":28},"end":{"line":366,"column":13}},"100":{"start":{"line":367,"column":12},"end":{"line":367,"column":80}},"101":{"start":{"line":370,"column":28},"end":{"line":377,"column":13}},"102":{"start":{"line":378,"column":12},"end":{"line":378,"column":80}},"103":{"start":{"line":382,"column":12},"end":{"line":382,"column":74}},"104":{"start":{"line":384,"column":28},"end":{"line":384,"column":59}},"105":{"start":{"line":385,"column":12},"end":{"line":387,"column":13}},"106":{"start":{"line":386,"column":16},"end":{"line":386,"column":111}},"107":{"start":{"line":388,"column":26},"end":{"line":388,"column":103}},"108":{"start":{"line":389,"column":28},"end":{"line":397,"column":13}},"109":{"start":{"line":398,"column":12},"end":{"line":398,"column":27}},"110":{"start":{"line":401,"column":28},"end":{"line":408,"column":13}},"111":{"start":{"line":409,"column":12},"end":{"line":409,"column":27}},"112":{"start":{"line":412,"column":28},"end":{"line":419,"column":13}},"113":{"start":{"line":420,"column":12},"end":{"line":420,"column":80}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":35,"column":56},"end":{"line":35,"column":57}},"loc":{"start":{"line":35,"column":71},"end":{"line":37,"column":1}},"line":35},"1":{"name":"parseNode","decl":{"start":{"line":55,"column":9},"end":{"line":55,"column":18}},"loc":{"start":{"line":55,"column":35},"end":{"line":423,"column":1}},"line":55}},"branchMap":{"0":{"loc":{"start":{"line":35,"column":22},"end":{"line":37,"column":1}},"type":"binary-expr","locations":[{"start":{"line":35,"column":23},"end":{"line":35,"column":27}},{"start":{"line":35,"column":31},"end":{"line":35,"column":51}},{"start":{"line":35,"column":56},"end":{"line":37,"column":1}}],"line":35},"1":{"loc":{"start":{"line":36,"column":11},"end":{"line":36,"column":61}},"type":"cond-expr","locations":[{"start":{"line":36,"column":37},"end":{"line":36,"column":40}},{"start":{"line":36,"column":43},"end":{"line":36,"column":61}}],"line":36},"2":{"loc":{"start":{"line":36,"column":12},"end":{"line":36,"column":33}},"type":"binary-expr","locations":[{"start":{"line":36,"column":12},"end":{"line":36,"column":15}},{"start":{"line":36,"column":19},"end":{"line":36,"column":33}}],"line":36},"3":{"loc":{"start":{"line":57,"column":4},"end":{"line":422,"column":5}},"type":"switch","locations":[{"start":{"line":60,"column":8},"end":{"line":60,"column":21}},{"start":{"line":61,"column":8},"end":{"line":94,"column":9}},{"start":{"line":95,"column":8},"end":{"line":107,"column":9}},{"start":{"line":108,"column":8},"end":{"line":108,"column":27}},{"start":{"line":109,"column":8},"end":{"line":109,"column":27}},{"start":{"line":110,"column":8},"end":{"line":110,"column":27}},{"start":{"line":111,"column":8},"end":{"line":111,"column":27}},{"start":{"line":112,"column":8},"end":{"line":112,"column":27}},{"start":{"line":113,"column":8},"end":{"line":126,"column":9}},{"start":{"line":127,"column":8},"end":{"line":127,"column":30}},{"start":{"line":128,"column":8},"end":{"line":141,"column":9}},{"start":{"line":142,"column":8},"end":{"line":153,"column":9}},{"start":{"line":154,"column":8},"end":{"line":166,"column":9}},{"start":{"line":167,"column":8},"end":{"line":185,"column":9}},{"start":{"line":186,"column":8},"end":{"line":196,"column":9}},{"start":{"line":197,"column":8},"end":{"line":243,"column":9}},{"start":{"line":244,"column":8},"end":{"line":284,"column":9}},{"start":{"line":285,"column":8},"end":{"line":285,"column":26}},{"start":{"line":286,"column":8},"end":{"line":308,"column":9}},{"start":{"line":309,"column":8},"end":{"line":320,"column":9}},{"start":{"line":321,"column":8},"end":{"line":332,"column":9}},{"start":{"line":333,"column":8},"end":{"line":333,"column":23}},{"start":{"line":334,"column":8},"end":{"line":344,"column":9}},{"start":{"line":345,"column":8},"end":{"line":345,"column":24}},{"start":{"line":346,"column":8},"end":{"line":357,"column":9}},{"start":{"line":358,"column":8},"end":{"line":368,"column":9}},{"start":{"line":369,"column":8},"end":{"line":379,"column":9}},{"start":{"line":380,"column":8},"end":{"line":382,"column":74}},{"start":{"line":383,"column":8},"end":{"line":399,"column":9}},{"start":{"line":400,"column":8},"end":{"line":410,"column":9}},{"start":{"line":411,"column":8},"end":{"line":421,"column":9}}],"line":57},"4":{"loc":{"start":{"line":64,"column":12},"end":{"line":73,"column":13}},"type":"if","locations":[{"start":{"line":64,"column":12},"end":{"line":73,"column":13}},{"start":{},"end":{}}],"line":64},"5":{"loc":{"start":{"line":82,"column":21},"end":{"line":84,"column":118}},"type":"cond-expr","locations":[{"start":{"line":83,"column":22},"end":{"line":83,"column":118}},{"start":{"line":84,"column":22},"end":{"line":84,"column":118}}],"line":82},"6":{"loc":{"start":{"line":87,"column":12},"end":{"line":92,"column":13}},"type":"if","locations":[{"start":{"line":87,"column":12},"end":{"line":92,"column":13}},{"start":{},"end":{}}],"line":87},"7":{"loc":{"start":{"line":87,"column":16},"end":{"line":87,"column":49}},"type":"binary-expr","locations":[{"start":{"line":87,"column":16},"end":{"line":87,"column":28}},{"start":{"line":87,"column":32},"end":{"line":87,"column":49}}],"line":87},"8":{"loc":{"start":{"line":115,"column":26},"end":{"line":115,"column":65}},"type":"cond-expr","locations":[{"start":{"line":115,"column":42},"end":{"line":115,"column":61}},{"start":{"line":115,"column":64},"end":{"line":115,"column":65}}],"line":115},"9":{"loc":{"start":{"line":122,"column":64},"end":{"line":122,"column":165}},"type":"cond-expr","locations":[{"start":{"line":122,"column":151},"end":{"line":122,"column":153}},{"start":{"line":122,"column":156},"end":{"line":122,"column":165}}],"line":122},"10":{"loc":{"start":{"line":122,"column":64},"end":{"line":122,"column":148}},"type":"binary-expr","locations":[{"start":{"line":122,"column":64},"end":{"line":122,"column":131}},{"start":{"line":122,"column":135},"end":{"line":122,"column":148}}],"line":122},"11":{"loc":{"start":{"line":122,"column":70},"end":{"line":122,"column":121}},"type":"cond-expr","locations":[{"start":{"line":122,"column":105},"end":{"line":122,"column":111}},{"start":{"line":122,"column":114},"end":{"line":122,"column":121}}],"line":122},"12":{"loc":{"start":{"line":122,"column":70},"end":{"line":122,"column":102}},"type":"binary-expr","locations":[{"start":{"line":122,"column":70},"end":{"line":122,"column":83}},{"start":{"line":122,"column":87},"end":{"line":122,"column":102}}],"line":122},"13":{"loc":{"start":{"line":122,"column":195},"end":{"line":122,"column":296}},"type":"cond-expr","locations":[{"start":{"line":122,"column":282},"end":{"line":122,"column":284}},{"start":{"line":122,"column":287},"end":{"line":122,"column":296}}],"line":122},"14":{"loc":{"start":{"line":122,"column":195},"end":{"line":122,"column":279}},"type":"binary-expr","locations":[{"start":{"line":122,"column":195},"end":{"line":122,"column":262}},{"start":{"line":122,"column":266},"end":{"line":122,"column":279}}],"line":122},"15":{"loc":{"start":{"line":122,"column":201},"end":{"line":122,"column":252}},"type":"cond-expr","locations":[{"start":{"line":122,"column":236},"end":{"line":122,"column":242}},{"start":{"line":122,"column":245},"end":{"line":122,"column":252}}],"line":122},"16":{"loc":{"start":{"line":122,"column":201},"end":{"line":122,"column":233}},"type":"binary-expr","locations":[{"start":{"line":122,"column":201},"end":{"line":122,"column":214}},{"start":{"line":122,"column":218},"end":{"line":122,"column":233}}],"line":122},"17":{"loc":{"start":{"line":130,"column":26},"end":{"line":130,"column":103}},"type":"cond-expr","locations":[{"start":{"line":130,"column":98},"end":{"line":130,"column":99}},{"start":{"line":130,"column":102},"end":{"line":130,"column":103}}],"line":130},"18":{"loc":{"start":{"line":130,"column":26},"end":{"line":130,"column":95}},"type":"binary-expr","locations":[{"start":{"line":130,"column":26},"end":{"line":130,"column":39}},{"start":{"line":130,"column":43},"end":{"line":130,"column":95}}],"line":130},"19":{"loc":{"start":{"line":137,"column":64},"end":{"line":137,"column":165}},"type":"cond-expr","locations":[{"start":{"line":137,"column":151},"end":{"line":137,"column":153}},{"start":{"line":137,"column":156},"end":{"line":137,"column":165}}],"line":137},"20":{"loc":{"start":{"line":137,"column":64},"end":{"line":137,"column":148}},"type":"binary-expr","locations":[{"start":{"line":137,"column":64},"end":{"line":137,"column":131}},{"start":{"line":137,"column":135},"end":{"line":137,"column":148}}],"line":137},"21":{"loc":{"start":{"line":137,"column":70},"end":{"line":137,"column":121}},"type":"cond-expr","locations":[{"start":{"line":137,"column":105},"end":{"line":137,"column":111}},{"start":{"line":137,"column":114},"end":{"line":137,"column":121}}],"line":137},"22":{"loc":{"start":{"line":137,"column":70},"end":{"line":137,"column":102}},"type":"binary-expr","locations":[{"start":{"line":137,"column":70},"end":{"line":137,"column":83}},{"start":{"line":137,"column":87},"end":{"line":137,"column":102}}],"line":137},"23":{"loc":{"start":{"line":137,"column":206},"end":{"line":137,"column":307}},"type":"cond-expr","locations":[{"start":{"line":137,"column":295},"end":{"line":137,"column":297}},{"start":{"line":137,"column":300},"end":{"line":137,"column":307}}],"line":137},"24":{"loc":{"start":{"line":137,"column":206},"end":{"line":137,"column":292}},"type":"binary-expr","locations":[{"start":{"line":137,"column":206},"end":{"line":137,"column":275}},{"start":{"line":137,"column":279},"end":{"line":137,"column":292}}],"line":137},"25":{"loc":{"start":{"line":137,"column":212},"end":{"line":137,"column":265}},"type":"cond-expr","locations":[{"start":{"line":137,"column":247},"end":{"line":137,"column":253}},{"start":{"line":137,"column":256},"end":{"line":137,"column":265}}],"line":137},"26":{"loc":{"start":{"line":137,"column":212},"end":{"line":137,"column":244}},"type":"binary-expr","locations":[{"start":{"line":137,"column":212},"end":{"line":137,"column":225}},{"start":{"line":137,"column":229},"end":{"line":137,"column":244}}],"line":137},"27":{"loc":{"start":{"line":163,"column":23},"end":{"line":163,"column":101}},"type":"cond-expr","locations":[{"start":{"line":163,"column":48},"end":{"line":163,"column":90}},{"start":{"line":163,"column":93},"end":{"line":163,"column":101}}],"line":163},"28":{"loc":{"start":{"line":176,"column":23},"end":{"line":176,"column":93}},"type":"cond-expr","locations":[{"start":{"line":176,"column":40},"end":{"line":176,"column":88}},{"start":{"line":176,"column":91},"end":{"line":176,"column":93}}],"line":176},"29":{"loc":{"start":{"line":179,"column":12},"end":{"line":184,"column":13}},"type":"if","locations":[{"start":{"line":179,"column":12},"end":{"line":184,"column":13}},{"start":{"line":182,"column":17},"end":{"line":184,"column":13}}],"line":179},"30":{"loc":{"start":{"line":220,"column":16},"end":{"line":232,"column":17}},"type":"if","locations":[{"start":{"line":220,"column":16},"end":{"line":232,"column":17}},{"start":{},"end":{}}],"line":220},"31":{"loc":{"start":{"line":226,"column":20},"end":{"line":231,"column":21}},"type":"if","locations":[{"start":{"line":226,"column":20},"end":{"line":231,"column":21}},{"start":{},"end":{}}],"line":226},"32":{"loc":{"start":{"line":228,"column":24},"end":{"line":230,"column":25}},"type":"if","locations":[{"start":{"line":228,"column":24},"end":{"line":230,"column":25}},{"start":{},"end":{}}],"line":228},"33":{"loc":{"start":{"line":228,"column":28},"end":{"line":228,"column":58}},"type":"binary-expr","locations":[{"start":{"line":228,"column":28},"end":{"line":228,"column":41}},{"start":{"line":228,"column":45},"end":{"line":228,"column":58}}],"line":228},"34":{"loc":{"start":{"line":235,"column":35},"end":{"line":235,"column":85}},"type":"cond-expr","locations":[{"start":{"line":235,"column":51},"end":{"line":235,"column":78}},{"start":{"line":235,"column":81},"end":{"line":235,"column":85}}],"line":235},"35":{"loc":{"start":{"line":236,"column":16},"end":{"line":239,"column":17}},"type":"if","locations":[{"start":{"line":236,"column":16},"end":{"line":239,"column":17}},{"start":{},"end":{}}],"line":236},"36":{"loc":{"start":{"line":266,"column":16},"end":{"line":273,"column":17}},"type":"if","locations":[{"start":{"line":266,"column":16},"end":{"line":273,"column":17}},{"start":{},"end":{}}],"line":266},"37":{"loc":{"start":{"line":270,"column":20},"end":{"line":272,"column":21}},"type":"if","locations":[{"start":{"line":270,"column":20},"end":{"line":272,"column":21}},{"start":{},"end":{}}],"line":270},"38":{"loc":{"start":{"line":270,"column":24},"end":{"line":270,"column":74}},"type":"binary-expr","locations":[{"start":{"line":270,"column":24},"end":{"line":270,"column":38}},{"start":{"line":270,"column":42},"end":{"line":270,"column":56}},{"start":{"line":270,"column":60},"end":{"line":270,"column":74}}],"line":270},"39":{"loc":{"start":{"line":276,"column":35},"end":{"line":276,"column":85}},"type":"cond-expr","locations":[{"start":{"line":276,"column":51},"end":{"line":276,"column":78}},{"start":{"line":276,"column":81},"end":{"line":276,"column":85}}],"line":276},"40":{"loc":{"start":{"line":277,"column":16},"end":{"line":280,"column":17}},"type":"if","locations":[{"start":{"line":277,"column":16},"end":{"line":280,"column":17}},{"start":{},"end":{}}],"line":277},"41":{"loc":{"start":{"line":289,"column":12},"end":{"line":296,"column":13}},"type":"if","locations":[{"start":{"line":289,"column":12},"end":{"line":296,"column":13}},{"start":{},"end":{}}],"line":289},"42":{"loc":{"start":{"line":291,"column":16},"end":{"line":295,"column":17}},"type":"if","locations":[{"start":{"line":291,"column":16},"end":{"line":295,"column":17}},{"start":{},"end":{}}],"line":291},"43":{"loc":{"start":{"line":304,"column":22},"end":{"line":304,"column":81}},"type":"cond-expr","locations":[{"start":{"line":304,"column":38},"end":{"line":304,"column":76}},{"start":{"line":304,"column":79},"end":{"line":304,"column":81}}],"line":304},"44":{"loc":{"start":{"line":305,"column":24},"end":{"line":305,"column":89}},"type":"cond-expr","locations":[{"start":{"line":305,"column":42},"end":{"line":305,"column":84}},{"start":{"line":305,"column":87},"end":{"line":305,"column":89}}],"line":305},"45":{"loc":{"start":{"line":317,"column":24},"end":{"line":317,"column":89}},"type":"cond-expr","locations":[{"start":{"line":317,"column":42},"end":{"line":317,"column":84}},{"start":{"line":317,"column":87},"end":{"line":317,"column":89}}],"line":317},"46":{"loc":{"start":{"line":350,"column":23},"end":{"line":350,"column":67}},"type":"cond-expr","locations":[{"start":{"line":350,"column":50},"end":{"line":350,"column":58}},{"start":{"line":350,"column":61},"end":{"line":350,"column":67}}],"line":350},"47":{"loc":{"start":{"line":385,"column":12},"end":{"line":387,"column":13}},"type":"if","locations":[{"start":{"line":385,"column":12},"end":{"line":387,"column":13}},{"start":{},"end":{}}],"line":385},"48":{"loc":{"start":{"line":388,"column":26},"end":{"line":388,"column":103}},"type":"cond-expr","locations":[{"start":{"line":388,"column":91},"end":{"line":388,"column":93}},{"start":{"line":388,"column":96},"end":{"line":388,"column":103}}],"line":388},"49":{"loc":{"start":{"line":388,"column":26},"end":{"line":388,"column":88}},"type":"binary-expr","locations":[{"start":{"line":388,"column":26},"end":{"line":388,"column":71}},{"start":{"line":388,"column":75},"end":{"line":388,"column":88}}],"line":388}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":122,"10":4,"11":4,"12":4,"13":0,"14":4,"15":4,"16":4,"17":0,"18":4,"19":0,"20":0,"21":10,"22":10,"23":10,"24":10,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":4,"64":4,"65":12,"66":12,"67":12,"68":12,"69":12,"70":12,"71":12,"72":12,"73":12,"74":12,"75":12,"76":0,"77":0,"78":12,"79":4,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":4,"90":4,"91":4,"92":0,"93":0,"94":0,"95":0,"96":0,"97":12,"98":12,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":4,"111":4,"112":84,"113":84},"f":{"0":1,"1":122},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1],"3":[0,4,0,10,10,10,10,10,10,0,0,0,0,0,0,0,4,0,0,4,0,0,0,6,12,0,0,0,0,4,84],"4":[0,4],"5":[4,0],"6":[0,4],"7":[4,0],"8":[10,0],"9":[10,0],"10":[10,10],"11":[0,10],"12":[10,10],"13":[10,0],"14":[10,10],"15":[0,10],"16":[10,10],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[12,0],"37":[12,0],"38":[12,6,6],"39":[0,12],"40":[0,12],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[4,0],"46":[6,6],"47":[0,0],"48":[0,0],"49":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/modules/markdown-utils/markdown-ast/index.ts","sources":["/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/modules/markdown-utils/markdown-ast/index.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @ignore\n * BEGIN HEADER\n *\n * Contains:        parseNode\n * CVM-Role:        Utility Function\n * Maintainer:      Hendrik Erz\n * License:         GNU GPL v3\n *\n * Description:     This file contains a converter that can take in a Markdown\n *                  source string and convert it to an Abstract Syntax Tree.\n *                  This file follows the advice of Marijn Haverbeke, who\n *                  mentioned that Lezer trees are not necessarily \"abstract\"\n *                  and hence need to be converted prior to utilizing the tree:\n *\n *                  \"These trees, represented by data structures from the\n *                  @lezer/common package, are more limited than the abstract\n *                  syntax trees you might have seen in other contexts. They are\n *                  not very abstract.\"\n *                  (from: https://lezer.codemirror.net/docs/guide/)\n *\n *                  The utility function runs the Markdown parser as defined for\n *                  the main editor to ensure that every element that the user\n *                  can see in the editor will also end up represented here. The\n *                  syntax tree is primarily used in two different instances\n *                  across the app:\n *\n *                  1. To extract only the text nodes (Readability Mode & spell\n *                     checking)\n *                  2. To \"copy as HTML\" (see markdown-to-html)\n *\n * END HEADER\n */\n\nimport extractCitations, { type CitePosition } from '@common/util/extract-citations'\nimport { type SyntaxNode } from '@lezer/common'\nimport { parseTableNode } from './parse-table-node'\nimport { getWhitespaceBeforeNode } from './get-whitespace-before-node'\nimport { genericTextNode } from './generic-text-node'\nimport { parseChildren } from './parse-children'\n\n/**\n * Basic info every ASTNode needs to provide\n */\nexport interface MDNode {\n  /**\n   * The node.name property (may differ from the type; significant mainly for\n   * generics)\n   */\n  name: string\n  /**\n   * The start offset of this node in the original source\n   */\n  from: number\n  /**\n   * The end offset of this node in the original source\n   */\n  to: number\n  /**\n   * This property contains the whitespace before this node; required to\n   * determine appropriate significant whitespace portions for some elements\n   * upon converting to HTML.\n   */\n  whitespaceBefore: string\n  /**\n   * Can be used to store arbitrary attributes (e.g. Pandoc-style attributes\n   * such as {.className})\n   */\n  attributes?: Record<string, string>\n}\n\n/**\n * Represents a footnote (the indicator within the text itself, not the\n * reference).\n */\nexport interface Footnote extends MDNode {\n  type: 'Footnote'\n  /**\n   * If this is true, this means that the label is actually the footnote's\n   * context, whereas label will be the footnote ref number if its false.\n   */\n  inline: boolean\n  /**\n   * The label of the footnote (sans the formatting, i.e. [^1] -> 1)\n   */\n  label: string\n}\n\n/**\n * A footnote reference, complete with label and footnote body.\n */\nexport interface FootnoteRef extends MDNode {\n  type: 'FootnoteRef'\n  /**\n   * The label of the footnote (sans the formatting, i.e. [^1]: -> 1)\n   */\n  label: string\n  /**\n   * A list of children representing the footnote's body\n   */\n  children: ASTNode[]\n}\n\n/**\n * Either a link or an image, since the difference between these two nodes\n * consists of a single character.\n */\nexport interface LinkOrImage extends MDNode {\n  type: 'Link'|'Image'\n  /**\n   * The URL of the link or image\n   */\n  url: string\n  /**\n   * ALT text of the link or image (i.e. what's written in square brackets)\n   */\n  alt: TextNode\n  /**\n   * Optional title text (i.e. what can be added after the URL in quotes)\n   */\n  title?: TextNode\n}\n\n/**\n * Represents a Heading.\n */\nexport interface Heading extends MDNode {\n  type: 'Heading'\n  /**\n   * The heading's content\n   */\n  value: TextNode\n  /**\n   * Level from 1-6\n   */\n  level: number\n}\n\n/**\n * A citation element\n */\nexport interface Citation extends MDNode {\n  type: 'Citation'\n  /**\n   * The unparsed, raw citation code\n   */\n  value: string\n  /**\n   * The parsed citation code that can be used to render the citation\n   */\n  parsedCitation: CitePosition\n}\n\n/**\n * A highlight, e.g., encapsulated ==in equality signs==\n */\nexport interface Highlight extends MDNode {\n  type: 'Highlight'\n  /**\n   * Since it's a regular inline element, it can have children\n   */\n  children: ASTNode[]\n}\n\nexport interface Superscript extends MDNode {\n  type: 'Superscript'\n  children: ASTNode[]\n}\n\nexport interface Subscript extends MDNode {\n  type: 'Subscript'\n  children: ASTNode[]\n}\n\n/**\n * A single list item.\n */\nexport interface ListItem extends MDNode {\n  type: 'ListItem'\n  /**\n   * An optional property. If it exists, it is a task item, and the property\n   * indicates whether it is checked or not.\n   */\n  checked?: boolean\n  /**\n   * An optional property. It is set on ordered list items and indicates the\n   * number that was used for this item in the Markdown source. Should be\n   * ignored by converters that transform the list into HTML.\n   */\n  number?: number\n  /**\n   * A property that includes information about the list item marker.\n   */\n  marker: {\n    /**\n     * The start of the list marker.\n     */\n    from: number\n    /**\n     * The end of the list marker.\n     */\n    to: number\n  }\n  /**\n   * A list item can contain an arbitrary amount of child nodes. Adding \"List\"\n   * as an explicit child to signify that nested lists are children of an item.\n   */\n  children: Array<OrderedList|BulletList|ASTNode>\n}\n\n/**\n * Represents an ordered list.\n */\nexport interface OrderedList extends MDNode {\n  type: 'OrderedList'\n  /**\n   * At what number the list starts (default: 1)\n   */\n  startsAt: number\n  /**\n   * The delimiter used by this list, can be either ) or .\n   */\n  delimiter: ')'|'.'\n  /**\n   * Whether this list is loose (in that case, HTML output should wrap the list\n   * item's contents in paragraphs)\n   */\n  loose: boolean\n  /**\n   * A set of list items\n   */\n  items: ListItem[]\n}\n\nexport interface BulletList extends MDNode {\n  type: 'BulletList'\n  /**\n   * The symbol this list uses\n   */\n  symbol: '*'|'-'|'+'\n  /**\n   * Whether this list is loose (in that case, HTML output should wrap the list\n   * item's contents in paragraphs)\n   */\n  loose: boolean\n  /**\n   * A set of list items\n   */\n  items: ListItem[]\n}\n\n/**\n * Represents a fenced code. NOTE that CodeBlocks are also treated as FencedCode.\n */\nexport interface FencedCode extends MDNode {\n  type: 'FencedCode'\n  /**\n   * The info string (can be an empty string, e.g., for indented code)\n   */\n  info: string\n  /**\n   * The verbatim source code. (Not represented as a TextNode since whitespace\n   * is significant and it shouldn't count towards word counts, etc.)\n   */\n  source: string\n}\n\n/**\n * Represents inline code.\n */\nexport interface InlineCode extends MDNode {\n  type: 'InlineCode'\n  /**\n   * The verbatim source code. (Not represented as a TextNode since whitespace\n   * is significant and it shouldn't count towards word counts, etc.)\n   */\n  source: string\n}\n\n/**\n * An emphasis node (italic or bold).\n */\nexport interface Emphasis extends MDNode {\n  type: 'Emphasis'\n  /**\n   * The type of emphasis -- italic or bold\n   */\n  which: 'italic'|'bold'\n  /**\n   * The children of this node\n   */\n  children: ASTNode[]\n}\n\n/**\n * This node represents a YAML frontmatter. It shares a lot with the FencedCode\n * type, i.e. the YAML code will not be parsed into an object.\n */\nexport interface YAMLFrontmatter extends MDNode {\n  type: 'YAMLFrontmatter'\n  /**\n   * The verbatim YAML source.\n   */\n  source: string\n}\n\n/**\n * Represents a single table cell\n */\nexport interface TableCell extends MDNode {\n  type: 'TableCell'\n  /**\n   * The text content of the cell TODO: Arbitrary children!\n   */\n  children: ASTNode[]\n}\n\n/**\n * Represents a table row.\n */\nexport interface TableRow extends MDNode {\n  type: 'TableRow'\n  /**\n   * This is set to true if the row is a header.\n   */\n  isHeaderOrFooter: boolean\n  /**\n   * A list of cells within this row\n   */\n  cells: TableCell[]\n}\n\n/**\n * Represents a table element.\n */\nexport interface Table extends MDNode {\n  type: 'Table'\n  /**\n   * A list of rows of this table\n   */\n  rows: TableRow[]\n  /**\n   * A list of column alignments in the table. May be undefined; the default is\n   * for all columns to be left-aligned.\n   */\n  alignment?: Array<'left'|'center'|'right'>\n  /**\n   * This property can optionally contain the table type in the source.\n   */\n  tableType?: 'grid'|'pipe'\n}\n\n/**\n * Represents a ZettelkastenLink (`[[Some file.md]]`)\n */\nexport interface ZettelkastenLink extends MDNode {\n  type: 'ZettelkastenLink'\n  /**\n   * Contains the raw contents of the link\n   */\n  value: string\n  /**\n   * The link title; may be the same as value\n   */\n  title: TextNode\n}\n\n/**\n * Represents a tag (`#some-tag`)\n */\nexport interface ZettelkastenTag extends MDNode {\n  type: 'ZettelkastenTag'\n  /**\n   * Contains the raw contents of the tag\n   */\n  value: string\n}\n\nexport interface Comment extends MDNode {\n  type: 'Comment'\n  /**\n   * Contains the raw contents of the comment\n   */\n  value: string\n}\n\n/**\n * A generic text node that can represent a string of content. Most nodes\n * contain at least one TextNode as its content (e.g. emphasis).\n */\nexport interface TextNode extends MDNode {\n  type: 'Text'\n  /**\n   * The string value of the text node.\n   */\n  value: string\n}\n\n/**\n * This generic node represents any Lezer node that has no specific role (or can\n * be handled without additional care). This ensures that new nodes will always\n * end up in the resulting AST, even if we forgot to add the node specifically.\n */\nexport interface GenericNode extends MDNode {\n  type: 'Generic'\n  /**\n   * Each generic node may have children\n   */\n  children: ASTNode[]\n}\n\n/**\n * Any node that can be part of the AST is an ASTNode.\n */\nexport type ASTNode = Comment | Footnote | FootnoteRef | LinkOrImage | TextNode\n| Heading | Citation | Highlight | Superscript | Subscript | OrderedList\n| BulletList | ListItem | GenericNode | FencedCode | InlineCode | YAMLFrontmatter\n| Emphasis | Table | TableCell | TableRow | ZettelkastenLink | ZettelkastenTag\n/**\n * Extract the \"type\" properties from the ASTNodes that can differentiate these.\n */\nexport type ASTNodeType = ASTNode['type']\n\n/**\n * Parses a single Lezer style SyntaxNode to an ASTNode.\n *\n * @param   {SyntaxNode}  node      The node to convert\n * @param   {string}      markdown  The Markdown source, required to extract the\n *                                  actual text content of the SyntaxNodes,\n *                                  which isn't stored in the nodes themselves.\n *\n * @return  {ASTNode}               The root node of a Markdown AST\n */\nexport function parseNode (node: SyntaxNode, markdown: string): ASTNode {\n  switch (node.name) {\n    // NOTE: Most nodes are treated as generics (see default case); here we only\n    // define nodes which we can \"compress\" a little bit or make accessible\n    case 'Image':\n    case 'Link': {\n      const alt = node.getChild('LinkLabel')\n      const url = node.getChild('URL')\n      if (url === null) {\n        return {\n          type: 'Generic',\n          name: node.name,\n          from: node.from,\n          to: node.to,\n          whitespaceBefore: getWhitespaceBeforeNode(node, markdown),\n          children: [genericTextNode(node.from, node.to, markdown.substring(node.from, node.to))]\n        }\n      }\n\n      const astNode: LinkOrImage = {\n        type: node.name,\n        name: node.name,\n        from: node.from,\n        to: node.to,\n        whitespaceBefore: getWhitespaceBeforeNode(node, markdown),\n        // title: genericTextNode(node.from, node.to, markdown.substring(node.from, node.to)), TODO\n        url: markdown.substring(url.from, url.to),\n        alt: alt !== null\n          ? genericTextNode(alt.from, alt.to, markdown.substring(alt.from, alt.to))\n          : genericTextNode(url.from, url.to, markdown.substring(url.from, url.to))\n      }\n\n      const marks = node.getChildren('LinkMark')\n\n      if (alt === null && marks.length >= 2) {\n        // The default Markdown parser doesn't apply \"LinkLabel\" unfortunately.\n        // So instead we have to get whatever is in between the first and second\n        // linkMark.\n        astNode.alt = genericTextNode(marks[0].to, marks[1].from, markdown.substring(marks[0].to, marks[1].from))\n      } // Else: Somewhat malformed link.\n\n      return astNode\n    }\n    case 'URL': {\n      const astNode: LinkOrImage = {\n        type: 'Link',\n        name: node.name,\n        from: node.from,\n        to: node.to,\n        whitespaceBefore: getWhitespaceBeforeNode(node, markdown),\n        // title: genericTextNode(node.from, node.to, markdown.substring(node.from, node.to)), TODO\n        url: markdown.substring(node.from, node.to),\n        alt: genericTextNode(node.from, node.to, markdown.substring(node.from, node.to))\n      }\n      return astNode\n    }\n    case 'ATXHeading1':\n    case 'ATXHeading2':\n    case 'ATXHeading3':\n    case 'ATXHeading4':\n    case 'ATXHeading5':\n    case 'ATXHeading6': {\n      const mark = node.getChild('HeaderMark')\n      const level = mark !== null ? mark.to - mark.from : 0\n      const astNode: Heading = {\n        type: 'Heading',\n        name: node.name,\n        from: node.from,\n        to: node.to,\n        whitespaceBefore: getWhitespaceBeforeNode(node, markdown),\n        value: genericTextNode(mark?.to ?? node.from, node.to, markdown.substring(mark?.to ?? node.from, node.to).trim()),\n        level\n      }\n      return astNode\n    }\n    case 'SetextHeading1':\n    case 'SetextHeading2': {\n      const mark = node.getChild('HeaderMark')\n      const level = mark !== null && markdown.substring(mark.from, mark.to).includes('-') ? 2 : 1\n      const astNode: Heading = {\n        type: 'Heading',\n        name: node.name,\n        from: node.from,\n        to: node.to,\n        whitespaceBefore: getWhitespaceBeforeNode(node, markdown),\n        value: genericTextNode(mark?.to ?? node.from, node.to, markdown.substring(node.from, mark?.from ?? node.to).trim()),\n        level\n      }\n      return astNode\n    }\n    case 'Citation': {\n      const astNode: Citation = {\n        name: 'Citation',\n        type: 'Citation',\n        value: markdown.substring(node.from, node.to),\n        parsedCitation: extractCitations(markdown.substring(node.from, node.to))[0],\n        from: node.from,\n        to: node.to,\n        whitespaceBefore: getWhitespaceBeforeNode(node, markdown)\n      }\n      return astNode\n    }\n    case 'Footnote': {\n      const contents = markdown.substring(node.from + 2, node.to - 1) // [^1] --> 1\n      const astNode: Footnote = {\n        type: 'Footnote',\n        name: 'Footnote',\n        from: node.from,\n        inline: contents.endsWith('^'),\n        to: node.to,\n        whitespaceBefore: getWhitespaceBeforeNode(node, markdown),\n        label: contents.endsWith('^') ? contents.substring(0, contents.length - 1) : contents\n      }\n      return astNode\n    }\n    case 'FootnoteRef': {\n      const label = node.getChild('FootnoteRefLabel')\n      const body = node.getChild('FootnoteRefBody')\n      const astNode: FootnoteRef = {\n        type: 'FootnoteRef',\n        name: 'FootnoteRef',\n        from: node.from,\n        to: node.to,\n        whitespaceBefore: getWhitespaceBeforeNode(node, markdown),\n        label: label !== null ? markdown.substring(label.from + 2, label.to - 2) : '',\n        children: []\n      }\n\n      if (body !== null) {\n        return parseChildren(astNode, body, markdown)\n      } else {\n        return astNode\n      }\n    }\n    case 'HighlightContent': {\n      const astNode: Highlight = {\n        type: 'Highlight',\n        name: 'Highlight',\n        from: node.from,\n        to: node.to,\n        whitespaceBefore: getWhitespaceBeforeNode(node, markdown),\n        children: []\n      }\n      return parseChildren(astNode, node, markdown)\n    }\n    case 'OrderedList': {\n      const astNode: OrderedList = {\n        type: 'OrderedList',\n        startsAt: 0,\n        delimiter: '.',\n        loose: false, // TODO\n        name: node.name,\n        from: node.from,\n        to: node.to,\n        whitespaceBefore: getWhitespaceBeforeNode(node, markdown),\n        items: []\n      }\n\n      for (const item of node.getChildren('ListItem')) {\n        const listItem: ListItem = {\n          type: 'ListItem',\n          name: 'ListItem',\n          from: item.from,\n          to: item.to,\n          whitespaceBefore: getWhitespaceBeforeNode(node, markdown),\n          children: [],\n          marker: { from: item.from, to: item.from }\n        }\n\n        const listMark = item.getChild('ListMark')\n        if (listMark !== null) {\n          listItem.marker.from = listMark.from\n          listItem.marker.to = listMark.to\n\n          const number = parseInt(markdown.substring(listMark.from, listMark.to - 1), 10)\n          const delim = markdown.substring(listMark.to - 1, listMark.to)\n          listItem.number = number\n          if (astNode.startsAt < 1) {\n            astNode.startsAt = number\n            if (delim === ')' || delim === '.') {\n              astNode.delimiter = delim\n            }\n          }\n        }\n\n        // Identify potential task item\n        const task = item.getChild('Task')\n        const taskMarker = task !== null ? task.getChild('TaskMarker') : null\n        if (taskMarker !== null) {\n          const text = markdown.substring(taskMarker.from, taskMarker.to)\n          listItem.checked = text === '[x]'\n        }\n\n        astNode.items.push(parseChildren(listItem, item, markdown))\n      }\n\n      return astNode\n    }\n    case 'BulletList': {\n      const astNode: BulletList = {\n        type: 'BulletList',\n        symbol: '-',\n        loose: false, // TODO\n        name: node.name,\n        from: node.from,\n        to: node.to,\n        whitespaceBefore: getWhitespaceBeforeNode(node, markdown),\n        items: []\n      }\n\n      for (const item of node.getChildren('ListItem')) {\n        const listItem: ListItem = {\n          type: 'ListItem',\n          name: 'ListItem',\n          from: item.from,\n          to: item.to,\n          whitespaceBefore: getWhitespaceBeforeNode(node, markdown),\n          children: [],\n          marker: { from: item.from, to: item.from }\n        }\n\n        const listMark = item.getChild('ListMark')\n        if (listMark !== null) {\n          listItem.marker.from = listMark.from\n          listItem.marker.to = listMark.to\n\n          const symbol = markdown.substring(listMark.from, listMark.to)\n          if (symbol === '-' || symbol === '+' || symbol === '*') {\n            astNode.symbol = symbol\n          }\n        }\n\n        // Identify potential task item\n        const task = item.getChild('Task')\n        const taskMarker = task !== null ? task.getChild('TaskMarker') : null\n        if (taskMarker !== null) {\n          const text = markdown.substring(taskMarker.from, taskMarker.to)\n          listItem.checked = text === '[x]'\n        }\n\n        astNode.items.push(parseChildren(listItem, item, markdown))\n      }\n\n      return astNode\n    }\n    case 'FencedCode':\n    case 'CodeBlock': {\n      let info = node.getChild('CodeInfo')\n      const mark = node.getChild('CodeMark')\n      if (mark !== null) {\n        const codeMark = markdown.substring(mark.from, mark.to)\n        if (codeMark === '$$') {\n          // Exchange the (nonexistent) infostring with the double-dollars so\n          // that consumers can detect that this is MathTex\n          info = mark\n        }\n      }\n      const source = node.getChild('CodeText')\n      const astNode: FencedCode = {\n        type: 'FencedCode',\n        name: 'FencedCode',\n        from: node.from,\n        to: node.to,\n        whitespaceBefore: getWhitespaceBeforeNode(node, markdown),\n        info: info !== null ? markdown.substring(info.from, info.to) : '',\n        source: source !== null ? markdown.substring(source.from, source.to) : ''\n      }\n      return astNode\n    }\n    case 'YAMLFrontmatter': {\n      const source = node.getChild('CodeText')\n      const astNode: YAMLFrontmatter = {\n        type: 'YAMLFrontmatter',\n        name: 'YAMLFrontmatter',\n        from: node.from,\n        to: node.to,\n        whitespaceBefore: getWhitespaceBeforeNode(node, markdown),\n        source: source !== null ? markdown.substring(source.from, source.to) : ''\n      }\n      return astNode\n    }\n    case 'InlineCode': {\n      const [ start, end ] = node.getChildren('CodeMark')\n      const astNode: InlineCode = {\n        type: 'InlineCode',\n        name: 'InlineCode',\n        from: node.from,\n        to: node.to,\n        whitespaceBefore: getWhitespaceBeforeNode(node, markdown),\n        source: markdown.substring(start.to, end.from)\n      }\n      return astNode\n    }\n    case 'Comment':\n    case 'CommentBlock': {\n      const astNode: Comment = {\n        type: 'Comment',\n        name: node.name,\n        from: node.from,\n        to: node.to,\n        whitespaceBefore: getWhitespaceBeforeNode(node, markdown),\n        value: markdown.slice(node.from + 4, node.to - 3).trim() // <!-- and -->\n      }\n      return astNode\n    }\n    case 'Emphasis':\n    case 'StrongEmphasis': {\n      const astNode: Emphasis = {\n        type: 'Emphasis',\n        name: 'Emphasis',\n        which: node.name === 'Emphasis' ? 'italic' : 'bold',\n        from: node.from,\n        to: node.to,\n        whitespaceBefore: getWhitespaceBeforeNode(node, markdown),\n        children: []\n      }\n\n      return parseChildren(astNode, node, markdown)\n    }\n    case 'Superscript': {\n      const astNode: Superscript = {\n        type: 'Superscript',\n        name: 'Superscript',\n        from: node.from,\n        to: node.to,\n        whitespaceBefore: getWhitespaceBeforeNode(node, markdown),\n        children: []\n      }\n\n      return parseChildren(astNode, node, markdown)\n    }\n    case 'Subscript': {\n      const astNode: Subscript = {\n        type: 'Subscript',\n        name: 'Subscript',\n        from: node.from,\n        to: node.to,\n        whitespaceBefore: getWhitespaceBeforeNode(node, markdown),\n        children: []\n      }\n\n      return parseChildren(astNode, node, markdown)\n    }\n    case 'Table':\n      // Tables are somewhat cumbersome to convert, so we outsource it to its own function\n      return parseTableNode(node, markdown)\n    case 'ZknLink': {\n      const content = node.getChild('ZknLinkContent')\n      if (content === null) {\n        throw new Error('Could not parse node ZknLink: No ZknLinkContent node found within children!')\n      }\n      const title = node.getChild('ZknLinkTitle') ?? content\n      const astNode: ZettelkastenLink = {\n        type: 'ZettelkastenLink',\n        name: 'ZknLink',\n        from: node.from,\n        to: node.to,\n        whitespaceBefore: getWhitespaceBeforeNode(node, markdown),\n        value: markdown.substring(content.from, content.to),\n        title: genericTextNode(title.from, title.to, markdown.substring(title.from, title.to))\n      }\n      return astNode\n    }\n    case 'ZknTag': {\n      const astNode: ZettelkastenTag = {\n        type: 'ZettelkastenTag',\n        name: 'ZknTag',\n        from: node.from,\n        to: node.to,\n        whitespaceBefore: getWhitespaceBeforeNode(node, markdown),\n        value: markdown.substring(node.from + 1, node.to)\n      }\n      return astNode\n    }\n    default: {\n      const astNode: GenericNode = {\n        type: 'Generic',\n        name: node.name,\n        from: node.from,\n        to: node.to,\n        whitespaceBefore: getWhitespaceBeforeNode(node, markdown),\n        children: []\n      }\n      return parseChildren(astNode, node, markdown)\n    }\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"0ef95601476c6124f39466ac1f21784a4b4496b3","contentHash":"3738187265927ecff83b30ac6a083b558dbaf4938728808c553d1214166c9ec3"},"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/modules/markdown-utils/markdown-ast/parse-table-node.ts":{"path":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/modules/markdown-utils/markdown-ast/parse-table-node.ts","statementMap":{"0":{"start":{"line":18,"column":0},"end":{"line":18,"column":62}},"1":{"start":{"line":19,"column":0},"end":{"line":19,"column":40}},"2":{"start":{"line":20,"column":37},"end":{"line":20,"column":76}},"3":{"start":{"line":21,"column":25},"end":{"line":21,"column":52}},"4":{"start":{"line":22,"column":28},"end":{"line":22,"column":58}},"5":{"start":{"line":32,"column":20},"end":{"line":39,"column":5}},"6":{"start":{"line":40,"column":19},"end":{"line":40,"column":50}},"7":{"start":{"line":41,"column":17},"end":{"line":41,"column":45}},"8":{"start":{"line":46,"column":4},"end":{"line":80,"column":5}},"9":{"start":{"line":47,"column":8},"end":{"line":49,"column":9}},"10":{"start":{"line":48,"column":12},"end":{"line":48,"column":21}},"11":{"start":{"line":51,"column":8},"end":{"line":56,"column":9}},"12":{"start":{"line":52,"column":12},"end":{"line":52,"column":39}},"13":{"start":{"line":55,"column":12},"end":{"line":55,"column":39}},"14":{"start":{"line":58,"column":25},"end":{"line":58,"column":55}},"15":{"start":{"line":59,"column":8},"end":{"line":78,"column":11}},"16":{"start":{"line":61,"column":25},"end":{"line":61,"column":37}},"17":{"start":{"line":63,"column":12},"end":{"line":65,"column":13}},"18":{"start":{"line":64,"column":16},"end":{"line":64,"column":35}},"19":{"start":{"line":66,"column":12},"end":{"line":68,"column":13}},"20":{"start":{"line":67,"column":16},"end":{"line":67,"column":49}},"21":{"start":{"line":69,"column":12},"end":{"line":77,"column":13}},"22":{"start":{"line":70,"column":16},"end":{"line":70,"column":32}},"23":{"start":{"line":72,"column":17},"end":{"line":77,"column":13}},"24":{"start":{"line":73,"column":16},"end":{"line":73,"column":31}},"25":{"start":{"line":76,"column":16},"end":{"line":76,"column":30}},"26":{"start":{"line":79,"column":8},"end":{"line":79,"column":14}},"27":{"start":{"line":82,"column":4},"end":{"line":154,"column":5}},"28":{"start":{"line":83,"column":24},"end":{"line":91,"column":9}},"29":{"start":{"line":98,"column":19},"end":{"line":98,"column":33}},"30":{"start":{"line":99,"column":23},"end":{"line":99,"column":28}},"31":{"start":{"line":100,"column":8},"end":{"line":140,"column":9}},"32":{"start":{"line":101,"column":12},"end":{"line":138,"column":13}},"33":{"start":{"line":102,"column":16},"end":{"line":102,"column":32}},"34":{"start":{"line":104,"column":17},"end":{"line":138,"column":13}},"35":{"start":{"line":106,"column":29},"end":{"line":106,"column":45}},"36":{"start":{"line":107,"column":33},"end":{"line":117,"column":17}},"37":{"start":{"line":118,"column":16},"end":{"line":118,"column":45}},"38":{"start":{"line":119,"column":16},"end":{"line":119,"column":33}},"39":{"start":{"line":121,"column":17},"end":{"line":138,"column":13}},"40":{"start":{"line":123,"column":33},"end":{"line":130,"column":17}},"41":{"start":{"line":131,"column":16},"end":{"line":131,"column":78}},"42":{"start":{"line":132,"column":16},"end":{"line":132,"column":45}},"43":{"start":{"line":133,"column":16},"end":{"line":133,"column":33}},"44":{"start":{"line":136,"column":16},"end":{"line":136,"column":105}},"45":{"start":{"line":137,"column":16},"end":{"line":137,"column":33}},"46":{"start":{"line":139,"column":12},"end":{"line":139,"column":36}},"47":{"start":{"line":145,"column":8},"end":{"line":152,"column":9}},"48":{"start":{"line":146,"column":12},"end":{"line":151,"column":13}},"49":{"start":{"line":148,"column":16},"end":{"line":148,"column":85}},"50":{"start":{"line":149,"column":16},"end":{"line":149,"column":47}},"51":{"start":{"line":150,"column":16},"end":{"line":150,"column":35}},"52":{"start":{"line":153,"column":8},"end":{"line":153,"column":35}},"53":{"start":{"line":155,"column":4},"end":{"line":155,"column":19}}},"fnMap":{"0":{"name":"parseTableNode","decl":{"start":{"line":31,"column":9},"end":{"line":31,"column":23}},"loc":{"start":{"line":31,"column":40},"end":{"line":156,"column":1}},"line":31},"1":{"name":"(anonymous_1)","decl":{"start":{"line":61,"column":20},"end":{"line":61,"column":21}},"loc":{"start":{"line":61,"column":25},"end":{"line":61,"column":37}},"line":61},"2":{"name":"(anonymous_2)","decl":{"start":{"line":62,"column":17},"end":{"line":62,"column":18}},"loc":{"start":{"line":62,"column":22},"end":{"line":78,"column":9}},"line":62}},"branchMap":{"0":{"loc":{"start":{"line":47,"column":8},"end":{"line":49,"column":9}},"type":"if","locations":[{"start":{"line":47,"column":8},"end":{"line":49,"column":9}},{"start":{},"end":{}}],"line":47},"1":{"loc":{"start":{"line":51,"column":8},"end":{"line":56,"column":9}},"type":"if","locations":[{"start":{"line":51,"column":8},"end":{"line":56,"column":9}},{"start":{"line":54,"column":13},"end":{"line":56,"column":9}}],"line":51},"2":{"loc":{"start":{"line":58,"column":25},"end":{"line":58,"column":55}},"type":"cond-expr","locations":[{"start":{"line":58,"column":46},"end":{"line":58,"column":49}},{"start":{"line":58,"column":52},"end":{"line":58,"column":55}}],"line":58},"3":{"loc":{"start":{"line":63,"column":12},"end":{"line":65,"column":13}},"type":"if","locations":[{"start":{"line":63,"column":12},"end":{"line":65,"column":13}},{"start":{},"end":{}}],"line":63},"4":{"loc":{"start":{"line":66,"column":12},"end":{"line":68,"column":13}},"type":"if","locations":[{"start":{"line":66,"column":12},"end":{"line":68,"column":13}},{"start":{},"end":{}}],"line":66},"5":{"loc":{"start":{"line":69,"column":12},"end":{"line":77,"column":13}},"type":"if","locations":[{"start":{"line":69,"column":12},"end":{"line":77,"column":13}},{"start":{"line":72,"column":17},"end":{"line":77,"column":13}}],"line":69},"6":{"loc":{"start":{"line":69,"column":16},"end":{"line":69,"column":52}},"type":"binary-expr","locations":[{"start":{"line":69,"column":16},"end":{"line":69,"column":33}},{"start":{"line":69,"column":37},"end":{"line":69,"column":52}}],"line":69},"7":{"loc":{"start":{"line":72,"column":17},"end":{"line":77,"column":13}},"type":"if","locations":[{"start":{"line":72,"column":17},"end":{"line":77,"column":13}},{"start":{"line":75,"column":17},"end":{"line":77,"column":13}}],"line":72},"8":{"loc":{"start":{"line":101,"column":12},"end":{"line":138,"column":13}},"type":"if","locations":[{"start":{"line":101,"column":12},"end":{"line":138,"column":13}},{"start":{"line":104,"column":17},"end":{"line":138,"column":13}}],"line":101},"9":{"loc":{"start":{"line":101,"column":16},"end":{"line":101,"column":59}},"type":"binary-expr","locations":[{"start":{"line":101,"column":16},"end":{"line":101,"column":46}},{"start":{"line":101,"column":50},"end":{"line":101,"column":59}}],"line":101},"10":{"loc":{"start":{"line":104,"column":17},"end":{"line":138,"column":13}},"type":"if","locations":[{"start":{"line":104,"column":17},"end":{"line":138,"column":13}},{"start":{"line":121,"column":17},"end":{"line":138,"column":13}}],"line":104},"11":{"loc":{"start":{"line":104,"column":21},"end":{"line":104,"column":63}},"type":"binary-expr","locations":[{"start":{"line":104,"column":21},"end":{"line":104,"column":51}},{"start":{"line":104,"column":55},"end":{"line":104,"column":63}}],"line":104},"12":{"loc":{"start":{"line":121,"column":17},"end":{"line":138,"column":13}},"type":"if","locations":[{"start":{"line":121,"column":17},"end":{"line":138,"column":13}},{"start":{"line":135,"column":17},"end":{"line":138,"column":13}}],"line":121},"13":{"loc":{"start":{"line":146,"column":12},"end":{"line":151,"column":13}},"type":"if","locations":[{"start":{"line":146,"column":12},"end":{"line":151,"column":13}},{"start":{},"end":{}}],"line":146},"14":{"loc":{"start":{"line":146,"column":16},"end":{"line":147,"column":98}},"type":"binary-expr","locations":[{"start":{"line":146,"column":16},"end":{"line":146,"column":44}},{"start":{"line":146,"column":48},"end":{"line":146,"column":76}},{"start":{"line":147,"column":16},"end":{"line":147,"column":52}},{"start":{"line":147,"column":56},"end":{"line":147,"column":98}}],"line":146}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0},"f":{"0":0,"1":0,"2":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0,0,0]},"inputSourceMap":{"version":3,"file":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/modules/markdown-utils/markdown-ast/parse-table-node.ts","sources":["/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/modules/markdown-utils/markdown-ast/parse-table-node.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @ignore\n * BEGIN HEADER\n *\n * Contains:        parseTableNode\n * CVM-Role:        Utility\n * Maintainer:      Hendrik Erz\n * License:         GNU GPL v3\n *\n * Description:     Since table node parsing is very complex as the\n *                  corresponding lezer parser is intentionally \"dumb\" (likely\n *                  to increase parser speed), parsing tables requires a lot of\n *                  code which is why this function has been externalized.\n *\n * END HEADER\n */\n\nimport { type SyntaxNode } from '@lezer/common'\nimport type { Table, TableRow, TableCell } from '../markdown-ast'\nimport { getWhitespaceBeforeNode } from './get-whitespace-before-node'\nimport { parseChildren } from './parse-children'\nimport { genericTextNode } from './generic-text-node'\n\n/**\n * Parses a SyntaxNode of name \"Table\"\n *\n * @param   {SyntaxNode}  node      The node to parse\n * @param   {string}      markdown  The original Markdown source\n *\n * @return  {Table}                 The parsed Table AST node\n */\nexport function parseTableNode (node: SyntaxNode, markdown: string): Table {\n  const astNode: Table = {\n    type: 'Table',\n    name: 'Table',\n    from: node.from,\n    to: node.to,\n    whitespaceBefore: getWhitespaceBeforeNode(node, markdown),\n    rows: []\n  }\n\n  const header = node.getChildren('TableHeader')\n  const rows = node.getChildren('TableRow')\n\n  // The parser cannot reliably extract the table delimiters, but we need\n  // those for the column alignment. Thus, we need to see if we can find the\n  // header row (pipe tables) or a delimiter row (grid tables) in order to\n  // determine the column alignments.\n  for (const line of markdown.substring(node.from, node.to).split('\\n')) {\n    if (!/^[|+:-]+$/.test(line)) {\n      continue\n    }\n\n    // Gotcha.\n    if (line.includes('|')) {\n      astNode.tableType = 'pipe'\n    } else {\n      astNode.tableType = 'grid'\n    }\n\n    // The plus indicates a special Pandoc-type of pipe table\n    const splitter = line.includes('+') ? '+' : '|'\n    astNode.alignment = line.split(splitter)\n      // NOTE: |-|-| will result in ['', '-', '-', ''] -> filter out\n      .filter(c => c.length > 0)\n      .map(c => {\n        if (c.startsWith('|')) {\n          c = c.substring(1)\n        }\n        if (c.endsWith('|')) {\n          c = c.substring(0, c.length - 1)\n        }\n        if (c.startsWith(':') && c.endsWith(':')) {\n          return 'center'\n        } else if (c.endsWith(':')) {\n          return 'right'\n        } else {\n          return 'left'\n        }\n      })\n    break\n  } // Else: Couldn't determine either column alignment nor table type\n\n  // Now, transform the rows.\n  for (const row of [ ...header, ...rows ]) {\n    const rowNode: TableRow = {\n      type: 'TableRow',\n      name: row.name,\n      from: row.from,\n      to: row.to,\n      whitespaceBefore: '',\n      isHeaderOrFooter: row.name === 'TableHeader',\n      cells: []\n    }\n\n    // NOTE: The Lezer parser intentionally does not emit TableCell nodes for\n    // empty cells, so we cannot fully rely on the existence of table cells. See:\n    // https://github.com/lezer-parser/markdown/issues/23\n    // Thus, we have to manually move through the line one by one. If a\n    // TableDelimiter is followed by another TableDelimiter, we know that there\n    // is an empty cell in between.\n    let next = row.firstChild\n    let wasDelim = false\n    while (next !== null) {\n      if (next.name === 'TableDelimiter' && !wasDelim) {\n        wasDelim = true\n      } else if (next.name === 'TableDelimiter' && wasDelim) {\n        // Last iteration was a TableDelimiter, and now again --> Empty cell\n        const prev = next.prevSibling!\n        const cellNode: TableCell = {\n          type: 'TableCell',\n          name: 'TableCell',\n          from: prev.to,\n          to: next.from,\n          whitespaceBefore: '',\n          // Has no real children; here we basically just account for any whitespace\n          children: [\n            genericTextNode(prev.to, next.from, markdown.slice(prev.to, next.from))\n          ]\n        }\n        rowNode.cells.push(cellNode)\n        wasDelim = false\n      } else if (next.name === 'TableCell') {\n        // Functional table cell\n        const cellNode: TableCell = {\n          type: 'TableCell',\n          name: 'TableCell',\n          from: next.from,\n          to: next.to,\n          whitespaceBefore: '',\n          children: []\n        }\n        parseChildren(cellNode, next, markdown)\n        rowNode.cells.push(cellNode)\n        wasDelim = false\n      } else {\n        console.warn(`Could not fully parse Table node: Unexpected node \"${next.name}\" in row.`)\n        wasDelim = false\n      }\n      next = next.nextSibling\n    }\n\n    // Special case handling: The Lezer parser unfortunately is a bit sloppy\n    // when it comes to grid table parsing and often includes the delimiting\n    // pipes between cells as part of the TableCell nodes. Here we account for\n    // that and remove that pipe if applicable.\n    for (const cellNode of rowNode.cells) {\n      if (\n        astNode.tableType === 'grid' && cellNode.children.length > 0 &&\n        cellNode.children[0].type === 'Text' && cellNode.children[0].value.startsWith('|')\n      ) {\n        cellNode.children[0].value = cellNode.children[0].value.substring(1)\n        cellNode.children[0].from += 1\n        cellNode.from += 1\n      }\n    }\n    astNode.rows.push(rowNode)\n  }\n  return astNode\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"94d719f1e1fc0b14fca0590ae9b2113e63d7b287","contentHash":"507c84c3d1cd82123e993383f02a57f9798167c1ad496fa6f5d124657d6603f9"},"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/modules/markdown-utils/markdown-ast/get-whitespace-before-node.ts":{"path":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/modules/markdown-utils/markdown-ast/get-whitespace-before-node.ts","statementMap":{"0":{"start":{"line":17,"column":0},"end":{"line":17,"column":62}},"1":{"start":{"line":18,"column":0},"end":{"line":18,"column":58}},"2":{"start":{"line":29,"column":4},"end":{"line":41,"column":5}},"3":{"start":{"line":30,"column":28},"end":{"line":30,"column":78}},"4":{"start":{"line":31,"column":31},"end":{"line":31,"column":58}},"5":{"start":{"line":32,"column":8},"end":{"line":32,"column":64}},"6":{"start":{"line":34,"column":9},"end":{"line":41,"column":5}},"7":{"start":{"line":35,"column":28},"end":{"line":35,"column":75}},"8":{"start":{"line":36,"column":31},"end":{"line":36,"column":58}},"9":{"start":{"line":37,"column":8},"end":{"line":37,"column":64}},"10":{"start":{"line":40,"column":8},"end":{"line":40,"column":18}}},"fnMap":{"0":{"name":"getWhitespaceBeforeNode","decl":{"start":{"line":28,"column":9},"end":{"line":28,"column":32}},"loc":{"start":{"line":28,"column":49},"end":{"line":42,"column":1}},"line":28}},"branchMap":{"0":{"loc":{"start":{"line":29,"column":4},"end":{"line":41,"column":5}},"type":"if","locations":[{"start":{"line":29,"column":4},"end":{"line":41,"column":5}},{"start":{"line":34,"column":9},"end":{"line":41,"column":5}}],"line":29},"1":{"loc":{"start":{"line":32,"column":15},"end":{"line":32,"column":63}},"type":"cond-expr","locations":[{"start":{"line":32,"column":41},"end":{"line":32,"column":58}},{"start":{"line":32,"column":61},"end":{"line":32,"column":63}}],"line":32},"2":{"loc":{"start":{"line":34,"column":9},"end":{"line":41,"column":5}},"type":"if","locations":[{"start":{"line":34,"column":9},"end":{"line":41,"column":5}},{"start":{"line":39,"column":9},"end":{"line":41,"column":5}}],"line":34},"3":{"loc":{"start":{"line":37,"column":15},"end":{"line":37,"column":63}},"type":"cond-expr","locations":[{"start":{"line":37,"column":41},"end":{"line":37,"column":58}},{"start":{"line":37,"column":61},"end":{"line":37,"column":63}}],"line":37}},"s":{"0":1,"1":1,"2":154,"3":74,"4":74,"5":74,"6":80,"7":60,"8":60,"9":60,"10":20},"f":{"0":154},"b":{"0":[74,80],"1":[74,0],"2":[60,20],"3":[60,0]},"inputSourceMap":{"version":3,"file":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/modules/markdown-utils/markdown-ast/get-whitespace-before-node.ts","sources":["/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/modules/markdown-utils/markdown-ast/get-whitespace-before-node.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;AAaH,0DAYC;AArBD;;;;;;;;GAQG;AACH,SAAgB,uBAAuB,CAAE,IAAgB,EAAE,QAAgB;IACzE,IAAI,IAAI,CAAC,WAAW,KAAK,IAAI,EAAE,CAAC;QAC9B,MAAM,WAAW,GAAG,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,CAAA;QACtE,MAAM,cAAc,GAAG,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAA,CAAC,oBAAoB;QACvE,OAAO,cAAc,KAAK,IAAI,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAA;IACzD,CAAC;SAAM,IAAI,IAAI,CAAC,MAAM,KAAK,IAAI,EAAE,CAAC;QAChC,MAAM,WAAW,GAAG,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,CAAA;QACnE,MAAM,cAAc,GAAG,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAA,CAAC,oBAAoB;QACvE,OAAO,cAAc,KAAK,IAAI,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAA;IACzD,CAAC;SAAM,CAAC;QACN,OAAO,EAAE,CAAA;IACX,CAAC;AACH,CAAC","sourcesContent":["/**\n * @ignore\n * BEGIN HEADER\n *\n * Contains:        getWhitespaceBeforeNode\n * CVM-Role:        Utility\n * Maintainer:      Hendrik Erz\n * License:         GNU GPL v3\n *\n * Description:     Takes a SyntaxNode and returns any whitespace that preceeds\n *                  the node. This is important since whitespace can be\n *                  significant; especially when building HTML.\n *\n * END HEADER\n */\n\nimport { type SyntaxNode } from '@lezer/common'\n\n/**\n * Extracts any amount of whitespace (\\t\\s\\n\\r\\f\\v, etc.) that occurs before\n * this node.\n *\n * @param   {SyntaxNode}  node      The node to extract whitespace for\n * @param   {string}      markdown  The Markdown source to extract the whitespace\n *\n * @return  {string}                The whitespace string\n */\nexport function getWhitespaceBeforeNode (node: SyntaxNode, markdown: string): string {\n  if (node.prevSibling !== null) {\n    const sliceBefore = markdown.substring(node.prevSibling.to, node.from)\n    const onlyWhitespace = /(\\s*)$/m.exec(sliceBefore) // NOTE the \"m\" flag\n    return onlyWhitespace !== null ? onlyWhitespace[1] : ''\n  } else if (node.parent !== null) {\n    const sliceBefore = markdown.substring(node.parent.from, node.from)\n    const onlyWhitespace = /(\\s*)$/m.exec(sliceBefore) // NOTE the \"m\" flag\n    return onlyWhitespace !== null ? onlyWhitespace[1] : ''\n  } else {\n    return ''\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"f168c185b1e2a4f5ac5865d760e575f39351f381","contentHash":"ed6574dabb9a6d740331f1409e3f72dab76fd89f615ef881360392548156815e"},"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/modules/markdown-utils/markdown-ast/parse-children.ts":{"path":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/modules/markdown-utils/markdown-ast/parse-children.ts","statementMap":{"0":{"start":{"line":16,"column":0},"end":{"line":16,"column":62}},"1":{"start":{"line":17,"column":0},"end":{"line":17,"column":38}},"2":{"start":{"line":18,"column":23},"end":{"line":18,"column":49}},"3":{"start":{"line":19,"column":37},"end":{"line":19,"column":76}},"4":{"start":{"line":20,"column":28},"end":{"line":20,"column":58}},"5":{"start":{"line":29,"column":20},"end":{"line":44,"column":1}},"6":{"start":{"line":56,"column":4},"end":{"line":58,"column":5}},"7":{"start":{"line":57,"column":8},"end":{"line":57,"column":29}},"8":{"start":{"line":59,"column":22},"end":{"line":59,"column":68}},"9":{"start":{"line":60,"column":26},"end":{"line":60,"column":48}},"10":{"start":{"line":62,"column":4},"end":{"line":84,"column":5}},"11":{"start":{"line":63,"column":8},"end":{"line":83,"column":9}},"12":{"start":{"line":65,"column":12},"end":{"line":70,"column":13}},"13":{"start":{"line":66,"column":16},"end":{"line":66,"column":89}},"14":{"start":{"line":69,"column":16},"end":{"line":69,"column":61}},"15":{"start":{"line":72,"column":13},"end":{"line":83,"column":9}},"16":{"start":{"line":74,"column":12},"end":{"line":74,"column":54}},"17":{"start":{"line":76,"column":13},"end":{"line":83,"column":9}},"18":{"start":{"line":79,"column":26},"end":{"line":79,"column":46}},"19":{"start":{"line":80,"column":12},"end":{"line":82,"column":13}},"20":{"start":{"line":81,"column":16},"end":{"line":81,"column":51}},"21":{"start":{"line":85,"column":4},"end":{"line":85,"column":25}},"22":{"start":{"line":97,"column":4},"end":{"line":103,"column":5}},"23":{"start":{"line":98,"column":8},"end":{"line":101,"column":9}},"24":{"start":{"line":99,"column":29},"end":{"line":99,"column":204}},"25":{"start":{"line":100,"column":12},"end":{"line":100,"column":42}},"26":{"start":{"line":102,"column":8},"end":{"line":102,"column":23}},"27":{"start":{"line":104,"column":4},"end":{"line":104,"column":26}},"28":{"start":{"line":105,"column":23},"end":{"line":105,"column":38}},"29":{"start":{"line":106,"column":23},"end":{"line":106,"column":32}},"30":{"start":{"line":107,"column":4},"end":{"line":131,"column":5}},"31":{"start":{"line":111,"column":8},"end":{"line":117,"column":9}},"32":{"start":{"line":112,"column":24},"end":{"line":112,"column":75}},"33":{"start":{"line":113,"column":35},"end":{"line":113,"column":54}},"34":{"start":{"line":114,"column":37},"end":{"line":114,"column":85}},"35":{"start":{"line":115,"column":29},"end":{"line":115,"column":160}},"36":{"start":{"line":116,"column":12},"end":{"line":116,"column":44}},"37":{"start":{"line":118,"column":8},"end":{"line":128,"column":9}},"38":{"start":{"line":124,"column":12},"end":{"line":124,"column":96}},"39":{"start":{"line":127,"column":12},"end":{"line":127,"column":89}},"40":{"start":{"line":129,"column":8},"end":{"line":129,"column":39}},"41":{"start":{"line":130,"column":8},"end":{"line":130,"column":48}},"42":{"start":{"line":132,"column":4},"end":{"line":136,"column":5}},"43":{"start":{"line":134,"column":25},"end":{"line":134,"column":131}},"44":{"start":{"line":135,"column":8},"end":{"line":135,"column":40}},"45":{"start":{"line":137,"column":4},"end":{"line":137,"column":19}}},"fnMap":{"0":{"name":"parseAttributeNode","decl":{"start":{"line":55,"column":9},"end":{"line":55,"column":27}},"loc":{"start":{"line":55,"column":64},"end":{"line":86,"column":1}},"line":55},"1":{"name":"parseChildren","decl":{"start":{"line":96,"column":9},"end":{"line":96,"column":22}},"loc":{"start":{"line":96,"column":48},"end":{"line":138,"column":1}},"line":96}},"branchMap":{"0":{"loc":{"start":{"line":55,"column":28},"end":{"line":55,"column":46}},"type":"default-arg","locations":[{"start":{"line":55,"column":44},"end":{"line":55,"column":46}}],"line":55},"1":{"loc":{"start":{"line":56,"column":4},"end":{"line":58,"column":5}},"type":"if","locations":[{"start":{"line":56,"column":4},"end":{"line":58,"column":5}},{"start":{},"end":{}}],"line":56},"2":{"loc":{"start":{"line":63,"column":8},"end":{"line":83,"column":9}},"type":"if","locations":[{"start":{"line":63,"column":8},"end":{"line":83,"column":9}},{"start":{"line":72,"column":13},"end":{"line":83,"column":9}}],"line":63},"3":{"loc":{"start":{"line":65,"column":12},"end":{"line":70,"column":13}},"type":"if","locations":[{"start":{"line":65,"column":12},"end":{"line":70,"column":13}},{"start":{"line":68,"column":17},"end":{"line":70,"column":13}}],"line":65},"4":{"loc":{"start":{"line":72,"column":13},"end":{"line":83,"column":9}},"type":"if","locations":[{"start":{"line":72,"column":13},"end":{"line":83,"column":9}},{"start":{"line":76,"column":13},"end":{"line":83,"column":9}}],"line":72},"5":{"loc":{"start":{"line":72,"column":17},"end":{"line":72,"column":70}},"type":"binary-expr","locations":[{"start":{"line":72,"column":17},"end":{"line":72,"column":42}},{"start":{"line":72,"column":46},"end":{"line":72,"column":70}}],"line":72},"6":{"loc":{"start":{"line":76,"column":13},"end":{"line":83,"column":9}},"type":"if","locations":[{"start":{"line":76,"column":13},"end":{"line":83,"column":9}},{"start":{},"end":{}}],"line":76},"7":{"loc":{"start":{"line":80,"column":12},"end":{"line":82,"column":13}},"type":"if","locations":[{"start":{"line":80,"column":12},"end":{"line":82,"column":13}},{"start":{},"end":{}}],"line":80},"8":{"loc":{"start":{"line":97,"column":4},"end":{"line":103,"column":5}},"type":"if","locations":[{"start":{"line":97,"column":4},"end":{"line":103,"column":5}},{"start":{},"end":{}}],"line":97},"9":{"loc":{"start":{"line":98,"column":8},"end":{"line":101,"column":9}},"type":"if","locations":[{"start":{"line":98,"column":8},"end":{"line":101,"column":9}},{"start":{},"end":{}}],"line":98},"10":{"loc":{"start":{"line":111,"column":8},"end":{"line":117,"column":9}},"type":"if","locations":[{"start":{"line":111,"column":8},"end":{"line":117,"column":9}},{"start":{},"end":{}}],"line":111},"11":{"loc":{"start":{"line":111,"column":12},"end":{"line":111,"column":80}},"type":"binary-expr","locations":[{"start":{"line":111,"column":12},"end":{"line":111,"column":44}},{"start":{"line":111,"column":48},"end":{"line":111,"column":80}}],"line":111},"12":{"loc":{"start":{"line":114,"column":37},"end":{"line":114,"column":85}},"type":"cond-expr","locations":[{"start":{"line":114,"column":63},"end":{"line":114,"column":80}},{"start":{"line":114,"column":83},"end":{"line":114,"column":85}}],"line":114},"13":{"loc":{"start":{"line":118,"column":8},"end":{"line":128,"column":9}},"type":"if","locations":[{"start":{"line":118,"column":8},"end":{"line":128,"column":9}},{"start":{"line":126,"column":13},"end":{"line":128,"column":9}}],"line":118},"14":{"loc":{"start":{"line":132,"column":4},"end":{"line":136,"column":5}},"type":"if","locations":[{"start":{"line":132,"column":4},"end":{"line":136,"column":5}},{"start":{},"end":{}}],"line":132},"15":{"loc":{"start":{"line":132,"column":8},"end":{"line":132,"column":66}},"type":"binary-expr","locations":[{"start":{"line":132,"column":8},"end":{"line":132,"column":30}},{"start":{"line":132,"column":34},"end":{"line":132,"column":66}}],"line":132}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":108,"23":60,"24":20,"25":20,"26":60,"27":48,"28":48,"29":48,"30":48,"31":102,"32":28,"33":28,"34":28,"35":28,"36":28,"37":102,"38":0,"39":102,"40":102,"41":102,"42":48,"43":8,"44":8,"45":48},"f":{"0":0,"1":108},"b":{"0":[0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[60,48],"9":[20,40],"10":[28,74],"11":[102,58],"12":[28,0],"13":[0,102],"14":[8,40],"15":[48,8]},"inputSourceMap":{"version":3,"file":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/modules/markdown-utils/markdown-ast/parse-children.ts","sources":["/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/modules/markdown-utils/markdown-ast/parse-children.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @ignore\n * BEGIN HEADER\n *\n * Contains:        parseChildren AST module\n * CVM-Role:        Utility\n * Maintainer:      Hendrik Erz\n * License:         GNU GPL v3\n *\n * Description:     Utility function for the AST parser that parses the children\n *                  of a semi-parsed AST node.\n *\n * END HEADER\n */\n\nimport type { SyntaxNode } from '@lezer/common'\nimport { type ASTNode, parseNode, type MDNode } from '../markdown-ast'\nimport { getWhitespaceBeforeNode } from './get-whitespace-before-node'\nimport { genericTextNode } from './generic-text-node'\n\n/**\n * This list contains all Node names that do not themselves have any content.\n * These are either purely formatting nodes (such as heading marks or link\n * marks) who can be reconstructed without the verbatim value, as well as larger\n * container nodes (whose contents is represented via their children).\n *\n * @var {string[]}\n */\nconst EMPTY_NODES = [\n  'HeaderMark',\n  'CodeMark',\n  'EmphasisMark',\n  'SuperscriptMark',\n  'SubscriptMark',\n  'HighlightMark',\n  'QuoteMark',\n  'ListMark',\n  'YAMLFrontmatterStart',\n  'YAMLFrontmatterEnd',\n  'Document',\n  'List',\n  'ListItem',\n  'PandocAttribute'\n]\n\n/**\n * Parses an attribute node (PandocAttribute), according to the Pandoc rules\n * (mostly). cf.: https://pandoc.org/MANUAL.html#extension-attributes\n *\n * @param   {Record<string, string>}  oldAttributes  Attribute nodes are merged.\n * @param   {SyntaxNode}              node           The SyntaxNode\n * @param   {string}                  markdown       The original markdown\n *\n * @return  {Record<string, string>}                 A map of the attributes\n */\nfunction parseAttributeNode (oldAttributes: Record<string, string> = {}, node: SyntaxNode, markdown: string): Record<string, string> {\n  if (node.name !== 'PandocAttribute') {\n    return oldAttributes\n  }\n\n  const rawString: string = markdown.substring(node.from + 1, node.to - 1) // Remove { and }\n  const rawAttributes: string[] = rawString.split(/\\s+/)\n  // General syntax: {#identifier .class .class key=value key=value}\n  for (const attribute of rawAttributes) {\n    if (attribute.startsWith('.')) {\n      // It's a class\n      if ('class' in oldAttributes) {\n        oldAttributes.class = oldAttributes.class + ' ' + attribute.substring(1)\n      } else {\n        oldAttributes.class = attribute.substring(1)\n      }\n    } else if (attribute.startsWith('#') && !('id' in oldAttributes)) {\n      // It's an ID, but only the *first* one found counts\n      oldAttributes.id = attribute.substring(1)\n    } else if (attribute.includes('=')) {\n      // It's a key=value attribute. NOTE: Later generic attributes override\n      // earlier ones!\n      const parts: string[] = attribute.split('=')\n      if (parts.length === 2) {\n        oldAttributes[parts[0]] = parts[1]\n      } // Else: Invalid\n    }\n  }\n  return oldAttributes\n}\n\n/**\n * Parses the children of ASTNodes who can have children.\n *\n * @param   {T}           astNode   The AST node that must support children\n * @param   {SyntaxNode}  node      The original Lezer SyntaxNode\n * @param   {string}      markdown  The Markdown source\n *\n * @return  {T}                     Returns the same astNode with children.\n */\nexport function parseChildren<T extends { children: ASTNode[] } & MDNode> (astNode: T, node: SyntaxNode, markdown: string): T {\n  if (node.firstChild === null) {\n    if (!EMPTY_NODES.includes(node.name)) {\n      const textNode = genericTextNode(node.from, node.to, markdown.substring(node.from, node.to), getWhitespaceBeforeNode(node, markdown))\n      astNode.children = [textNode]\n    }\n    return astNode // We're done\n  }\n\n  astNode.children = []\n\n  let currentChild: SyntaxNode|null = node.firstChild\n  let currentIndex = node.from\n  while (currentChild !== null) {\n    // NOTE: We have to account for \"gaps\" where a node has children that do not\n    // completely cover the node's contents. In that case, we have to add text\n    // nodes that just contain those strings.\n    if (currentChild.from > currentIndex && !EMPTY_NODES.includes(node.name)) {\n      const gap = markdown.substring(currentIndex, currentChild.from)\n      const onlyWhitespace = /^(\\s*)/m.exec(gap)\n      const whitespaceBefore = onlyWhitespace !== null ? onlyWhitespace[1] : ''\n      const textNode = genericTextNode(\n        currentIndex,\n        currentChild.from,\n        gap.substring(whitespaceBefore.length),\n        whitespaceBefore\n      )\n      astNode.children.push(textNode)\n    }\n    if (currentChild.name === 'PandocAttribute') {\n      // PandocAttribute nodes should never show up in the tree\n      // TODO: This assumes that the PandocAttribute should apply to the parent\n      // node, but often (e.g., for images) they belong to the previous child!\n      // TODO: Check what the *previous* child was, and if it can have attributes\n      // Docs: https://pandoc.org/MANUAL.html#extension-attributes\n      astNode.attributes = parseAttributeNode(astNode.attributes, currentChild, markdown)\n    } else {\n      astNode.children.push(parseNode(currentChild, markdown))\n    }\n    currentIndex = currentChild.to // Must happen before the nextSibling assignment\n    currentChild = currentChild.nextSibling\n  }\n\n  if (currentIndex < node.to && !EMPTY_NODES.includes(node.name)) {\n    // One final text node\n    const textNode = genericTextNode(currentIndex, node.to, markdown.substring(currentIndex, node.to))\n    astNode.children.push(textNode)\n  }\n\n  return astNode\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"1241d5fdc03cc40c049048657b047b435d86fa25","contentHash":"1d9cb9fe6c227415d06407e3afbcd5505f55fb850b2ac58507935d27a3f61991"},"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/modules/markdown-utils/markdown-ast/generic-text-node.ts":{"path":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/modules/markdown-utils/markdown-ast/generic-text-node.ts","statementMap":{"0":{"start":{"line":16,"column":0},"end":{"line":16,"column":62}},"1":{"start":{"line":17,"column":0},"end":{"line":17,"column":42}},"2":{"start":{"line":30,"column":4},"end":{"line":30,"column":77}}},"fnMap":{"0":{"name":"genericTextNode","decl":{"start":{"line":29,"column":9},"end":{"line":29,"column":24}},"loc":{"start":{"line":29,"column":65},"end":{"line":31,"column":1}},"line":29}},"branchMap":{"0":{"loc":{"start":{"line":29,"column":42},"end":{"line":29,"column":63}},"type":"default-arg","locations":[{"start":{"line":29,"column":61},"end":{"line":29,"column":63}}],"line":29}},"s":{"0":1,"1":1,"2":70},"f":{"0":70},"b":{"0":[22]},"inputSourceMap":{"version":3,"file":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/modules/markdown-utils/markdown-ast/generic-text-node.ts","sources":["/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/modules/markdown-utils/markdown-ast/generic-text-node.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;GAaG;;AAeH,0CAEC;AAbD;;;;;;;;;;GAUG;AACH,SAAgB,eAAe,CAAE,IAAY,EAAE,EAAU,EAAE,KAAa,EAAE,gBAAgB,GAAG,EAAE;IAC7F,OAAO,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,EAAE,EAAE,KAAK,EAAE,gBAAgB,EAAE,CAAA;AAC1E,CAAC","sourcesContent":["/**\n * @ignore\n * BEGIN HEADER\n *\n * Contains:        genericTextNode\n * CVM-Role:        Utility\n * Maintainer:      Hendrik Erz\n * License:         GNU GPL v3\n *\n * Description:     A simple function that wraps a piece of plain text into an\n *                  ASTNode.\n *\n * END HEADER\n */\n\nimport { type TextNode } from '../markdown-ast'\n\n/**\n * Creates a generic text node; this is used to represent textual contents of\n * SyntaxNodes.\n *\n * @param   {number}    from              The absolute start offset\n * @param   {number}    to                The absolute end offset\n * @param   {string}    value             The actual text\n * @param   {string}    whitespaceBefore  Potential whitespace before the node\n *\n * @return  {TextNode}                    The rendered TextNode\n */\nexport function genericTextNode (from: number, to: number, value: string, whitespaceBefore = ''): TextNode {\n  return { type: 'Text', name: 'text', from, to, value, whitespaceBefore }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"e9f63fd3e147ea6bbb651c8f27c787e3f7df8216","contentHash":"f92cfb8643daa3e63f14c4c93d5b94bde9066efaec8edfd5e27a90315503b967"},"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/modules/markdown-utils/markdown-to-html.ts":{"path":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/modules/markdown-utils/markdown-to-html.ts","statementMap":{"0":{"start":{"line":24,"column":22},"end":{"line":26,"column":1}},"1":{"start":{"line":25,"column":4},"end":{"line":25,"column":62}},"2":{"start":{"line":27,"column":0},"end":{"line":27,"column":62}},"3":{"start":{"line":28,"column":0},"end":{"line":28,"column":26}},"4":{"start":{"line":29,"column":16},"end":{"line":29,"column":49}},"5":{"start":{"line":30,"column":0},"end":{"line":30,"column":32}},"6":{"start":{"line":31,"column":11},"end":{"line":31,"column":23}},"7":{"start":{"line":32,"column":21},"end":{"line":32,"column":59}},"8":{"start":{"line":42,"column":16},"end":{"line":46,"column":5}},"9":{"start":{"line":47,"column":4},"end":{"line":59,"column":5}},"10":{"start":{"line":48,"column":8},"end":{"line":48,"column":27}},"11":{"start":{"line":49,"column":8},"end":{"line":49,"column":31}},"12":{"start":{"line":51,"column":9},"end":{"line":59,"column":5}},"13":{"start":{"line":52,"column":8},"end":{"line":52,"column":26}},"14":{"start":{"line":54,"column":9},"end":{"line":59,"column":5}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":29}},"16":{"start":{"line":57,"column":9},"end":{"line":59,"column":5}},"17":{"start":{"line":58,"column":8},"end":{"line":58,"column":29}},"18":{"start":{"line":60,"column":4},"end":{"line":62,"column":5}},"19":{"start":{"line":61,"column":8},"end":{"line":61,"column":50}},"20":{"start":{"line":63,"column":4},"end":{"line":63,"column":15}},"21":{"start":{"line":77,"column":4},"end":{"line":195,"column":5}},"22":{"start":{"line":78,"column":21},"end":{"line":78,"column":23}},"23":{"start":{"line":79,"column":8},"end":{"line":81,"column":9}},"24":{"start":{"line":80,"column":12},"end":{"line":80,"column":69}},"25":{"start":{"line":82,"column":8},"end":{"line":82,"column":29}},"26":{"start":{"line":84,"column":9},"end":{"line":195,"column":5}},"27":{"start":{"line":86,"column":8},"end":{"line":86,"column":69}},"28":{"start":{"line":88,"column":9},"end":{"line":195,"column":5}},"29":{"start":{"line":89,"column":8},"end":{"line":89,"column":18}},"30":{"start":{"line":91,"column":9},"end":{"line":195,"column":5}},"31":{"start":{"line":92,"column":25},"end":{"line":92,"column":98}},"32":{"start":{"line":93,"column":8},"end":{"line":93,"column":168}},"33":{"start":{"line":95,"column":9},"end":{"line":195,"column":5}},"34":{"start":{"line":96,"column":8},"end":{"line":96,"column":165}},"35":{"start":{"line":98,"column":9},"end":{"line":195,"column":5}},"36":{"start":{"line":99,"column":8},"end":{"line":99,"column":193}},"37":{"start":{"line":101,"column":9},"end":{"line":195,"column":5}},"38":{"start":{"line":102,"column":8},"end":{"line":102,"column":123}},"39":{"start":{"line":104,"column":9},"end":{"line":195,"column":5}},"40":{"start":{"line":105,"column":8},"end":{"line":105,"column":111}},"41":{"start":{"line":107,"column":9},"end":{"line":195,"column":5}},"42":{"start":{"line":108,"column":8},"end":{"line":108,"column":109}},"43":{"start":{"line":110,"column":9},"end":{"line":195,"column":5}},"44":{"start":{"line":111,"column":8},"end":{"line":111,"column":109}},"45":{"start":{"line":113,"column":9},"end":{"line":195,"column":5}},"46":{"start":{"line":114,"column":20},"end":{"line":114,"column":90}},"47":{"start":{"line":115,"column":8},"end":{"line":115,"column":272}},"48":{"start":{"line":117,"column":9},"end":{"line":195,"column":5}},"49":{"start":{"line":118,"column":8},"end":{"line":118,"column":267}},"50":{"start":{"line":120,"column":9},"end":{"line":195,"column":5}},"51":{"start":{"line":121,"column":25},"end":{"line":121,"column":77}},"52":{"start":{"line":122,"column":8},"end":{"line":122,"column":119}},"53":{"start":{"line":124,"column":9},"end":{"line":195,"column":5}},"54":{"start":{"line":125,"column":8},"end":{"line":125,"column":108}},"55":{"start":{"line":127,"column":9},"end":{"line":195,"column":5}},"56":{"start":{"line":128,"column":21},"end":{"line":128,"column":143}},"57":{"start":{"line":129,"column":8},"end":{"line":129,"column":118}},"58":{"start":{"line":131,"column":9},"end":{"line":195,"column":5}},"59":{"start":{"line":132,"column":21},"end":{"line":132,"column":74}},"60":{"start":{"line":133,"column":8},"end":{"line":138,"column":9}},"61":{"start":{"line":135,"column":16},"end":{"line":135,"column":74}},"62":{"start":{"line":137,"column":16},"end":{"line":137,"column":66}},"63":{"start":{"line":140,"column":9},"end":{"line":195,"column":5}},"64":{"start":{"line":141,"column":21},"end":{"line":141,"column":23}},"65":{"start":{"line":142,"column":8},"end":{"line":155,"column":9}},"66":{"start":{"line":143,"column":26},"end":{"line":143,"column":28}},"67":{"start":{"line":144,"column":12},"end":{"line":146,"column":13}},"68":{"start":{"line":145,"column":16},"end":{"line":145,"column":82}},"69":{"start":{"line":147,"column":24},"end":{"line":147,"column":58}},"70":{"start":{"line":148,"column":28},"end":{"line":148,"column":78}},"71":{"start":{"line":148,"column":43},"end":{"line":148,"column":66}},"72":{"start":{"line":149,"column":12},"end":{"line":154,"column":13}},"73":{"start":{"line":150,"column":16},"end":{"line":150,"column":95}},"74":{"start":{"line":153,"column":16},"end":{"line":153,"column":76}},"75":{"start":{"line":156,"column":8},"end":{"line":156,"column":79}},"76":{"start":{"line":158,"column":9},"end":{"line":195,"column":5}},"77":{"start":{"line":159,"column":8},"end":{"line":159,"column":50}},"78":{"start":{"line":161,"column":9},"end":{"line":195,"column":5}},"79":{"start":{"line":162,"column":8},"end":{"line":167,"column":9}},"80":{"start":{"line":163,"column":12},"end":{"line":163,"column":87}},"81":{"start":{"line":166,"column":12},"end":{"line":166,"column":143}},"82":{"start":{"line":169,"column":9},"end":{"line":195,"column":5}},"83":{"start":{"line":170,"column":8},"end":{"line":170,"column":98}},"84":{"start":{"line":172,"column":9},"end":{"line":195,"column":5}},"85":{"start":{"line":175,"column":24},"end":{"line":175,"column":40}},"86":{"start":{"line":176,"column":8},"end":{"line":178,"column":9}},"87":{"start":{"line":177,"column":12},"end":{"line":177,"column":22}},"88":{"start":{"line":179,"column":21},"end":{"line":181,"column":16}},"89":{"start":{"line":180,"column":48},"end":{"line":180,"column":67}},"90":{"start":{"line":182,"column":21},"end":{"line":182,"column":107}},"91":{"start":{"line":183,"column":22},"end":{"line":183,"column":72}},"92":{"start":{"line":184,"column":21},"end":{"line":184,"column":93}},"93":{"start":{"line":185,"column":8},"end":{"line":185,"column":40}},"94":{"start":{"line":187,"column":9},"end":{"line":195,"column":5}},"95":{"start":{"line":191,"column":8},"end":{"line":191,"column":65}},"96":{"start":{"line":193,"column":9},"end":{"line":195,"column":5}},"97":{"start":{"line":194,"column":8},"end":{"line":194,"column":56}},"98":{"start":{"line":196,"column":4},"end":{"line":196,"column":14}},"99":{"start":{"line":210,"column":19},"end":{"line":212,"column":5}},"100":{"start":{"line":213,"column":16},"end":{"line":213,"column":66}},"101":{"start":{"line":214,"column":4},"end":{"line":214,"column":89}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":24,"column":56},"end":{"line":24,"column":57}},"loc":{"start":{"line":24,"column":71},"end":{"line":26,"column":1}},"line":24},"1":{"name":"getTagInfo","decl":{"start":{"line":41,"column":9},"end":{"line":41,"column":19}},"loc":{"start":{"line":41,"column":26},"end":{"line":64,"column":1}},"line":41},"2":{"name":"nodeToHTML","decl":{"start":{"line":74,"column":9},"end":{"line":74,"column":19}},"loc":{"start":{"line":74,"column":58},"end":{"line":197,"column":1}},"line":74},"3":{"name":"(anonymous_3)","decl":{"start":{"line":148,"column":38},"end":{"line":148,"column":39}},"loc":{"start":{"line":148,"column":43},"end":{"line":148,"column":66}},"line":148},"4":{"name":"(anonymous_4)","decl":{"start":{"line":180,"column":43},"end":{"line":180,"column":44}},"loc":{"start":{"line":180,"column":48},"end":{"line":180,"column":67}},"line":180},"5":{"name":"md2html","decl":{"start":{"line":209,"column":9},"end":{"line":209,"column":16}},"loc":{"start":{"line":209,"column":77},"end":{"line":215,"column":1}},"line":209}},"branchMap":{"0":{"loc":{"start":{"line":24,"column":22},"end":{"line":26,"column":1}},"type":"binary-expr","locations":[{"start":{"line":24,"column":23},"end":{"line":24,"column":27}},{"start":{"line":24,"column":31},"end":{"line":24,"column":51}},{"start":{"line":24,"column":56},"end":{"line":26,"column":1}}],"line":24},"1":{"loc":{"start":{"line":25,"column":11},"end":{"line":25,"column":61}},"type":"cond-expr","locations":[{"start":{"line":25,"column":37},"end":{"line":25,"column":40}},{"start":{"line":25,"column":43},"end":{"line":25,"column":61}}],"line":25},"2":{"loc":{"start":{"line":25,"column":12},"end":{"line":25,"column":33}},"type":"binary-expr","locations":[{"start":{"line":25,"column":12},"end":{"line":25,"column":15}},{"start":{"line":25,"column":19},"end":{"line":25,"column":33}}],"line":25},"3":{"loc":{"start":{"line":47,"column":4},"end":{"line":59,"column":5}},"type":"if","locations":[{"start":{"line":47,"column":4},"end":{"line":59,"column":5}},{"start":{"line":51,"column":9},"end":{"line":59,"column":5}}],"line":47},"4":{"loc":{"start":{"line":51,"column":9},"end":{"line":59,"column":5}},"type":"if","locations":[{"start":{"line":51,"column":9},"end":{"line":59,"column":5}},{"start":{"line":54,"column":9},"end":{"line":59,"column":5}}],"line":51},"5":{"loc":{"start":{"line":54,"column":9},"end":{"line":59,"column":5}},"type":"if","locations":[{"start":{"line":54,"column":9},"end":{"line":59,"column":5}},{"start":{"line":57,"column":9},"end":{"line":59,"column":5}}],"line":54},"6":{"loc":{"start":{"line":54,"column":13},"end":{"line":54,"column":69}},"type":"binary-expr","locations":[{"start":{"line":54,"column":13},"end":{"line":54,"column":39}},{"start":{"line":54,"column":43},"end":{"line":54,"column":69}}],"line":54},"7":{"loc":{"start":{"line":57,"column":9},"end":{"line":59,"column":5}},"type":"if","locations":[{"start":{"line":57,"column":9},"end":{"line":59,"column":5}},{"start":{},"end":{}}],"line":57},"8":{"loc":{"start":{"line":60,"column":4},"end":{"line":62,"column":5}},"type":"if","locations":[{"start":{"line":60,"column":4},"end":{"line":62,"column":5}},{"start":{},"end":{}}],"line":60},"9":{"loc":{"start":{"line":74,"column":46},"end":{"line":74,"column":56}},"type":"default-arg","locations":[{"start":{"line":74,"column":55},"end":{"line":74,"column":56}}],"line":74},"10":{"loc":{"start":{"line":77,"column":4},"end":{"line":195,"column":5}},"type":"if","locations":[{"start":{"line":77,"column":4},"end":{"line":195,"column":5}},{"start":{"line":84,"column":9},"end":{"line":195,"column":5}}],"line":77},"11":{"loc":{"start":{"line":84,"column":9},"end":{"line":195,"column":5}},"type":"if","locations":[{"start":{"line":84,"column":9},"end":{"line":195,"column":5}},{"start":{"line":88,"column":9},"end":{"line":195,"column":5}}],"line":84},"12":{"loc":{"start":{"line":84,"column":13},"end":{"line":84,"column":64}},"type":"binary-expr","locations":[{"start":{"line":84,"column":13},"end":{"line":84,"column":36}},{"start":{"line":84,"column":40},"end":{"line":84,"column":64}}],"line":84},"13":{"loc":{"start":{"line":88,"column":9},"end":{"line":195,"column":5}},"type":"if","locations":[{"start":{"line":88,"column":9},"end":{"line":195,"column":5}},{"start":{"line":91,"column":9},"end":{"line":195,"column":5}}],"line":88},"14":{"loc":{"start":{"line":91,"column":9},"end":{"line":195,"column":5}},"type":"if","locations":[{"start":{"line":91,"column":9},"end":{"line":195,"column":5}},{"start":{"line":95,"column":9},"end":{"line":195,"column":5}}],"line":91},"15":{"loc":{"start":{"line":93,"column":65},"end":{"line":93,"column":158}},"type":"cond-expr","locations":[{"start":{"line":93,"column":108},"end":{"line":93,"column":116}},{"start":{"line":93,"column":119},"end":{"line":93,"column":158}}],"line":93},"16":{"loc":{"start":{"line":93,"column":65},"end":{"line":93,"column":105}},"type":"binary-expr","locations":[{"start":{"line":93,"column":65},"end":{"line":93,"column":82}},{"start":{"line":93,"column":86},"end":{"line":93,"column":105}}],"line":93},"17":{"loc":{"start":{"line":95,"column":9},"end":{"line":195,"column":5}},"type":"if","locations":[{"start":{"line":95,"column":9},"end":{"line":195,"column":5}},{"start":{"line":98,"column":9},"end":{"line":195,"column":5}}],"line":95},"18":{"loc":{"start":{"line":98,"column":9},"end":{"line":195,"column":5}},"type":"if","locations":[{"start":{"line":98,"column":9},"end":{"line":195,"column":5}},{"start":{"line":101,"column":9},"end":{"line":195,"column":5}}],"line":98},"19":{"loc":{"start":{"line":101,"column":9},"end":{"line":195,"column":5}},"type":"if","locations":[{"start":{"line":101,"column":9},"end":{"line":195,"column":5}},{"start":{"line":104,"column":9},"end":{"line":195,"column":5}}],"line":101},"20":{"loc":{"start":{"line":104,"column":9},"end":{"line":195,"column":5}},"type":"if","locations":[{"start":{"line":104,"column":9},"end":{"line":195,"column":5}},{"start":{"line":107,"column":9},"end":{"line":195,"column":5}}],"line":104},"21":{"loc":{"start":{"line":107,"column":9},"end":{"line":195,"column":5}},"type":"if","locations":[{"start":{"line":107,"column":9},"end":{"line":195,"column":5}},{"start":{"line":110,"column":9},"end":{"line":195,"column":5}}],"line":107},"22":{"loc":{"start":{"line":110,"column":9},"end":{"line":195,"column":5}},"type":"if","locations":[{"start":{"line":110,"column":9},"end":{"line":195,"column":5}},{"start":{"line":113,"column":9},"end":{"line":195,"column":5}}],"line":110},"23":{"loc":{"start":{"line":113,"column":9},"end":{"line":195,"column":5}},"type":"if","locations":[{"start":{"line":113,"column":9},"end":{"line":195,"column":5}},{"start":{"line":117,"column":9},"end":{"line":195,"column":5}}],"line":113},"24":{"loc":{"start":{"line":114,"column":20},"end":{"line":114,"column":90}},"type":"cond-expr","locations":[{"start":{"line":114,"column":53},"end":{"line":114,"column":79}},{"start":{"line":114,"column":82},"end":{"line":114,"column":90}}],"line":114},"25":{"loc":{"start":{"line":115,"column":120},"end":{"line":115,"column":267}},"type":"cond-expr","locations":[{"start":{"line":115,"column":219},"end":{"line":115,"column":221}},{"start":{"line":115,"column":224},"end":{"line":115,"column":267}}],"line":115},"26":{"loc":{"start":{"line":115,"column":120},"end":{"line":115,"column":216}},"type":"binary-expr","locations":[{"start":{"line":115,"column":120},"end":{"line":115,"column":199}},{"start":{"line":115,"column":203},"end":{"line":115,"column":216}}],"line":115},"27":{"loc":{"start":{"line":115,"column":126},"end":{"line":115,"column":189}},"type":"cond-expr","locations":[{"start":{"line":115,"column":172},"end":{"line":115,"column":178}},{"start":{"line":115,"column":181},"end":{"line":115,"column":189}}],"line":115},"28":{"loc":{"start":{"line":115,"column":126},"end":{"line":115,"column":169}},"type":"binary-expr","locations":[{"start":{"line":115,"column":126},"end":{"line":115,"column":152}},{"start":{"line":115,"column":156},"end":{"line":115,"column":169}}],"line":115},"29":{"loc":{"start":{"line":117,"column":9},"end":{"line":195,"column":5}},"type":"if","locations":[{"start":{"line":117,"column":9},"end":{"line":195,"column":5}},{"start":{"line":120,"column":9},"end":{"line":195,"column":5}}],"line":117},"30":{"loc":{"start":{"line":118,"column":71},"end":{"line":118,"column":212}},"type":"cond-expr","locations":[{"start":{"line":118,"column":170},"end":{"line":118,"column":172}},{"start":{"line":118,"column":175},"end":{"line":118,"column":212}}],"line":118},"31":{"loc":{"start":{"line":118,"column":71},"end":{"line":118,"column":167}},"type":"binary-expr","locations":[{"start":{"line":118,"column":71},"end":{"line":118,"column":150}},{"start":{"line":118,"column":154},"end":{"line":118,"column":167}}],"line":118},"32":{"loc":{"start":{"line":118,"column":77},"end":{"line":118,"column":140}},"type":"cond-expr","locations":[{"start":{"line":118,"column":123},"end":{"line":118,"column":129}},{"start":{"line":118,"column":132},"end":{"line":118,"column":140}}],"line":118},"33":{"loc":{"start":{"line":118,"column":77},"end":{"line":118,"column":120}},"type":"binary-expr","locations":[{"start":{"line":118,"column":77},"end":{"line":118,"column":103}},{"start":{"line":118,"column":107},"end":{"line":118,"column":120}}],"line":118},"34":{"loc":{"start":{"line":120,"column":9},"end":{"line":195,"column":5}},"type":"if","locations":[{"start":{"line":120,"column":9},"end":{"line":195,"column":5}},{"start":{"line":124,"column":9},"end":{"line":195,"column":5}}],"line":120},"35":{"loc":{"start":{"line":121,"column":25},"end":{"line":121,"column":77}},"type":"cond-expr","locations":[{"start":{"line":121,"column":45},"end":{"line":121,"column":72}},{"start":{"line":121,"column":75},"end":{"line":121,"column":77}}],"line":121},"36":{"loc":{"start":{"line":124,"column":9},"end":{"line":195,"column":5}},"type":"if","locations":[{"start":{"line":124,"column":9},"end":{"line":195,"column":5}},{"start":{"line":127,"column":9},"end":{"line":195,"column":5}}],"line":124},"37":{"loc":{"start":{"line":127,"column":9},"end":{"line":195,"column":5}},"type":"if","locations":[{"start":{"line":127,"column":9},"end":{"line":195,"column":5}},{"start":{"line":131,"column":9},"end":{"line":195,"column":5}}],"line":127},"38":{"loc":{"start":{"line":128,"column":21},"end":{"line":128,"column":143}},"type":"cond-expr","locations":[{"start":{"line":128,"column":50},"end":{"line":128,"column":138}},{"start":{"line":128,"column":141},"end":{"line":128,"column":143}}],"line":128},"39":{"loc":{"start":{"line":128,"column":96},"end":{"line":128,"column":135}},"type":"cond-expr","locations":[{"start":{"line":128,"column":111},"end":{"line":128,"column":130}},{"start":{"line":128,"column":133},"end":{"line":128,"column":135}}],"line":128},"40":{"loc":{"start":{"line":131,"column":9},"end":{"line":195,"column":5}},"type":"if","locations":[{"start":{"line":131,"column":9},"end":{"line":195,"column":5}},{"start":{"line":140,"column":9},"end":{"line":195,"column":5}}],"line":131},"41":{"loc":{"start":{"line":133,"column":8},"end":{"line":138,"column":9}},"type":"switch","locations":[{"start":{"line":134,"column":12},"end":{"line":135,"column":74}},{"start":{"line":136,"column":12},"end":{"line":137,"column":66}}],"line":133},"42":{"loc":{"start":{"line":140,"column":9},"end":{"line":195,"column":5}},"type":"if","locations":[{"start":{"line":140,"column":9},"end":{"line":195,"column":5}},{"start":{"line":158,"column":9},"end":{"line":195,"column":5}}],"line":140},"43":{"loc":{"start":{"line":147,"column":24},"end":{"line":147,"column":58}},"type":"cond-expr","locations":[{"start":{"line":147,"column":47},"end":{"line":147,"column":51}},{"start":{"line":147,"column":54},"end":{"line":147,"column":58}}],"line":147},"44":{"loc":{"start":{"line":149,"column":12},"end":{"line":154,"column":13}},"type":"if","locations":[{"start":{"line":149,"column":12},"end":{"line":154,"column":13}},{"start":{"line":152,"column":17},"end":{"line":154,"column":13}}],"line":149},"45":{"loc":{"start":{"line":158,"column":9},"end":{"line":195,"column":5}},"type":"if","locations":[{"start":{"line":158,"column":9},"end":{"line":195,"column":5}},{"start":{"line":161,"column":9},"end":{"line":195,"column":5}}],"line":158},"46":{"loc":{"start":{"line":161,"column":9},"end":{"line":195,"column":5}},"type":"if","locations":[{"start":{"line":161,"column":9},"end":{"line":195,"column":5}},{"start":{"line":169,"column":9},"end":{"line":195,"column":5}}],"line":161},"47":{"loc":{"start":{"line":162,"column":8},"end":{"line":167,"column":9}},"type":"if","locations":[{"start":{"line":162,"column":8},"end":{"line":167,"column":9}},{"start":{"line":165,"column":13},"end":{"line":167,"column":9}}],"line":162},"48":{"loc":{"start":{"line":169,"column":9},"end":{"line":195,"column":5}},"type":"if","locations":[{"start":{"line":169,"column":9},"end":{"line":195,"column":5}},{"start":{"line":172,"column":9},"end":{"line":195,"column":5}}],"line":169},"49":{"loc":{"start":{"line":172,"column":9},"end":{"line":195,"column":5}},"type":"if","locations":[{"start":{"line":172,"column":9},"end":{"line":195,"column":5}},{"start":{"line":187,"column":9},"end":{"line":195,"column":5}}],"line":172},"50":{"loc":{"start":{"line":176,"column":8},"end":{"line":178,"column":9}},"type":"if","locations":[{"start":{"line":176,"column":8},"end":{"line":178,"column":9}},{"start":{},"end":{}}],"line":176},"51":{"loc":{"start":{"line":176,"column":12},"end":{"line":176,"column":83}},"type":"binary-expr","locations":[{"start":{"line":176,"column":12},"end":{"line":176,"column":53}},{"start":{"line":176,"column":57},"end":{"line":176,"column":83}}],"line":176},"52":{"loc":{"start":{"line":179,"column":21},"end":{"line":181,"column":16}},"type":"cond-expr","locations":[{"start":{"line":180,"column":14},"end":{"line":180,"column":78}},{"start":{"line":181,"column":14},"end":{"line":181,"column":16}}],"line":179},"53":{"loc":{"start":{"line":182,"column":74},"end":{"line":182,"column":104}},"type":"cond-expr","locations":[{"start":{"line":182,"column":96},"end":{"line":182,"column":99}},{"start":{"line":182,"column":102},"end":{"line":182,"column":104}}],"line":182},"54":{"loc":{"start":{"line":183,"column":22},"end":{"line":183,"column":72}},"type":"cond-expr","locations":[{"start":{"line":183,"column":44},"end":{"line":183,"column":46}},{"start":{"line":183,"column":49},"end":{"line":183,"column":72}}],"line":183},"55":{"loc":{"start":{"line":184,"column":21},"end":{"line":184,"column":93}},"type":"cond-expr","locations":[{"start":{"line":184,"column":43},"end":{"line":184,"column":45}},{"start":{"line":184,"column":48},"end":{"line":184,"column":93}}],"line":184},"56":{"loc":{"start":{"line":187,"column":9},"end":{"line":195,"column":5}},"type":"if","locations":[{"start":{"line":187,"column":9},"end":{"line":195,"column":5}},{"start":{"line":193,"column":9},"end":{"line":195,"column":5}}],"line":187},"57":{"loc":{"start":{"line":193,"column":9},"end":{"line":195,"column":5}},"type":"if","locations":[{"start":{"line":193,"column":9},"end":{"line":195,"column":5}},{"start":{},"end":{}}],"line":193},"58":{"loc":{"start":{"line":209,"column":40},"end":{"line":209,"column":68}},"type":"default-arg","locations":[{"start":{"line":209,"column":56},"end":{"line":209,"column":68}}],"line":209},"59":{"loc":{"start":{"line":214,"column":40},"end":{"line":214,"column":87}},"type":"cond-expr","locations":[{"start":{"line":214,"column":77},"end":{"line":214,"column":82}},{"start":{"line":214,"column":85},"end":{"line":214,"column":87}}],"line":214},"60":{"loc":{"start":{"line":214,"column":40},"end":{"line":214,"column":74}},"type":"binary-expr","locations":[{"start":{"line":214,"column":40},"end":{"line":214,"column":54}},{"start":{"line":214,"column":58},"end":{"line":214,"column":74}}],"line":214}},"s":{"0":1,"1":2,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0},"f":{"0":2,"1":0,"2":0,"3":0,"4":0,"5":0},"b":{"0":[1,1,1],"1":[0,2],"2":[2,2],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0],"59":[0,0],"60":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/modules/markdown-utils/markdown-to-html.ts","sources":["/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/modules/markdown-utils/markdown-to-html.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @ignore\n * BEGIN HEADER\n *\n * Contains:        md2html\n * CVM-Role:        Utility Function\n * Maintainer:      Hendrik Erz\n * License:         GNU GPL v3\n *\n * Description:     This file contains a Markdown to HTML converter that will\n *                  take in a Markdown source string and convert it to HTML. It\n *                  uses the MainEditor's Markdown parser instance to ensure\n *                  that every element that the editor recognizes is being\n *                  appropriately converted into HTML tags. Any Markdown element\n *                  that comes from the Lezer tree and is not dedicatedly\n *                  handled (read: It has type 'Generic') the formatter will\n *                  create a Span or DIV element (depending on how many children\n *                  the generic has) and supply the node name (from the Lezer\n *                  tree) as a classname, converting the CamelCase to kebab-case.\n *\n * END HEADER\n */\n\nimport katex from 'katex'\nimport 'katex/contrib/mhchem'\nimport { markdownToAST } from '.'\nimport { type ASTNode, type GenericNode } from './markdown-ast'\nimport { type MarkdownParserConfig } from '../markdown-editor/parser/markdown-parser'\nimport _ from 'underscore'\n\n/**\n * Represents an HTML tag. This is a purposefully shallow representation\n */\ninterface HTMLTag {\n  /**\n   * The tag name for the resulting HTML tag\n   */\n  tagName: string\n  /**\n   * Self closing are, e.g., <hr>\n   */\n  selfClosing: boolean\n  /**\n   * A simple map of attributes (e.g., ['class', 'my-class'])\n   */\n  attributes: Array<[ string, string ]>\n}\n\nexport type CitationCallback = (citations: CiteItem[], composite: boolean) => string|undefined\n\nexport interface MD2HTMLCallbacks {\n  /**\n   * Can be used to hook into the image tag generation to alter the image's\n   * `src` attribute from the Markdown.\n   *\n   * @param   {string}  src  The link as it is written in the Markdown source.\n   *\n   * @return  {string}       Returns whatever should be taken as the `src`\n   *                         attribute for the resulting `<img>` tag.\n   */\n  onImageSrc: (src: string) => string\n}\n\n/**\n * This function looks at a GenericNode and returns information regarding the\n * tag that the node should result in.\n *\n * @param   {GenericNode}  node  The input node\n *\n * @return  {HTMLTag}            The HTML tag information\n */\nfunction getTagInfo (node: GenericNode): HTMLTag {\n  const ret: HTMLTag = {\n    tagName: 'div',\n    selfClosing: false,\n    attributes: []\n  }\n\n  if (node.name === 'HorizontalRule') {\n    ret.tagName = 'hr'\n    ret.selfClosing = true\n  } else if (node.name === 'Paragraph') {\n    ret.tagName = 'p'\n  } else if (node.name === 'FencedCode' || node.name === 'InlineCode') {\n    ret.tagName = 'code'\n  } else if (node.children.length === 1) {\n    ret.tagName = 'span'\n  }\n\n  if ([ 'span', 'div', 'p' ].includes(ret.tagName)) {\n    ret.attributes.push([ 'class', node.name ])\n  }\n\n  return ret\n}\n\n/**\n * Takes a Markdown AST node and turns it to an HTML string\n *\n * @param   {ASTNode}  node         The node\n * @param   {Function} getCitation  The callback for the citations\n * @param   {number}   indent       The indentation for this node\n *\n * @return  {string}                The HTML string\n */\nfunction nodeToHTML (node: ASTNode|ASTNode[], getCitation: CitationCallback, hooks: Partial<MD2HTMLCallbacks>, indent: number = 0): string {\n  // Convenience to convert a list of child nodes to HTML\n  if (Array.isArray(node)) {\n    const body: string[] = []\n    for (const child of node) {\n      body.push(nodeToHTML(child, getCitation, hooks, indent))\n    }\n    return body.join('')\n  } else if (node.type === 'Generic' && node.name === 'Document') {\n    // This ensures there's no outer div class=Document\n    return nodeToHTML(node.children, getCitation, hooks, indent)\n  } else if (node.type === 'YAMLFrontmatter') {\n    return '' // Frontmatters must be removed upon HTML export\n  } else if (node.type === 'Citation') {\n    const rendered = getCitation(node.parsedCitation.citations, node.parsedCitation.composite)\n    return `${node.whitespaceBefore}<span class=\"citation\">${rendered ?? _.escape(node.value)}</span>`\n  } else if (node.type === 'Footnote') {\n    return `${node.whitespaceBefore}<a class=\"footnote\" href=\"#fnref:${_.escape(node.label)}\">${_.escape(node.label)}</a>`\n  } else if (node.type === 'FootnoteRef') {\n    return `${node.whitespaceBefore}<div class=\"footnote-ref\"><a name=\"fnref:${_.escape(node.label)}\"></a>${nodeToHTML(node.children, getCitation, hooks, indent)}</div>`\n  } else if (node.type === 'Heading') {\n    return `${node.whitespaceBefore}<h${node.level}>${_.escape(node.value.value)}</h${node.level}>`\n  } else if (node.type === 'Highlight') {\n    return `${node.whitespaceBefore}<mark>${nodeToHTML(node.children, getCitation, hooks, indent)}</mark>`\n  } else if (node.type === 'Superscript') {\n    return `${node.whitespaceBefore}<sup>${nodeToHTML(node.children, getCitation, hooks, indent)}</sup>`\n  } else if (node.type === 'Subscript') {\n    return `${node.whitespaceBefore}<sub>${nodeToHTML(node.children, getCitation, hooks, indent)}</sub>`\n  } else if (node.type === 'Image') {\n    const src = hooks.onImageSrc !== undefined ? hooks.onImageSrc(node.url) : node.url\n    return `${node.whitespaceBefore}<img src=\"${src}\" alt=\"${_.escape(node.alt.value)}\" title=\"${node.title?.value ?? _.escape(node.alt.value)}\">`\n  } else if (node.type === 'Link') {\n    return `${node.whitespaceBefore}<a href=\"${node.url}\" title=\"${node.title?.value ?? _.escape(node.url)}\">${_.escape(node.alt.value)}</a>`\n  } else if (node.type === 'OrderedList') {\n    const startsAt = node.startsAt > 1 ? ` start=\"${node.startsAt}\"` : ''\n    return `${node.whitespaceBefore}<ol${startsAt}>\\n${nodeToHTML(node.items, getCitation, hooks, indent)}\\n</ol>`\n  } else if (node.type === 'BulletList') {\n    return `${node.whitespaceBefore}<ul>\\n${nodeToHTML(node.items, getCitation, hooks, indent)}\\n</ul>`\n  } else if (node.type === 'ListItem') {\n    const task = node.checked !== undefined ? `<input type=\"checkbox\" disabled=\"disabled\" ${node.checked ? 'checked=\"checked\"' : ''}>` : ''\n    return `${node.whitespaceBefore}<li>${task}${nodeToHTML(node.children, getCitation, hooks, indent + 1)}</li>`\n  } else if (node.type === 'Emphasis') {\n    const body = nodeToHTML(node.children, getCitation, hooks, indent)\n\n    switch (node.which) {\n      case 'bold':\n        return `${node.whitespaceBefore}<strong>${body}</strong>`\n      case 'italic':\n        return `${node.whitespaceBefore}<em>${body}</em>`\n    }\n  } else if (node.type === 'Table') {\n    const rows: string[] = []\n    for (const row of node.rows) {\n      const cells: string[] = []\n      for (const cell of row.cells) {\n        cells.push(nodeToHTML(cell.children, getCitation, hooks, indent))\n      }\n      const tag = row.isHeaderOrFooter ? 'th' : 'td'\n      const content = cells.map(c => `<${tag}>${c}</${tag}>`).join('\\n')\n      if (row.isHeaderOrFooter) {\n        rows.push(`${row.whitespaceBefore}<thead>\\n<tr>\\n${content}\\n</tr>\\n</thead>`)\n      } else {\n        rows.push(`${row.whitespaceBefore}<tr>\\n${content}\\n</tr>`)\n      }\n    }\n    return `${node.whitespaceBefore}<table>\\n${rows.join('\\n')}\\n</table>`\n  } else if (node.type === 'Text') {\n    return node.whitespaceBefore + node.value // Plain text\n  } else if (node.type === 'FencedCode') {\n    if (node.info === '$$') {\n      return node.whitespaceBefore + katex.renderToString(node.source)\n    } else {\n      return `${node.whitespaceBefore}<pre><code class=\"language-${node.info}\">${_.escape(node.source)}</code></pre>`\n    }\n  } else if (node.type === 'InlineCode') {\n    return `${node.whitespaceBefore}<code>${_.escape(node.source)}</code>`\n  } else if (node.type === 'Generic') {\n    // Generic nodes are differentiated by name. There are a few we can support,\n    // but most we wrap in a div.\n    const tagInfo = getTagInfo(node)\n\n    if ([ 'div', 'span' ].includes(tagInfo.tagName) && node.children.length === 0) {\n      return '' // Simplify the resulting HTML by removing empty elements\n    }\n\n    const attr = tagInfo.attributes.length > 0\n      ? ' ' + tagInfo.attributes.map(a => `${a[0]}=\"${a[1]}\"`).join(' ')\n      : ''\n\n    const open = `${node.whitespaceBefore}<${tagInfo.tagName}${attr}${tagInfo.selfClosing ? '/' : ''}>`\n    const close = tagInfo.selfClosing ? '' : `</${tagInfo.tagName}>`\n    const body = tagInfo.selfClosing ? '' : nodeToHTML(node.children, getCitation, hooks)\n    return `${open}${body}${close}`\n  } else if (node.type === 'ZettelkastenLink') {\n    // NOTE: We count a ZettelkastenLink's title as a TextNode for various\n    // purposes, such as spellchecking it, but it should not contain any syntax\n    // which is why we directly access its value here.\n    return `${node.whitespaceBefore}[[${node.title.value}]]`\n  } else if (node.type === 'ZettelkastenTag') {\n    return `${node.whitespaceBefore}#${node.value}`\n  }\n\n  return ''\n}\n\n/**\n * Takes Markdown source and turns it into a valid HTML fragment. The citeLibrary\n * will be used to resolve citations.\n *\n * @param   {string}           markdown       The Markdown source\n * @param   {Function}         getCitation    The citation callback to use\n * @param   {string}           zknLinkFormat  (Optional) The Wikilink format\n * @param   {MD2HTMLCallbacks} hooks          Any hooks that can be used to programmatically alter the produced HTML\n *\n * @return  {string}                   The resulting HTML\n */\nexport function md2html (markdown: string, getCitation: CitationCallback, zknLinkFormat: 'link|title'|'title|link' = 'link|title', hooks?: Partial<MD2HTMLCallbacks>): string {\n  const config: MarkdownParserConfig = {\n    zknLinkParserConfig: { format: zknLinkFormat }\n  }\n  const ast = markdownToAST(markdown, undefined, config)\n  return nodeToHTML(ast, getCitation, hooks ?? {})\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"d5bfe29256b646c30ff835c8ecb7f01086b17524","contentHash":"fecf2b7e5ecfb904e4d952cb6ad3b9ae392d74692851205c36b6e52446fbd8d8"},"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/util/counter.ts":{"path":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/util/counter.ts","statementMap":{"0":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"1":{"start":{"line":15,"column":0},"end":{"line":15,"column":32}},"2":{"start":{"line":16,"column":0},"end":{"line":16,"column":32}},"3":{"start":{"line":17,"column":0},"end":{"line":17,"column":28}},"4":{"start":{"line":18,"column":25},"end":{"line":18,"column":66}},"5":{"start":{"line":19,"column":24},"end":{"line":19,"column":56}},"6":{"start":{"line":33,"column":20},"end":{"line":33,"column":63}},"7":{"start":{"line":34,"column":4},"end":{"line":42,"column":5}},"8":{"start":{"line":35,"column":8},"end":{"line":35,"column":83}},"9":{"start":{"line":35,"column":45},"end":{"line":35,"column":81}},"10":{"start":{"line":36,"column":8},"end":{"line":41,"column":11}},"11":{"start":{"line":37,"column":12},"end":{"line":39,"column":13}},"12":{"start":{"line":38,"column":16},"end":{"line":38,"column":68}},"13":{"start":{"line":40,"column":12},"end":{"line":40,"column":29}},"14":{"start":{"line":43,"column":4},"end":{"line":51,"column":5}},"15":{"start":{"line":44,"column":8},"end":{"line":44,"column":79}},"16":{"start":{"line":44,"column":45},"end":{"line":44,"column":77}},"17":{"start":{"line":45,"column":8},"end":{"line":50,"column":11}},"18":{"start":{"line":46,"column":12},"end":{"line":48,"column":13}},"19":{"start":{"line":47,"column":16},"end":{"line":47,"column":89}},"20":{"start":{"line":49,"column":12},"end":{"line":49,"column":29}},"21":{"start":{"line":52,"column":22},"end":{"line":52,"column":55}},"22":{"start":{"line":52,"column":44},"end":{"line":52,"column":54}},"23":{"start":{"line":53,"column":4},"end":{"line":57,"column":53}},"24":{"start":{"line":56,"column":21},"end":{"line":56,"column":36}},"25":{"start":{"line":57,"column":24},"end":{"line":57,"column":51}},"26":{"start":{"line":71,"column":4},"end":{"line":71,"column":49}},"27":{"start":{"line":85,"column":4},"end":{"line":87,"column":46}},"28":{"start":{"line":86,"column":18},"end":{"line":86,"column":26}},"29":{"start":{"line":87,"column":31},"end":{"line":87,"column":41}},"30":{"start":{"line":101,"column":18},"end":{"line":101,"column":48}},"31":{"start":{"line":102,"column":4},"end":{"line":105,"column":6}},"32":{"start":{"line":104,"column":30},"end":{"line":104,"column":38}},"33":{"start":{"line":104,"column":62},"end":{"line":104,"column":72}}},"fnMap":{"0":{"name":"getCleanedWords","decl":{"start":{"line":32,"column":9},"end":{"line":32,"column":24}},"loc":{"start":{"line":32,"column":44},"end":{"line":58,"column":1}},"line":32},"1":{"name":"(anonymous_1)","decl":{"start":{"line":35,"column":37},"end":{"line":35,"column":38}},"loc":{"start":{"line":35,"column":45},"end":{"line":35,"column":81}},"line":35},"2":{"name":"(anonymous_2)","decl":{"start":{"line":36,"column":22},"end":{"line":36,"column":23}},"loc":{"start":{"line":36,"column":30},"end":{"line":41,"column":9}},"line":36},"3":{"name":"(anonymous_3)","decl":{"start":{"line":44,"column":37},"end":{"line":44,"column":38}},"loc":{"start":{"line":44,"column":45},"end":{"line":44,"column":77}},"line":44},"4":{"name":"(anonymous_4)","decl":{"start":{"line":45,"column":22},"end":{"line":45,"column":23}},"loc":{"start":{"line":45,"column":30},"end":{"line":50,"column":9}},"line":45},"5":{"name":"(anonymous_5)","decl":{"start":{"line":52,"column":36},"end":{"line":52,"column":37}},"loc":{"start":{"line":52,"column":44},"end":{"line":52,"column":54}},"line":52},"6":{"name":"(anonymous_6)","decl":{"start":{"line":56,"column":16},"end":{"line":56,"column":17}},"loc":{"start":{"line":56,"column":21},"end":{"line":56,"column":36}},"line":56},"7":{"name":"(anonymous_7)","decl":{"start":{"line":57,"column":16},"end":{"line":57,"column":17}},"loc":{"start":{"line":57,"column":24},"end":{"line":57,"column":51}},"line":57},"8":{"name":"countWords","decl":{"start":{"line":70,"column":9},"end":{"line":70,"column":19}},"loc":{"start":{"line":70,"column":39},"end":{"line":72,"column":1}},"line":70},"9":{"name":"countChars","decl":{"start":{"line":84,"column":9},"end":{"line":84,"column":19}},"loc":{"start":{"line":84,"column":39},"end":{"line":88,"column":1}},"line":84},"10":{"name":"(anonymous_10)","decl":{"start":{"line":86,"column":13},"end":{"line":86,"column":14}},"loc":{"start":{"line":86,"column":18},"end":{"line":86,"column":26}},"line":86},"11":{"name":"(anonymous_11)","decl":{"start":{"line":87,"column":16},"end":{"line":87,"column":17}},"loc":{"start":{"line":87,"column":31},"end":{"line":87,"column":41}},"line":87},"12":{"name":"countAll","decl":{"start":{"line":100,"column":9},"end":{"line":100,"column":17}},"loc":{"start":{"line":100,"column":37},"end":{"line":106,"column":1}},"line":100},"13":{"name":"(anonymous_13)","decl":{"start":{"line":104,"column":25},"end":{"line":104,"column":26}},"loc":{"start":{"line":104,"column":30},"end":{"line":104,"column":38}},"line":104},"14":{"name":"(anonymous_14)","decl":{"start":{"line":104,"column":47},"end":{"line":104,"column":48}},"loc":{"start":{"line":104,"column":62},"end":{"line":104,"column":72}},"line":104}},"branchMap":{"0":{"loc":{"start":{"line":32,"column":30},"end":{"line":32,"column":38}},"type":"default-arg","locations":[{"start":{"line":32,"column":37},"end":{"line":32,"column":38}}],"line":32},"1":{"loc":{"start":{"line":34,"column":4},"end":{"line":42,"column":5}},"type":"if","locations":[{"start":{"line":34,"column":4},"end":{"line":42,"column":5}},{"start":{},"end":{}}],"line":34},"2":{"loc":{"start":{"line":35,"column":45},"end":{"line":35,"column":81}},"type":"binary-expr","locations":[{"start":{"line":35,"column":45},"end":{"line":35,"column":62}},{"start":{"line":35,"column":66},"end":{"line":35,"column":81}}],"line":35},"3":{"loc":{"start":{"line":37,"column":12},"end":{"line":39,"column":13}},"type":"if","locations":[{"start":{"line":37,"column":12},"end":{"line":39,"column":13}},{"start":{},"end":{}}],"line":37},"4":{"loc":{"start":{"line":43,"column":4},"end":{"line":51,"column":5}},"type":"if","locations":[{"start":{"line":43,"column":4},"end":{"line":51,"column":5}},{"start":{},"end":{}}],"line":43},"5":{"loc":{"start":{"line":44,"column":45},"end":{"line":44,"column":77}},"type":"binary-expr","locations":[{"start":{"line":44,"column":45},"end":{"line":44,"column":58}},{"start":{"line":44,"column":62},"end":{"line":44,"column":77}}],"line":44},"6":{"loc":{"start":{"line":46,"column":12},"end":{"line":48,"column":13}},"type":"if","locations":[{"start":{"line":46,"column":12},"end":{"line":48,"column":13}},{"start":{},"end":{}}],"line":46},"7":{"loc":{"start":{"line":70,"column":25},"end":{"line":70,"column":33}},"type":"default-arg","locations":[{"start":{"line":70,"column":32},"end":{"line":70,"column":33}}],"line":70},"8":{"loc":{"start":{"line":84,"column":25},"end":{"line":84,"column":33}},"type":"default-arg","locations":[{"start":{"line":84,"column":32},"end":{"line":84,"column":33}}],"line":84},"9":{"loc":{"start":{"line":100,"column":23},"end":{"line":100,"column":31}},"type":"default-arg","locations":[{"start":{"line":100,"column":30},"end":{"line":100,"column":31}}],"line":100}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":18,"7":18,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":18,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":18,"22":50,"23":18,"24":80,"25":74,"26":9,"27":9,"28":35,"29":35,"30":0,"31":0,"32":0,"33":0},"f":{"0":18,"1":0,"2":0,"3":0,"4":0,"5":50,"6":80,"7":74,"8":9,"9":9,"10":35,"11":35,"12":0,"13":0,"14":0},"b":{"0":[0],"1":[0,18],"2":[0,0],"3":[0,0],"4":[0,18],"5":[0,0],"6":[0,0],"7":[9],"8":[9],"9":[0]},"inputSourceMap":{"version":3,"file":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/util/counter.ts","sources":["/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/util/counter.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;GAWG;;AA2DH,gCAEC;AAaD,gCAIC;AAaD,4BAMC;AA9FD,mEAAiE;AAEjE,MAAM,eAAe,GAAG,gCAAgC,CAAA;AAExD;;;;;;;;;;;GAWG;AACH,SAAS,eAAe,CAAE,GAAY,EAAE,IAAI,GAAG,CAAC,EAAE,EAAW;IAC3D,IAAI,SAAS,GAAG,IAAA,iCAAgB,EAAC,GAAG,CAAC,CAAA;IACrC,IAAI,IAAI,GAAG,CAAC,EAAE,CAAC;QACb,SAAS,GAAG,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,CAAC,EAAE,IAAI,IAAI,CAAC,CAAA;QAC1E,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;YACnB,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI,EAAE,CAAC;gBACrB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,CAAA;YACrD,CAAC;YACD,OAAO,SAAS,CAAA;QAClB,CAAC,CAAC,CAAA;IACJ,CAAC;IACD,IAAI,EAAE,KAAK,SAAS,EAAE,CAAC;QACrB,SAAS,GAAG,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,IAAI,IAAI,CAAC,IAAI,IAAI,EAAE,CAAC,CAAA;QACtE,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;YACnB,IAAI,IAAI,CAAC,EAAE,GAAG,EAAE,EAAE,CAAC;gBACjB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAA;YAC1E,CAAC;YACD,OAAO,SAAS,CAAA;QAClB,CAAC,CAAC,CAAA;IACJ,CAAC;IAED,MAAM,SAAS,GAAG,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;IACnD,OAAO,SAAS;SACb,IAAI,CAAC,GAAG,CAAC;SACT,KAAK,CAAC,QAAQ,CAAC;SACf,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,CAAC;SAC5B,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAA;AAChD,CAAC;AAED;;;;;;;;;;GAUG;AACH,SAAgB,UAAU,CAAE,GAAY,EAAE,IAAI,GAAG,CAAC,EAAE,EAAW;IAC7D,OAAO,eAAe,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,MAAM,CAAA;AAC9C,CAAC;AAED;;;;;;;;;;GAUG;AACH,SAAgB,UAAU,CAAE,GAAY,EAAE,IAAI,GAAG,CAAC,EAAE,EAAW;IAC7D,OAAO,eAAe,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,CAAC;SAClC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC;SAClB,MAAM,CAAC,CAAC,IAAI,EAAE,GAAG,EAAE,EAAE,CAAC,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,CAAA;AACzC,CAAC;AAED;;;;;;;;;;GAUG;AACH,SAAgB,QAAQ,CAAE,GAAY,EAAE,IAAI,GAAG,CAAC,EAAE,EAAW;IAC3D,MAAM,KAAK,GAAG,eAAe,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,CAAC,CAAA;IAC5C,OAAO;QACL,KAAK,EAAE,KAAK,CAAC,MAAM;QACnB,KAAK,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,GAAG,EAAE,EAAE,CAAC,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC;KACrE,CAAA;AACH,CAAC","sourcesContent":["/**\n * BEGIN HEADER\n *\n * Contains:        Utility function\n * CVM-Role:        <none>\n * Maintainer:      Hendrik Erz\n * License:         GNU GPL v3\n *\n * Description:     This file contains a utility function to count words.\n *\n * END HEADER\n */\n\nimport type { ASTNode } from '@common/modules/markdown-utils/markdown-ast'\nimport { extractTextnodes } from '@common/modules/markdown-utils'\n\nconst interpunctionRE = /^[-–—.…:;,'%/\\\\_¡!¿?()[\\]{}]+$/\n\n/**\n * Takes an AST, extracts the text nodes and parses them into a pre-cleaned list\n * of words within the document.\n *\n * @param   {ASTNode}   ast   The AST\n * @param   {number}    from  Optional. If given, this function omits any text\n *                            node before this position\n * @param   {number}    to    Optional. If given, this function omits any text\n *                            node after this position.\n *\n * @return  {string[]}        The list of words\n */\nfunction getCleanedWords (ast: ASTNode, from = 0, to?: number): string[] {\n  let textNodes = extractTextnodes(ast)\n  if (from > 0) {\n    textNodes = textNodes.filter(node => node.from >= from || node.to >= from)\n    textNodes.map(node => {\n      if (node.from < from) {\n        node.value = node.value.substring(from - node.from)\n      }\n      return undefined\n    })\n  }\n  if (to !== undefined) {\n    textNodes = textNodes.filter(node => node.to <= to || node.from <= to)\n    textNodes.map(node => {\n      if (node.to > to) {\n        node.value = node.value.substring(0, node.value.length - (node.to - to))\n      }\n      return undefined\n    })\n  }\n\n  const plainText = textNodes.map(node => node.value)\n  return plainText\n    .join(' ')\n    .split(/[\\s ]+/)\n    .filter(w => w.trim() !== '')\n    .filter(word => !interpunctionRE.test(word))\n}\n\n/**\n * Returns an accurate word count based on a parsed AST.\n *\n * @param   {ASTNode}  ast   The parsed AST to use for counting\n * @param   {number}   from  Optional. If given, this function omits any text\n *                           node before this position\n * @param   {number}   to    Optional. If given, this function omits any text\n *                           node after this position.\n *\n * @return  {number}         The number of words in the file.\n */\nexport function countWords (ast: ASTNode, from = 0, to?: number): number {\n  return getCleanedWords(ast, from, to).length\n}\n\n/**\n * Returns an accurate character count (without spaces) based on a parsed AST.\n *\n * @param   {ASTNode}  ast   The parsed AST to use for counting\n * @param   {number}   from  Optional. If given, this function omits any text\n *                           node before this position\n * @param   {number}   to    Optional. If given, this function omits any text\n *                           node after this position.\n *\n * @return  {number}         The number of characters in the file\n */\nexport function countChars (ast: ASTNode, from = 0, to?: number): number {\n  return getCleanedWords(ast, from, to)\n    .map(w => w.length)\n    .reduce((prev, cur) => prev + cur, 0)\n}\n\n/**\n * Counts both words and characters, and characters without spaces.\n *\n * @param   {ASTNode}         ast   The parsed AST to use for counting\n * @param   {number}          from  Optional. If given, this function omits any\n *                                  text node before this position\n * @param   {number}          to    Optional. If given, this function omits any\n *                                  text node after this position.\n *\n * @return  {{words, chars}}        Word and character counts\n */\nexport function countAll (ast: ASTNode, from = 0, to?: number): { words: number, chars: number } {\n  const words = getCleanedWords(ast, from, to)\n  return {\n    words: words.length,\n    chars: words.map(w => w.length).reduce((prev, cur) => prev + cur, 0)\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"38c173e777c5b736ba634da1282d26de3a040ae5","contentHash":"728a5c2d175a108f1d1add230232b620374e0bcf71f433db2fe9ad3842242af0"},"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/app/service-providers/documents/document-tree/index.ts":{"path":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/app/service-providers/documents/document-tree/index.ts","statementMap":{"0":{"start":{"line":4,"column":0},"end":{"line":4,"column":62}},"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":66}},"2":{"start":{"line":6,"column":22},"end":{"line":6,"column":48}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":128}},"4":{"start":{"line":7,"column":86},"end":{"line":7,"column":122}},"5":{"start":{"line":8,"column":27},"end":{"line":8,"column":58}},"6":{"start":{"line":9,"column":0},"end":{"line":9,"column":121}},"7":{"start":{"line":9,"column":80},"end":{"line":9,"column":115}},"8":{"start":{"line":10,"column":29},"end":{"line":10,"column":62}},"9":{"start":{"line":11,"column":0},"end":{"line":11,"column":127}},"10":{"start":{"line":11,"column":82},"end":{"line":11,"column":121}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":7,"column":72},"end":{"line":7,"column":73}},"loc":{"start":{"line":7,"column":84},"end":{"line":7,"column":124}},"line":7},"1":{"name":"(anonymous_1)","decl":{"start":{"line":9,"column":66},"end":{"line":9,"column":67}},"loc":{"start":{"line":9,"column":78},"end":{"line":9,"column":117}},"line":9},"2":{"name":"(anonymous_2)","decl":{"start":{"line":11,"column":68},"end":{"line":11,"column":69}},"loc":{"start":{"line":11,"column":80},"end":{"line":11,"column":123}},"line":11}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":4,"5":1,"6":1,"7":2,"8":1,"9":1,"10":0},"f":{"0":4,"1":2,"2":0},"b":{},"inputSourceMap":{"version":3,"file":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/app/service-providers/documents/document-tree/index.ts","sources":["/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/app/service-providers/documents/document-tree/index.ts"],"names":[],"mappings":";AAAA,gFAAgF;AAChF,0JAA0J;;;AAE1J,iDAA8C;AAArC,6GAAA,YAAY,OAAA;AACrB,2DAA6C;AAApC,4GAAA,MAAM,OAAA;AACf,+DAAiD;AAAxC,gHAAA,QAAQ,OAAA","sourcesContent":["// This file implements a document tree structure to accustom split-views within\n// document windows. Inspiration taken from https://www.warp.dev/blog/using-tree-data-structures-to-implement-terminal-split-panes-more-fun-than-it-sounds\n\nexport { DocumentTree } from './document-tree'\nexport { DTLeaf } from './document-tree-leaf'\nexport { DTBranch } from './document-tree-branch'\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"72c83aea7cf36ea05a983aabadbdfb6defed0db8","contentHash":"7a045bee23f5f31bbcee2e2eb21c887c6aed03c1f13fcb421eb77795b44cb660"},"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/app/service-providers/documents/document-tree/document-tree.ts":{"path":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/app/service-providers/documents/document-tree/document-tree.ts","statementMap":{"0":{"start":{"line":21,"column":0},"end":{"line":21,"column":62}},"1":{"start":{"line":22,"column":0},"end":{"line":22,"column":30}},"2":{"start":{"line":23,"column":31},"end":{"line":23,"column":64}},"3":{"start":{"line":24,"column":29},"end":{"line":24,"column":60}},"4":{"start":{"line":37,"column":8},"end":{"line":37,"column":59}},"5":{"start":{"line":45,"column":8},"end":{"line":45,"column":26}},"6":{"start":{"line":53,"column":8},"end":{"line":53,"column":26}},"7":{"start":{"line":63,"column":8},"end":{"line":65,"column":9}},"8":{"start":{"line":64,"column":12},"end":{"line":64,"column":29}},"9":{"start":{"line":66,"column":8},"end":{"line":66,"column":39}},"10":{"start":{"line":76,"column":8},"end":{"line":81,"column":9}},"11":{"start":{"line":77,"column":12},"end":{"line":77,"column":29}},"12":{"start":{"line":80,"column":12},"end":{"line":80,"column":45}},"13":{"start":{"line":89,"column":8},"end":{"line":94,"column":9}},"14":{"start":{"line":90,"column":12},"end":{"line":90,"column":32}},"15":{"start":{"line":93,"column":12},"end":{"line":93,"column":44}},"16":{"start":{"line":103,"column":8},"end":{"line":108,"column":9}},"17":{"start":{"line":104,"column":12},"end":{"line":104,"column":29}},"18":{"start":{"line":107,"column":12},"end":{"line":107,"column":40}},"19":{"start":{"line":116,"column":8},"end":{"line":119,"column":9}},"20":{"start":{"line":117,"column":28},"end":{"line":117,"column":65}},"21":{"start":{"line":118,"column":12},"end":{"line":118,"column":33}},"22":{"start":{"line":129,"column":8},"end":{"line":131,"column":9}},"23":{"start":{"line":130,"column":12},"end":{"line":130,"column":77}},"24":{"start":{"line":132,"column":8},"end":{"line":134,"column":9}},"25":{"start":{"line":133,"column":12},"end":{"line":133,"column":97}},"26":{"start":{"line":135,"column":8},"end":{"line":137,"column":9}},"27":{"start":{"line":136,"column":12},"end":{"line":136,"column":111}},"28":{"start":{"line":138,"column":24},"end":{"line":138,"column":42}},"29":{"start":{"line":139,"column":8},"end":{"line":144,"column":9}},"30":{"start":{"line":140,"column":12},"end":{"line":140,"column":79}},"31":{"start":{"line":142,"column":13},"end":{"line":144,"column":9}},"32":{"start":{"line":143,"column":12},"end":{"line":143,"column":83}},"33":{"start":{"line":145,"column":8},"end":{"line":145,"column":23}},"34":{"start":{"line":153,"column":8},"end":{"line":153,"column":35}},"35":{"start":{"line":156,"column":0},"end":{"line":156,"column":36}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":36,"column":4},"end":{"line":36,"column":5}},"loc":{"start":{"line":36,"column":18},"end":{"line":38,"column":5}},"line":36},"1":{"name":"(anonymous_1)","decl":{"start":{"line":44,"column":4},"end":{"line":44,"column":5}},"loc":{"start":{"line":44,"column":19},"end":{"line":46,"column":5}},"line":44},"2":{"name":"(anonymous_2)","decl":{"start":{"line":52,"column":4},"end":{"line":52,"column":5}},"loc":{"start":{"line":52,"column":15},"end":{"line":54,"column":5}},"line":52},"3":{"name":"(anonymous_3)","decl":{"start":{"line":62,"column":4},"end":{"line":62,"column":5}},"loc":{"start":{"line":62,"column":17},"end":{"line":67,"column":5}},"line":62},"4":{"name":"(anonymous_4)","decl":{"start":{"line":75,"column":4},"end":{"line":75,"column":5}},"loc":{"start":{"line":75,"column":19},"end":{"line":82,"column":5}},"line":75},"5":{"name":"(anonymous_5)","decl":{"start":{"line":88,"column":4},"end":{"line":88,"column":5}},"loc":{"start":{"line":88,"column":18},"end":{"line":95,"column":5}},"line":88},"6":{"name":"(anonymous_6)","decl":{"start":{"line":102,"column":4},"end":{"line":102,"column":5}},"loc":{"start":{"line":102,"column":20},"end":{"line":109,"column":5}},"line":102},"7":{"name":"(anonymous_7)","decl":{"start":{"line":115,"column":4},"end":{"line":115,"column":5}},"loc":{"start":{"line":115,"column":21},"end":{"line":120,"column":5}},"line":115},"8":{"name":"(anonymous_8)","decl":{"start":{"line":128,"column":4},"end":{"line":128,"column":5}},"loc":{"start":{"line":128,"column":26},"end":{"line":146,"column":5}},"line":128},"9":{"name":"(anonymous_9)","decl":{"start":{"line":152,"column":4},"end":{"line":152,"column":5}},"loc":{"start":{"line":152,"column":13},"end":{"line":154,"column":5}},"line":152}},"branchMap":{"0":{"loc":{"start":{"line":63,"column":8},"end":{"line":65,"column":9}},"type":"if","locations":[{"start":{"line":63,"column":8},"end":{"line":65,"column":9}},{"start":{},"end":{}}],"line":63},"1":{"loc":{"start":{"line":76,"column":8},"end":{"line":81,"column":9}},"type":"if","locations":[{"start":{"line":76,"column":8},"end":{"line":81,"column":9}},{"start":{"line":79,"column":13},"end":{"line":81,"column":9}}],"line":76},"2":{"loc":{"start":{"line":76,"column":12},"end":{"line":76,"column":89}},"type":"binary-expr","locations":[{"start":{"line":76,"column":12},"end":{"line":76,"column":36}},{"start":{"line":76,"column":40},"end":{"line":76,"column":89}}],"line":76},"3":{"loc":{"start":{"line":89,"column":8},"end":{"line":94,"column":9}},"type":"if","locations":[{"start":{"line":89,"column":8},"end":{"line":94,"column":9}},{"start":{"line":92,"column":13},"end":{"line":94,"column":9}}],"line":89},"4":{"loc":{"start":{"line":103,"column":8},"end":{"line":108,"column":9}},"type":"if","locations":[{"start":{"line":103,"column":8},"end":{"line":108,"column":9}},{"start":{"line":106,"column":13},"end":{"line":108,"column":9}}],"line":103},"5":{"loc":{"start":{"line":116,"column":8},"end":{"line":119,"column":9}},"type":"if","locations":[{"start":{"line":116,"column":8},"end":{"line":119,"column":9}},{"start":{},"end":{}}],"line":116},"6":{"loc":{"start":{"line":129,"column":8},"end":{"line":131,"column":9}},"type":"if","locations":[{"start":{"line":129,"column":8},"end":{"line":131,"column":9}},{"start":{},"end":{}}],"line":129},"7":{"loc":{"start":{"line":132,"column":8},"end":{"line":134,"column":9}},"type":"if","locations":[{"start":{"line":132,"column":8},"end":{"line":134,"column":9}},{"start":{},"end":{}}],"line":132},"8":{"loc":{"start":{"line":135,"column":8},"end":{"line":137,"column":9}},"type":"if","locations":[{"start":{"line":135,"column":8},"end":{"line":137,"column":9}},{"start":{},"end":{}}],"line":135},"9":{"loc":{"start":{"line":139,"column":8},"end":{"line":144,"column":9}},"type":"if","locations":[{"start":{"line":139,"column":8},"end":{"line":144,"column":9}},{"start":{"line":142,"column":13},"end":{"line":144,"column":9}}],"line":139},"10":{"loc":{"start":{"line":142,"column":13},"end":{"line":144,"column":9}},"type":"if","locations":[{"start":{"line":142,"column":13},"end":{"line":144,"column":9}},{"start":{},"end":{}}],"line":142}},"s":{"0":1,"1":1,"2":1,"3":1,"4":4,"5":2,"6":5,"7":7,"8":4,"9":3,"10":2,"11":1,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":1,"23":0,"24":1,"25":0,"26":1,"27":0,"28":1,"29":1,"30":1,"31":0,"32":0,"33":1,"34":3,"35":1},"f":{"0":4,"1":2,"2":5,"3":7,"4":2,"5":0,"6":0,"7":0,"8":1,"9":3},"b":{"0":[4,3],"1":[1,1],"2":[2,2],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,1],"7":[0,1],"8":[0,1],"9":[1,0],"10":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/app/service-providers/documents/document-tree/document-tree.ts","sources":["/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/app/service-providers/documents/document-tree/document-tree.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @ignore\n * BEGIN HEADER\n *\n * Contains:        DocumentTree\n * CVM-Role:        Model\n * Maintainer:      Hendrik Ery\n * License:         GNU GPL v3\n *\n * Description:     This file contains the DocumentTree class. It represents the\n *                  editors within the main windows. There is one DocumentTree\n *                  per main window open, and these trees are managed by the\n *                  documents provider. The trees themselves support any\n *                  operation that should be expected from them, such as\n *                  splitting leafs horizontally and vertically, and moving\n *                  stuff around.\n *\n * END HEADER\n */\n\nimport type { LeafNodeJSON, BranchNodeJSON } from '@dts/common/documents'\nimport { DTBranch } from './document-tree-branch'\nimport { DTLeaf } from './document-tree-leaf'\n\n/**\n * This is the root instance of a document tree. It can contain a single node\n * which is either a leaf, if the window does not contain any splits, or a\n * branch.\n */\nexport class DocumentTree {\n  /**\n   * The root node of the tree\n   *\n   * @var {DTBranch|DTLeaf}\n   */\n  private _node: DTBranch|DTLeaf\n\n  /**\n   * Creates a new document tree (i.e. a new Window)\n   *\n   * @return  {DocumentTree}  The new tree\n   */\n  constructor () {\n    this._node = new DTLeaf(this)\n  }\n\n  /**\n   * Sets the root node for the tree\n   *\n   * @param  {DTBranch|DTLeaf}  data  The new node\n   */\n  public set node (data: DTBranch|DTLeaf) {\n    this._node = data\n  }\n\n  /**\n   * Returns the root node for the tree\n   *\n   * @return  {DTBranch|DTLeaf}  The root node\n   */\n  public get node (): DTBranch|DTLeaf {\n    return this._node\n  }\n\n  /**\n   * Finds the leaf with the given ID\n   *\n   * @param   {string}  id  The leaf's ID\n   *\n   * @return  {DTLeaf}      The leaf, or undefined\n   */\n  public findLeaf (id: string): DTLeaf|undefined {\n    if (this._node === undefined) {\n      return undefined\n    }\n\n    return this._node.findLeaf(id)\n  }\n\n  /**\n   * Finds the branch with the given ID\n   *\n   * @param   {string}    id  The branch's ID\n   *\n   * @return  {DTBranch}      The branch, or undefined\n   */\n  public findBranch (id: string): DTBranch|undefined {\n    if (this._node === undefined || this._node instanceof DTLeaf) {\n      return undefined\n    } else {\n      return this._node.findBranch(id)\n    }\n  }\n\n  /**\n   * Returns a list of all leafs in the tree\n   *\n   * @return  {DTLeaf[]}  The leaf list\n   */\n  public getAllLeafs (): DTLeaf[] {\n    if (this._node instanceof DTLeaf) {\n      return [this._node]\n    } else {\n      return this._node.getAllLeafs()\n    }\n  }\n\n  /**\n   * Returns the direction of the root branch, if the tree has a root branch.\n   * Undefined, if the tree has only a leaf.\n   *\n   * @return  {string|undefined}  The direction, or undefined\n   */\n  public get direction (): 'horizontal'|'vertical'|undefined {\n    if (this._node instanceof DTLeaf) {\n      return undefined\n    } else {\n      return this._node.direction\n    }\n  }\n\n  /**\n   * Removes the given node from the list of child nodes\n   *\n   * @param   {DTLeaf|DTBranch}  node  The node to remove\n   */\n  public removeNode (node: DTLeaf|DTBranch): void {\n    if (this._node === node) {\n      const newLeaf = new DTLeaf(this)\n      this._node = newLeaf\n    }\n  }\n\n  /**\n   * Revitalizes a document tree from JSON data\n   *\n   * @param   {any}           data  The data (already de-serialized from string)\n   *\n   * @return  {DocumentTree}        The tree\n   */\n  static fromJSON (data: any): DocumentTree {\n    if (Array.isArray(data)) {\n      throw new Error('Could not instantiate tree: Data was an array')\n    }\n\n    if (data.type === undefined) {\n      throw new Error('Could not instantiate tree: Data missing required property \"type\"')\n    }\n\n    if (![ 'leaf', 'branch' ].includes(data.type)) {\n      throw new Error(`Could not instantiate tree: data.type contained unrecognized value ${data.type as string}`)\n    }\n\n    const newTree = new DocumentTree()\n\n    if (data.type === 'leaf') {\n      newTree.node = DTLeaf.fromJSON(newTree, data)\n    } else if (data.type === 'branch') {\n      newTree.node = DTBranch.fromJSON(newTree, data)\n    }\n\n    return newTree\n  }\n\n  /**\n   * Returns a JSON representation of this tree that can be stringified\n   *\n   * @return  {any}     The tree as JSON\n   */\n  public toJSON (): LeafNodeJSON|BranchNodeJSON {\n    return this._node.toJSON()\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"0baeea8a39315c4f593cd61397e0a96440e273bd","contentHash":"65a2e516ad53969ce30d84c900dd5291890e9b795aa1ac7b8e60ae8c2a7432d0"},"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/app/service-providers/documents/document-tree/document-tree-branch.ts":{"path":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/app/service-providers/documents/document-tree/document-tree-branch.ts","statementMap":{"0":{"start":{"line":21,"column":0},"end":{"line":21,"column":62}},"1":{"start":{"line":22,"column":0},"end":{"line":22,"column":26}},"2":{"start":{"line":23,"column":24},"end":{"line":23,"column":50}},"3":{"start":{"line":24,"column":29},"end":{"line":24,"column":60}},"4":{"start":{"line":25,"column":15},"end":{"line":25,"column":30}},"5":{"start":{"line":35,"column":8},"end":{"line":35,"column":25}},"6":{"start":{"line":36,"column":8},"end":{"line":36,"column":30}},"7":{"start":{"line":37,"column":8},"end":{"line":37,"column":30}},"8":{"start":{"line":38,"column":8},"end":{"line":38,"column":25}},"9":{"start":{"line":39,"column":8},"end":{"line":41,"column":9}},"10":{"start":{"line":40,"column":12},"end":{"line":40,"column":34}},"11":{"start":{"line":43,"column":19},"end":{"line":43,"column":25}},"12":{"start":{"line":44,"column":8},"end":{"line":46,"column":9}},"13":{"start":{"line":45,"column":12},"end":{"line":45,"column":31}},"14":{"start":{"line":47,"column":8},"end":{"line":49,"column":9}},"15":{"start":{"line":48,"column":12},"end":{"line":48,"column":34}},"16":{"start":{"line":50,"column":8},"end":{"line":50,"column":22}},"17":{"start":{"line":58,"column":8},"end":{"line":58,"column":24}},"18":{"start":{"line":66,"column":8},"end":{"line":66,"column":27}},"19":{"start":{"line":74,"column":8},"end":{"line":74,"column":27}},"20":{"start":{"line":83,"column":8},"end":{"line":83,"column":28}},"21":{"start":{"line":84,"column":8},"end":{"line":84,"column":33}},"22":{"start":{"line":92,"column":8},"end":{"line":92,"column":28}},"23":{"start":{"line":100,"column":8},"end":{"line":100,"column":30}},"24":{"start":{"line":108,"column":18},"end":{"line":108,"column":20}},"25":{"start":{"line":109,"column":8},"end":{"line":116,"column":9}},"26":{"start":{"line":110,"column":12},"end":{"line":115,"column":13}},"27":{"start":{"line":111,"column":16},"end":{"line":111,"column":31}},"28":{"start":{"line":114,"column":16},"end":{"line":114,"column":53}},"29":{"start":{"line":117,"column":8},"end":{"line":117,"column":19}},"30":{"start":{"line":128,"column":18},"end":{"line":128,"column":20}},"31":{"start":{"line":129,"column":8},"end":{"line":131,"column":9}},"32":{"start":{"line":130,"column":12},"end":{"line":130,"column":53}},"33":{"start":{"line":132,"column":8},"end":{"line":142,"column":9}},"34":{"start":{"line":133,"column":12},"end":{"line":138,"column":13}},"35":{"start":{"line":134,"column":16},"end":{"line":134,"column":52}},"36":{"start":{"line":137,"column":16},"end":{"line":137,"column":56}},"37":{"start":{"line":141,"column":12},"end":{"line":141,"column":38}},"38":{"start":{"line":143,"column":8},"end":{"line":143,"column":33}},"39":{"start":{"line":151,"column":20},"end":{"line":151,"column":45}},"40":{"start":{"line":152,"column":8},"end":{"line":154,"column":9}},"41":{"start":{"line":153,"column":12},"end":{"line":153,"column":19}},"42":{"start":{"line":155,"column":8},"end":{"line":155,"column":35}},"43":{"start":{"line":158,"column":8},"end":{"line":172,"column":9}},"44":{"start":{"line":159,"column":12},"end":{"line":159,"column":48}},"45":{"start":{"line":160,"column":12},"end":{"line":166,"column":13}},"46":{"start":{"line":161,"column":16},"end":{"line":161,"column":50}},"47":{"start":{"line":164,"column":16},"end":{"line":164,"column":67}},"48":{"start":{"line":165,"column":16},"end":{"line":165,"column":45}},"49":{"start":{"line":168,"column":13},"end":{"line":172,"column":9}},"50":{"start":{"line":171,"column":12},"end":{"line":171,"column":41}},"51":{"start":{"line":173,"column":8},"end":{"line":173,"column":33}},"52":{"start":{"line":183,"column":8},"end":{"line":193,"column":9}},"53":{"start":{"line":184,"column":12},"end":{"line":192,"column":13}},"54":{"start":{"line":185,"column":16},"end":{"line":185,"column":28}},"55":{"start":{"line":187,"column":17},"end":{"line":192,"column":13}},"56":{"start":{"line":188,"column":30},"end":{"line":188,"column":47}},"57":{"start":{"line":189,"column":16},"end":{"line":191,"column":17}},"58":{"start":{"line":190,"column":20},"end":{"line":190,"column":33}},"59":{"start":{"line":203,"column":8},"end":{"line":205,"column":9}},"60":{"start":{"line":204,"column":12},"end":{"line":204,"column":24}},"61":{"start":{"line":206,"column":8},"end":{"line":213,"column":9}},"62":{"start":{"line":207,"column":12},"end":{"line":212,"column":13}},"63":{"start":{"line":208,"column":30},"end":{"line":208,"column":49}},"64":{"start":{"line":209,"column":16},"end":{"line":211,"column":17}},"65":{"start":{"line":210,"column":20},"end":{"line":210,"column":33}},"66":{"start":{"line":221,"column":8},"end":{"line":221,"column":31}},"67":{"start":{"line":228,"column":29},"end":{"line":228,"column":33}},"68":{"start":{"line":230,"column":8},"end":{"line":232,"column":9}},"69":{"start":{"line":231,"column":12},"end":{"line":231,"column":35}},"70":{"start":{"line":234,"column":26},"end":{"line":234,"column":72}},"71":{"start":{"line":234,"column":59},"end":{"line":234,"column":68}},"72":{"start":{"line":235,"column":8},"end":{"line":237,"column":9}},"73":{"start":{"line":236,"column":12},"end":{"line":236,"column":35}},"74":{"start":{"line":238,"column":8},"end":{"line":240,"column":9}},"75":{"start":{"line":239,"column":12},"end":{"line":239,"column":19}},"76":{"start":{"line":242,"column":21},"end":{"line":242,"column":45}},"77":{"start":{"line":243,"column":8},"end":{"line":243,"column":25}},"78":{"start":{"line":244,"column":8},"end":{"line":246,"column":9}},"79":{"start":{"line":244,"column":21},"end":{"line":244,"column":22}},"80":{"start":{"line":245,"column":12},"end":{"line":245,"column":35}},"81":{"start":{"line":257,"column":8},"end":{"line":259,"column":9}},"82":{"start":{"line":258,"column":12},"end":{"line":258,"column":96}},"83":{"start":{"line":260,"column":48},"end":{"line":260,"column":56}},"84":{"start":{"line":261,"column":8},"end":{"line":263,"column":9}},"85":{"start":{"line":262,"column":12},"end":{"line":262,"column":101}},"86":{"start":{"line":264,"column":8},"end":{"line":266,"column":9}},"87":{"start":{"line":265,"column":12},"end":{"line":265,"column":93}},"88":{"start":{"line":267,"column":8},"end":{"line":269,"column":9}},"89":{"start":{"line":268,"column":12},"end":{"line":268,"column":103}},"90":{"start":{"line":273,"column":26},"end":{"line":273,"column":61}},"91":{"start":{"line":274,"column":8},"end":{"line":281,"column":9}},"92":{"start":{"line":275,"column":12},"end":{"line":280,"column":13}},"93":{"start":{"line":276,"column":16},"end":{"line":276,"column":92}},"94":{"start":{"line":278,"column":17},"end":{"line":280,"column":13}},"95":{"start":{"line":279,"column":16},"end":{"line":279,"column":73}},"96":{"start":{"line":284,"column":8},"end":{"line":286,"column":9}},"97":{"start":{"line":284,"column":53},"end":{"line":284,"column":74}},"98":{"start":{"line":285,"column":12},"end":{"line":285,"column":45}},"99":{"start":{"line":287,"column":8},"end":{"line":287,"column":25}},"100":{"start":{"line":295,"column":21},"end":{"line":301,"column":9}},"101":{"start":{"line":302,"column":8},"end":{"line":304,"column":9}},"102":{"start":{"line":303,"column":12},"end":{"line":303,"column":43}},"103":{"start":{"line":305,"column":8},"end":{"line":305,"column":20}},"104":{"start":{"line":308,"column":0},"end":{"line":308,"column":28}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":34,"column":4},"end":{"line":34,"column":5}},"loc":{"start":{"line":34,"column":52},"end":{"line":51,"column":5}},"line":34},"1":{"name":"(anonymous_1)","decl":{"start":{"line":57,"column":4},"end":{"line":57,"column":5}},"loc":{"start":{"line":57,"column":13},"end":{"line":59,"column":5}},"line":57},"2":{"name":"(anonymous_2)","decl":{"start":{"line":65,"column":4},"end":{"line":65,"column":5}},"loc":{"start":{"line":65,"column":16},"end":{"line":67,"column":5}},"line":65},"3":{"name":"(anonymous_3)","decl":{"start":{"line":73,"column":4},"end":{"line":73,"column":5}},"loc":{"start":{"line":73,"column":16},"end":{"line":75,"column":5}},"line":73},"4":{"name":"(anonymous_4)","decl":{"start":{"line":82,"column":4},"end":{"line":82,"column":5}},"loc":{"start":{"line":82,"column":21},"end":{"line":85,"column":5}},"line":82},"5":{"name":"(anonymous_5)","decl":{"start":{"line":91,"column":4},"end":{"line":91,"column":5}},"loc":{"start":{"line":91,"column":17},"end":{"line":93,"column":5}},"line":91},"6":{"name":"(anonymous_6)","decl":{"start":{"line":99,"column":4},"end":{"line":99,"column":5}},"loc":{"start":{"line":99,"column":23},"end":{"line":101,"column":5}},"line":99},"7":{"name":"(anonymous_7)","decl":{"start":{"line":107,"column":4},"end":{"line":107,"column":5}},"loc":{"start":{"line":107,"column":18},"end":{"line":118,"column":5}},"line":107},"8":{"name":"(anonymous_8)","decl":{"start":{"line":127,"column":4},"end":{"line":127,"column":5}},"loc":{"start":{"line":127,"column":47},"end":{"line":144,"column":5}},"line":127},"9":{"name":"(anonymous_9)","decl":{"start":{"line":150,"column":4},"end":{"line":150,"column":5}},"loc":{"start":{"line":150,"column":21},"end":{"line":174,"column":5}},"line":150},"10":{"name":"(anonymous_10)","decl":{"start":{"line":182,"column":4},"end":{"line":182,"column":5}},"loc":{"start":{"line":182,"column":17},"end":{"line":194,"column":5}},"line":182},"11":{"name":"(anonymous_11)","decl":{"start":{"line":202,"column":4},"end":{"line":202,"column":5}},"loc":{"start":{"line":202,"column":19},"end":{"line":214,"column":5}},"line":202},"12":{"name":"(anonymous_12)","decl":{"start":{"line":220,"column":4},"end":{"line":220,"column":5}},"loc":{"start":{"line":220,"column":20},"end":{"line":222,"column":5}},"line":220},"13":{"name":"(anonymous_13)","decl":{"start":{"line":227,"column":4},"end":{"line":227,"column":5}},"loc":{"start":{"line":227,"column":24},"end":{"line":247,"column":5}},"line":227},"14":{"name":"(anonymous_14)","decl":{"start":{"line":234,"column":45},"end":{"line":234,"column":46}},"loc":{"start":{"line":234,"column":59},"end":{"line":234,"column":68}},"line":234},"15":{"name":"(anonymous_15)","decl":{"start":{"line":256,"column":4},"end":{"line":256,"column":5}},"loc":{"start":{"line":256,"column":38},"end":{"line":288,"column":5}},"line":256},"16":{"name":"(anonymous_16)","decl":{"start":{"line":284,"column":48},"end":{"line":284,"column":49}},"loc":{"start":{"line":284,"column":53},"end":{"line":284,"column":74}},"line":284},"17":{"name":"(anonymous_17)","decl":{"start":{"line":294,"column":4},"end":{"line":294,"column":5}},"loc":{"start":{"line":294,"column":13},"end":{"line":306,"column":5}},"line":294}},"branchMap":{"0":{"loc":{"start":{"line":34,"column":29},"end":{"line":34,"column":50}},"type":"default-arg","locations":[{"start":{"line":34,"column":34},"end":{"line":34,"column":50}}],"line":34},"1":{"loc":{"start":{"line":39,"column":8},"end":{"line":41,"column":9}},"type":"if","locations":[{"start":{"line":39,"column":8},"end":{"line":41,"column":9}},{"start":{},"end":{}}],"line":39},"2":{"loc":{"start":{"line":110,"column":12},"end":{"line":115,"column":13}},"type":"if","locations":[{"start":{"line":110,"column":12},"end":{"line":115,"column":13}},{"start":{"line":113,"column":17},"end":{"line":115,"column":13}}],"line":110},"3":{"loc":{"start":{"line":129,"column":8},"end":{"line":131,"column":9}},"type":"if","locations":[{"start":{"line":129,"column":8},"end":{"line":131,"column":9}},{"start":{},"end":{}}],"line":129},"4":{"loc":{"start":{"line":132,"column":8},"end":{"line":142,"column":9}},"type":"if","locations":[{"start":{"line":132,"column":8},"end":{"line":142,"column":9}},{"start":{"line":140,"column":13},"end":{"line":142,"column":9}}],"line":132},"5":{"loc":{"start":{"line":133,"column":12},"end":{"line":138,"column":13}},"type":"if","locations":[{"start":{"line":133,"column":12},"end":{"line":138,"column":13}},{"start":{"line":136,"column":17},"end":{"line":138,"column":13}}],"line":133},"6":{"loc":{"start":{"line":152,"column":8},"end":{"line":154,"column":9}},"type":"if","locations":[{"start":{"line":152,"column":8},"end":{"line":154,"column":9}},{"start":{},"end":{}}],"line":152},"7":{"loc":{"start":{"line":158,"column":8},"end":{"line":172,"column":9}},"type":"if","locations":[{"start":{"line":158,"column":8},"end":{"line":172,"column":9}},{"start":{"line":168,"column":13},"end":{"line":172,"column":9}}],"line":158},"8":{"loc":{"start":{"line":158,"column":12},"end":{"line":158,"column":93}},"type":"binary-expr","locations":[{"start":{"line":158,"column":12},"end":{"line":158,"column":36}},{"start":{"line":158,"column":40},"end":{"line":158,"column":93}}],"line":158},"9":{"loc":{"start":{"line":160,"column":12},"end":{"line":166,"column":13}},"type":"if","locations":[{"start":{"line":160,"column":12},"end":{"line":166,"column":13}},{"start":{"line":163,"column":17},"end":{"line":166,"column":13}}],"line":160},"10":{"loc":{"start":{"line":168,"column":13},"end":{"line":172,"column":9}},"type":"if","locations":[{"start":{"line":168,"column":13},"end":{"line":172,"column":9}},{"start":{},"end":{}}],"line":168},"11":{"loc":{"start":{"line":184,"column":12},"end":{"line":192,"column":13}},"type":"if","locations":[{"start":{"line":184,"column":12},"end":{"line":192,"column":13}},{"start":{"line":187,"column":17},"end":{"line":192,"column":13}}],"line":184},"12":{"loc":{"start":{"line":184,"column":16},"end":{"line":184,"column":77}},"type":"binary-expr","locations":[{"start":{"line":184,"column":16},"end":{"line":184,"column":59}},{"start":{"line":184,"column":63},"end":{"line":184,"column":77}}],"line":184},"13":{"loc":{"start":{"line":187,"column":17},"end":{"line":192,"column":13}},"type":"if","locations":[{"start":{"line":187,"column":17},"end":{"line":192,"column":13}},{"start":{},"end":{}}],"line":187},"14":{"loc":{"start":{"line":189,"column":16},"end":{"line":191,"column":17}},"type":"if","locations":[{"start":{"line":189,"column":16},"end":{"line":191,"column":17}},{"start":{},"end":{}}],"line":189},"15":{"loc":{"start":{"line":203,"column":8},"end":{"line":205,"column":9}},"type":"if","locations":[{"start":{"line":203,"column":8},"end":{"line":205,"column":9}},{"start":{},"end":{}}],"line":203},"16":{"loc":{"start":{"line":207,"column":12},"end":{"line":212,"column":13}},"type":"if","locations":[{"start":{"line":207,"column":12},"end":{"line":212,"column":13}},{"start":{},"end":{}}],"line":207},"17":{"loc":{"start":{"line":209,"column":16},"end":{"line":211,"column":17}},"type":"if","locations":[{"start":{"line":209,"column":16},"end":{"line":211,"column":17}},{"start":{},"end":{}}],"line":209},"18":{"loc":{"start":{"line":230,"column":8},"end":{"line":232,"column":9}},"type":"if","locations":[{"start":{"line":230,"column":8},"end":{"line":232,"column":9}},{"start":{},"end":{}}],"line":230},"19":{"loc":{"start":{"line":235,"column":8},"end":{"line":237,"column":9}},"type":"if","locations":[{"start":{"line":235,"column":8},"end":{"line":237,"column":9}},{"start":{},"end":{}}],"line":235},"20":{"loc":{"start":{"line":238,"column":8},"end":{"line":240,"column":9}},"type":"if","locations":[{"start":{"line":238,"column":8},"end":{"line":240,"column":9}},{"start":{},"end":{}}],"line":238},"21":{"loc":{"start":{"line":257,"column":8},"end":{"line":259,"column":9}},"type":"if","locations":[{"start":{"line":257,"column":8},"end":{"line":259,"column":9}},{"start":{},"end":{}}],"line":257},"22":{"loc":{"start":{"line":261,"column":8},"end":{"line":263,"column":9}},"type":"if","locations":[{"start":{"line":261,"column":8},"end":{"line":263,"column":9}},{"start":{},"end":{}}],"line":261},"23":{"loc":{"start":{"line":261,"column":12},"end":{"line":261,"column":101}},"type":"binary-expr","locations":[{"start":{"line":261,"column":12},"end":{"line":261,"column":41}},{"start":{"line":261,"column":46},"end":{"line":261,"column":72}},{"start":{"line":261,"column":76},"end":{"line":261,"column":100}}],"line":261},"24":{"loc":{"start":{"line":264,"column":8},"end":{"line":266,"column":9}},"type":"if","locations":[{"start":{"line":264,"column":8},"end":{"line":266,"column":9}},{"start":{},"end":{}}],"line":264},"25":{"loc":{"start":{"line":267,"column":8},"end":{"line":269,"column":9}},"type":"if","locations":[{"start":{"line":267,"column":8},"end":{"line":269,"column":9}},{"start":{},"end":{}}],"line":267},"26":{"loc":{"start":{"line":275,"column":12},"end":{"line":280,"column":13}},"type":"if","locations":[{"start":{"line":275,"column":12},"end":{"line":280,"column":13}},{"start":{"line":278,"column":17},"end":{"line":280,"column":13}}],"line":275},"27":{"loc":{"start":{"line":278,"column":17},"end":{"line":280,"column":13}},"type":"if","locations":[{"start":{"line":278,"column":17},"end":{"line":280,"column":13}},{"start":{},"end":{}}],"line":278},"28":{"loc":{"start":{"line":284,"column":8},"end":{"line":286,"column":9}},"type":"if","locations":[{"start":{"line":284,"column":8},"end":{"line":286,"column":9}},{"start":{},"end":{}}],"line":284},"29":{"loc":{"start":{"line":284,"column":12},"end":{"line":284,"column":108}},"type":"binary-expr","locations":[{"start":{"line":284,"column":12},"end":{"line":284,"column":32}},{"start":{"line":284,"column":36},"end":{"line":284,"column":75}},{"start":{"line":284,"column":79},"end":{"line":284,"column":108}}],"line":284}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":2,"6":2,"7":2,"8":2,"9":2,"10":0,"11":2,"12":2,"13":1,"14":2,"15":0,"16":2,"17":2,"18":6,"19":0,"20":0,"21":0,"22":4,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":5,"31":5,"32":1,"33":5,"34":1,"35":0,"36":1,"37":4,"38":5,"39":1,"40":1,"41":0,"42":1,"43":1,"44":0,"45":0,"46":0,"47":0,"48":0,"49":1,"50":0,"51":1,"52":1,"53":2,"54":0,"55":2,"56":0,"57":0,"58":0,"59":1,"60":0,"61":1,"62":2,"63":0,"64":0,"65":0,"66":1,"67":6,"68":6,"69":6,"70":6,"71":7,"72":6,"73":2,"74":6,"75":0,"76":6,"77":6,"78":6,"79":6,"80":11,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":2,"101":2,"102":4,"103":2,"104":1},"f":{"0":2,"1":2,"2":6,"3":0,"4":0,"5":4,"6":0,"7":0,"8":5,"9":1,"10":1,"11":1,"12":1,"13":6,"14":7,"15":0,"16":0,"17":2},"b":{"0":[2],"1":[0,2],"2":[0,0],"3":[1,4],"4":[1,4],"5":[0,1],"6":[0,1],"7":[0,1],"8":[1,0],"9":[0,0],"10":[0,1],"11":[0,2],"12":[2,2],"13":[0,2],"14":[0,0],"15":[0,1],"16":[0,2],"17":[0,0],"18":[6,0],"19":[2,4],"20":[0,6],"21":[0,0],"22":[0,0],"23":[0,0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0,0]},"inputSourceMap":{"version":3,"file":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/app/service-providers/documents/document-tree/document-tree-branch.ts","sources":["/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/app/service-providers/documents/document-tree/document-tree-branch.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @ignore\n * BEGIN HEADER\n *\n * Contains:        DocumentTreeBranch\n * CVM-Role:        Model\n * Maintainer:      Hendrik Erz\n * License:         GNU GPL v3\n *\n * Description:     This class represents a branch of a document tree. A\n *                  DTBranch can contain a theoretically unlimited number of\n *                  branches and leafs, in either horizontal or vertical\n *                  direction. A branch is used to split up the various editors\n *                  within a main editor window. They manage anything required\n *                  to customize and modify those branches, such as the relative\n *                  sizes of all of its children.\n *\n * END HEADER\n */\n\nimport type { BranchNodeJSON } from '@dts/common/documents'\nimport { DocumentTree } from './document-tree'\nimport { DTLeaf } from './document-tree-leaf'\nimport { v4 as uuid4 } from 'uuid'\n\nexport class DTBranch {\n  private readonly _nodes: Array<DTLeaf|DTBranch>\n  private readonly _direction: 'horizontal'|'vertical'\n  private _parent: DocumentTree|DTBranch\n  private _sizes: number[]\n  private readonly _id: string\n\n  /**\n   * Creates a new Branch object. By default it will be filled with no nodes.\n   *\n   * @param   {DocumentTree|DTBranch}  parent    The parent for this branch\n   * @param   {string}                 dir       The direction, can be horizontal or vertical\n   * @param   {string}                 id        An optional ID, may be changed to ensure uniqueness\n   */\n  constructor (parent: DocumentTree|DTBranch, dir: 'horizontal'|'vertical', id: string = uuid4()) {\n    this._nodes = []\n    this._parent = parent\n    this._direction = dir\n    this._sizes = []\n\n    if (typeof id !== 'string') {\n      id = uuid4()\n    }\n\n    // Ensure a unique ID\n    let root = parent\n    while (!(root instanceof DocumentTree)) {\n      root = root.parent\n    }\n\n    while (root.findBranch(id) !== undefined) {\n      id = uuid4()\n    }\n\n    this._id = id\n  }\n\n  /**\n   * Returns the readonly ID for this branch\n   *\n   * @return  {string}  The ID\n   */\n  public get id (): string {\n    return this._id\n  }\n\n  /**\n   * Returns a list of all child nodes\n   *\n   * @return  {Array<DTLeaf|DTBranch>}  The child node list\n   */\n  public get nodes (): Array<DTLeaf|DTBranch> {\n    return this._nodes\n  }\n\n  /**\n   * Returns the sizes currently belonging to this branch\n   *\n   * @return  {number[]}  The size array\n   */\n  public get sizes (): number[] {\n    return this._sizes\n  }\n\n  /**\n   * Provides a new set of sizes for the node. This setter will ensure the sizes\n   * are sane afterwards.\n   *\n   * @param   {number[]}  sizes  The new size set\n   */\n  public set sizes (sizes: number[]) {\n    this._sizes = sizes\n    this.ensureProperSizes()\n  }\n\n  /**\n   * Returns the current parent of this branch\n   *\n   * @return  {DTBranch|DocumentTree}  The parent\n   */\n  public get parent (): DTBranch|DocumentTree {\n    return this._parent\n  }\n\n  /**\n   * Exchanges this branch's parent\n   *\n   * @param   {DTBranch|DocumentTree}  parent  The new parent\n   */\n  public set parent (parent: DTBranch|DocumentTree) {\n    this._parent = parent\n  }\n\n  /**\n   * Returns a list of all leafs in the tree\n   *\n   * @return  {DTLeaf[]}  The leaf list\n   */\n  public getAllLeafs (): DTLeaf[] {\n    let ret: DTLeaf[] = []\n\n    for (const node of this._nodes) {\n      if (node instanceof DTLeaf) {\n        ret.push(node)\n      } else {\n        ret = ret.concat(node.getAllLeafs())\n      }\n    }\n\n    return ret\n  }\n\n  /**\n   * Adds the provided node into the list of children nodes\n   *\n   * @param   {DTLeaf|DTBranch}  content        The node to be added\n   * @param   {DTLeaf|DTBranch}  referenceNode  An optional reference node\n   * @param   {before|after}     insertion      Where to insert content based on\n   *                                            referenceNode, defaults to after\n   */\n  public addNode (content: DTLeaf|DTBranch, referenceNode?: DTLeaf|DTBranch, insertion?: 'before'|'after'): void {\n    let idx = -1\n    if (referenceNode !== undefined) {\n      idx = this._nodes.indexOf(referenceNode)\n    }\n\n    if (idx > -1) {\n      if (insertion === 'before') {\n        this._nodes.splice(idx, 0, content)\n      } else {\n        this._nodes.splice(idx + 1, 0, content)\n      }\n    } else {\n      this._nodes.push(content)\n    }\n    this.ensureProperSizes()\n  }\n\n  /**\n   * Removes the given node from the list of child nodes\n   *\n   * @param   {DTLeaf|DTBranch}  node  The node to remove\n   */\n  public removeNode (node: DTLeaf|DTBranch): void {\n    const idx = this._nodes.indexOf(node)\n    if (idx === -1) {\n      return\n    }\n\n    this._nodes.splice(idx, 1)\n\n    // If we're now left with just a single leaf, remove this branch and\n    // attach the remaining node itself to the parent.\n    if (this._nodes.length === 1 && this._nodes[0] instanceof DTLeaf) {\n      this._nodes[0].parent = this.parent\n      if (this.parent instanceof DocumentTree) {\n        this.parent.node = this._nodes[0]\n      } else {\n        this.parent.addNode(this._nodes[0], this, 'after')\n        this.parent.removeNode(this)\n      }\n    } else if (this._nodes.length === 0) {\n      // Similarly, if we've just dropped the last node, we can just remove\n      // this thing from its parent.\n      this.parent.removeNode(this)\n    }\n\n    this.ensureProperSizes()\n  }\n\n  /**\n   * Finds the leaf with the given ID\n   *\n   * @param   {string}  id  The leaf's ID\n   *\n   * @return  {DTLeaf}      The leaf, or undefined\n   */\n  public findLeaf (id: string): DTLeaf|undefined {\n    for (const node of this._nodes) {\n      if (node instanceof DTLeaf && node.id === id) {\n        return node\n      } else if (node instanceof DTBranch) {\n        const found = node.findLeaf(id)\n        if (found !== undefined) {\n          return found\n        }\n      }\n    }\n  }\n\n  /**\n   * Finds the branch with the given ID\n   *\n   * @param   {string}    id  The branch's ID\n   *\n   * @return  {DTBranch}      The branch, or undefined\n   */\n  public findBranch (id: string): DTBranch|undefined {\n    if (id === this._id) {\n      return this\n    }\n\n    for (const node of this._nodes) {\n      if (node instanceof DTBranch) {\n        const found = node.findBranch(id)\n        if (found !== undefined) {\n          return found\n        }\n      }\n    }\n  }\n\n  /**\n   * Returns the direction for this branch\n   *\n   * @return  {string}  The direction\n   */\n  public get direction (): 'horizontal'|'vertical' {\n    return this._direction\n  }\n\n  /**\n   * A utility function that checks whether the size values are all sane, and,\n   * if not, recomputes them\n   */\n  private ensureProperSizes (): void {\n    let hasProperSizes = true\n\n    // The size array must be of the same length as our nodes\n    if (this._nodes.length !== this._sizes.length) {\n      hasProperSizes = false\n    }\n\n    // Also, all of this must sum up to 100 (percent)\n    const totalSize = this._sizes.reduce((acc, val) => acc + val, 0)\n    if (Math.round(totalSize) !== 100) {\n      hasProperSizes = false\n    }\n\n    if (hasProperSizes) {\n      return // All good\n    }\n\n    // Reset the sizes\n    const size = 100 / this._nodes.length\n    this._sizes = []\n    for (let i = 0; i < this._nodes.length; i++) {\n      this._sizes.push(size)\n    }\n  }\n\n  /**\n   * Create a new Branch from the given JSON data\n   *\n   * @param   {DocumentTree|DTBranch}  parent    The parent node\n   * @param   {any}                    nodeData  The JSON data to fill the branch with\n   *\n   * @return  {Promise<DTBranch>}                 The new branch\n   */\n  static fromJSON (parent: DocumentTree|DTBranch, nodeData: any): DTBranch {\n    if (typeof nodeData !== 'object') {\n      throw new Error('Could not instantiate DTBranch: Provided JSON was not an object.')\n    }\n\n    const { direction, id, nodes, sizes } = nodeData\n\n    if (typeof direction !== 'string' || (direction !== 'horizontal' && direction !== 'vertical')) {\n      throw new Error(`Could not instantiate DTBranch: Invalid split direction: ${direction}`)\n    }\n\n    if (typeof id !== 'string') {\n      throw new Error(`Could not instantiate DTBranch: ID was invalid: ${String(id)}`)\n    }\n\n    if (!Array.isArray(nodes)) {\n      throw new Error(`Could not instantiate DTBranch: Nodes was not an array: ${typeof nodes}`)\n    }\n\n    // NOTE: After this point, we don't throw any more errors, since the branch\n    // can be successfully instantiated. If any of the sub-nodes experience an\n    // error, this will propagate through this function to the caller.\n    const newBranch = new DTBranch(parent, direction, id)\n\n    for (const subNode of nodes) {\n      if (subNode.type === 'leaf') {\n        newBranch.addNode(DTLeaf.fromJSON(newBranch, subNode))\n      } else if (subNode.type === 'branch') {\n        newBranch.addNode(DTBranch.fromJSON(newBranch, subNode))\n      }\n    }\n\n    // We don't have to throw an error if the sizes are wrong, since then the\n    // leafs/branches are simply equally large.\n    if (Array.isArray(sizes) && sizes.every(x => typeof x === 'number') && sizes.length === nodes.length) {\n      newBranch.sizes = nodeData.sizes\n    }\n\n    return newBranch\n  }\n\n  /**\n   * Creates a JSON serializable representation for this branch\n   *\n   * @return  {BranchNodeJSON}  The JSON data\n   */\n  public toJSON (): BranchNodeJSON {\n    const json: BranchNodeJSON = {\n      type: 'branch',\n      id: this._id,\n      direction: this._direction,\n      sizes: this._sizes,\n      nodes: []\n    }\n\n    for (const node of this._nodes) {\n      json.nodes.push(node.toJSON())\n    }\n\n    return json\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"5f24fec0952c87219868a88589e9e588eb265292","contentHash":"88452d0e9c0996508308023debee426ba9a1a979161788cc264256e112968bf1"},"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/app/service-providers/documents/document-tree/document-tree-leaf.ts":{"path":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/app/service-providers/documents/document-tree/document-tree-leaf.ts","statementMap":{"0":{"start":{"line":19,"column":22},"end":{"line":21,"column":1}},"1":{"start":{"line":20,"column":4},"end":{"line":20,"column":62}},"2":{"start":{"line":22,"column":0},"end":{"line":22,"column":62}},"3":{"start":{"line":23,"column":0},"end":{"line":23,"column":24}},"4":{"start":{"line":24,"column":18},"end":{"line":24,"column":66}},"5":{"start":{"line":25,"column":15},"end":{"line":25,"column":30}},"6":{"start":{"line":26,"column":24},"end":{"line":26,"column":50}},"7":{"start":{"line":27,"column":31},"end":{"line":27,"column":64}},"8":{"start":{"line":28,"column":22},"end":{"line":28,"column":46}},"9":{"start":{"line":37,"column":8},"end":{"line":37,"column":30}},"10":{"start":{"line":38,"column":8},"end":{"line":38,"column":58}},"11":{"start":{"line":39,"column":8},"end":{"line":41,"column":9}},"12":{"start":{"line":40,"column":12},"end":{"line":40,"column":34}},"13":{"start":{"line":43,"column":19},"end":{"line":43,"column":25}},"14":{"start":{"line":44,"column":8},"end":{"line":46,"column":9}},"15":{"start":{"line":45,"column":12},"end":{"line":45,"column":31}},"16":{"start":{"line":47,"column":8},"end":{"line":49,"column":9}},"17":{"start":{"line":48,"column":12},"end":{"line":48,"column":34}},"18":{"start":{"line":50,"column":8},"end":{"line":50,"column":22}},"19":{"start":{"line":58,"column":8},"end":{"line":58,"column":32}},"20":{"start":{"line":66,"column":8},"end":{"line":66,"column":24}},"21":{"start":{"line":74,"column":8},"end":{"line":74,"column":28}},"22":{"start":{"line":82,"column":8},"end":{"line":82,"column":30}},"23":{"start":{"line":95,"column":8},"end":{"line":133,"column":9}},"24":{"start":{"line":96,"column":12},"end":{"line":96,"column":82}},"25":{"start":{"line":97,"column":30},"end":{"line":97,"column":90}},"26":{"start":{"line":98,"column":28},"end":{"line":98,"column":49}},"27":{"start":{"line":99,"column":12},"end":{"line":106,"column":13}},"28":{"start":{"line":100,"column":16},"end":{"line":100,"column":43}},"29":{"start":{"line":101,"column":16},"end":{"line":101,"column":40}},"30":{"start":{"line":104,"column":16},"end":{"line":104,"column":40}},"31":{"start":{"line":105,"column":16},"end":{"line":105,"column":43}},"32":{"start":{"line":107,"column":12},"end":{"line":107,"column":42}},"33":{"start":{"line":108,"column":12},"end":{"line":108,"column":37}},"34":{"start":{"line":109,"column":12},"end":{"line":109,"column":27}},"35":{"start":{"line":111,"column":13},"end":{"line":133,"column":9}},"36":{"start":{"line":113,"column":28},"end":{"line":113,"column":52}},"37":{"start":{"line":114,"column":12},"end":{"line":114,"column":59}},"38":{"start":{"line":115,"column":12},"end":{"line":115,"column":27}},"39":{"start":{"line":119,"column":30},"end":{"line":119,"column":90}},"40":{"start":{"line":120,"column":28},"end":{"line":120,"column":49}},"41":{"start":{"line":121,"column":12},"end":{"line":128,"column":13}},"42":{"start":{"line":122,"column":16},"end":{"line":122,"column":43}},"43":{"start":{"line":123,"column":16},"end":{"line":123,"column":40}},"44":{"start":{"line":126,"column":16},"end":{"line":126,"column":40}},"45":{"start":{"line":127,"column":16},"end":{"line":127,"column":43}},"46":{"start":{"line":129,"column":12},"end":{"line":129,"column":59}},"47":{"start":{"line":130,"column":12},"end":{"line":130,"column":42}},"48":{"start":{"line":131,"column":12},"end":{"line":131,"column":37}},"49":{"start":{"line":132,"column":12},"end":{"line":132,"column":27}},"50":{"start":{"line":143,"column":8},"end":{"line":145,"column":9}},"51":{"start":{"line":144,"column":12},"end":{"line":144,"column":24}},"52":{"start":{"line":157,"column":8},"end":{"line":159,"column":9}},"53":{"start":{"line":158,"column":12},"end":{"line":158,"column":94}},"54":{"start":{"line":160,"column":34},"end":{"line":160,"column":42}},"55":{"start":{"line":161,"column":8},"end":{"line":163,"column":9}},"56":{"start":{"line":162,"column":12},"end":{"line":162,"column":91}},"57":{"start":{"line":164,"column":8},"end":{"line":166,"column":9}},"58":{"start":{"line":165,"column":12},"end":{"line":165,"column":109}},"59":{"start":{"line":170,"column":21},"end":{"line":170,"column":43}},"60":{"start":{"line":171,"column":8},"end":{"line":186,"column":9}},"61":{"start":{"line":172,"column":12},"end":{"line":174,"column":13}},"62":{"start":{"line":173,"column":16},"end":{"line":173,"column":25}},"63":{"start":{"line":175,"column":37},"end":{"line":175,"column":41}},"64":{"start":{"line":176,"column":12},"end":{"line":178,"column":13}},"65":{"start":{"line":177,"column":16},"end":{"line":177,"column":25}},"66":{"start":{"line":179,"column":28},"end":{"line":179,"column":61}},"67":{"start":{"line":180,"column":12},"end":{"line":185,"column":13}},"68":{"start":{"line":181,"column":16},"end":{"line":181,"column":58}},"69":{"start":{"line":188,"column":27},"end":{"line":188,"column":209}},"70":{"start":{"line":188,"column":75},"end":{"line":188,"column":167}},"71":{"start":{"line":189,"column":8},"end":{"line":189,"column":44}},"72":{"start":{"line":192,"column":8},"end":{"line":194,"column":9}},"73":{"start":{"line":193,"column":12},"end":{"line":193,"column":62}},"74":{"start":{"line":195,"column":8},"end":{"line":195,"column":20}},"75":{"start":{"line":203,"column":8},"end":{"line":207,"column":10}},"76":{"start":{"line":210,"column":0},"end":{"line":210,"column":24}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":19,"column":56},"end":{"line":19,"column":57}},"loc":{"start":{"line":19,"column":71},"end":{"line":21,"column":1}},"line":19},"1":{"name":"(anonymous_1)","decl":{"start":{"line":36,"column":4},"end":{"line":36,"column":5}},"loc":{"start":{"line":36,"column":47},"end":{"line":51,"column":5}},"line":36},"2":{"name":"(anonymous_2)","decl":{"start":{"line":57,"column":4},"end":{"line":57,"column":5}},"loc":{"start":{"line":57,"column":17},"end":{"line":59,"column":5}},"line":57},"3":{"name":"(anonymous_3)","decl":{"start":{"line":65,"column":4},"end":{"line":65,"column":5}},"loc":{"start":{"line":65,"column":13},"end":{"line":67,"column":5}},"line":65},"4":{"name":"(anonymous_4)","decl":{"start":{"line":73,"column":4},"end":{"line":73,"column":5}},"loc":{"start":{"line":73,"column":17},"end":{"line":75,"column":5}},"line":73},"5":{"name":"(anonymous_5)","decl":{"start":{"line":81,"column":4},"end":{"line":81,"column":5}},"loc":{"start":{"line":81,"column":23},"end":{"line":83,"column":5}},"line":81},"6":{"name":"(anonymous_6)","decl":{"start":{"line":94,"column":4},"end":{"line":94,"column":5}},"loc":{"start":{"line":94,"column":32},"end":{"line":134,"column":5}},"line":94},"7":{"name":"(anonymous_7)","decl":{"start":{"line":142,"column":4},"end":{"line":142,"column":5}},"loc":{"start":{"line":142,"column":17},"end":{"line":146,"column":5}},"line":142},"8":{"name":"(anonymous_8)","decl":{"start":{"line":155,"column":4},"end":{"line":155,"column":5}},"loc":{"start":{"line":155,"column":38},"end":{"line":196,"column":5}},"line":155},"9":{"name":"(anonymous_9)","decl":{"start":{"line":188,"column":60},"end":{"line":188,"column":61}},"loc":{"start":{"line":188,"column":65},"end":{"line":188,"column":169}},"line":188},"10":{"name":"(anonymous_10)","decl":{"start":{"line":202,"column":4},"end":{"line":202,"column":5}},"loc":{"start":{"line":202,"column":13},"end":{"line":208,"column":5}},"line":202}},"branchMap":{"0":{"loc":{"start":{"line":19,"column":22},"end":{"line":21,"column":1}},"type":"binary-expr","locations":[{"start":{"line":19,"column":23},"end":{"line":19,"column":27}},{"start":{"line":19,"column":31},"end":{"line":19,"column":51}},{"start":{"line":19,"column":56},"end":{"line":21,"column":1}}],"line":19},"1":{"loc":{"start":{"line":20,"column":11},"end":{"line":20,"column":61}},"type":"cond-expr","locations":[{"start":{"line":20,"column":37},"end":{"line":20,"column":40}},{"start":{"line":20,"column":43},"end":{"line":20,"column":61}}],"line":20},"2":{"loc":{"start":{"line":20,"column":12},"end":{"line":20,"column":33}},"type":"binary-expr","locations":[{"start":{"line":20,"column":12},"end":{"line":20,"column":15}},{"start":{"line":20,"column":19},"end":{"line":20,"column":33}}],"line":20},"3":{"loc":{"start":{"line":36,"column":24},"end":{"line":36,"column":45}},"type":"default-arg","locations":[{"start":{"line":36,"column":29},"end":{"line":36,"column":45}}],"line":36},"4":{"loc":{"start":{"line":39,"column":8},"end":{"line":41,"column":9}},"type":"if","locations":[{"start":{"line":39,"column":8},"end":{"line":41,"column":9}},{"start":{},"end":{}}],"line":39},"5":{"loc":{"start":{"line":95,"column":8},"end":{"line":133,"column":9}},"type":"if","locations":[{"start":{"line":95,"column":8},"end":{"line":133,"column":9}},{"start":{"line":111,"column":13},"end":{"line":133,"column":9}}],"line":95},"6":{"loc":{"start":{"line":99,"column":12},"end":{"line":106,"column":13}},"type":"if","locations":[{"start":{"line":99,"column":12},"end":{"line":106,"column":13}},{"start":{"line":103,"column":17},"end":{"line":106,"column":13}}],"line":99},"7":{"loc":{"start":{"line":111,"column":13},"end":{"line":133,"column":9}},"type":"if","locations":[{"start":{"line":111,"column":13},"end":{"line":133,"column":9}},{"start":{"line":117,"column":13},"end":{"line":133,"column":9}}],"line":111},"8":{"loc":{"start":{"line":121,"column":12},"end":{"line":128,"column":13}},"type":"if","locations":[{"start":{"line":121,"column":12},"end":{"line":128,"column":13}},{"start":{"line":125,"column":17},"end":{"line":128,"column":13}}],"line":121},"9":{"loc":{"start":{"line":143,"column":8},"end":{"line":145,"column":9}},"type":"if","locations":[{"start":{"line":143,"column":8},"end":{"line":145,"column":9}},{"start":{},"end":{}}],"line":143},"10":{"loc":{"start":{"line":157,"column":8},"end":{"line":159,"column":9}},"type":"if","locations":[{"start":{"line":157,"column":8},"end":{"line":159,"column":9}},{"start":{},"end":{}}],"line":157},"11":{"loc":{"start":{"line":161,"column":8},"end":{"line":163,"column":9}},"type":"if","locations":[{"start":{"line":161,"column":8},"end":{"line":163,"column":9}},{"start":{},"end":{}}],"line":161},"12":{"loc":{"start":{"line":164,"column":8},"end":{"line":166,"column":9}},"type":"if","locations":[{"start":{"line":164,"column":8},"end":{"line":166,"column":9}},{"start":{},"end":{}}],"line":164},"13":{"loc":{"start":{"line":172,"column":12},"end":{"line":174,"column":13}},"type":"if","locations":[{"start":{"line":172,"column":12},"end":{"line":174,"column":13}},{"start":{},"end":{}}],"line":172},"14":{"loc":{"start":{"line":176,"column":12},"end":{"line":178,"column":13}},"type":"if","locations":[{"start":{"line":176,"column":12},"end":{"line":178,"column":13}},{"start":{},"end":{}}],"line":176},"15":{"loc":{"start":{"line":176,"column":16},"end":{"line":176,"column":104}},"type":"binary-expr","locations":[{"start":{"line":176,"column":16},"end":{"line":176,"column":40}},{"start":{"line":176,"column":44},"end":{"line":176,"column":71}},{"start":{"line":176,"column":75},"end":{"line":176,"column":104}}],"line":176},"16":{"loc":{"start":{"line":180,"column":12},"end":{"line":185,"column":13}},"type":"if","locations":[{"start":{"line":180,"column":12},"end":{"line":185,"column":13}},{"start":{"line":183,"column":17},"end":{"line":185,"column":13}}],"line":180},"17":{"loc":{"start":{"line":188,"column":27},"end":{"line":188,"column":209}},"type":"cond-expr","locations":[{"start":{"line":188,"column":200},"end":{"line":188,"column":202}},{"start":{"line":188,"column":205},"end":{"line":188,"column":209}}],"line":188},"18":{"loc":{"start":{"line":188,"column":27},"end":{"line":188,"column":197}},"type":"binary-expr","locations":[{"start":{"line":188,"column":27},"end":{"line":188,"column":180}},{"start":{"line":188,"column":184},"end":{"line":188,"column":197}}],"line":188},"19":{"loc":{"start":{"line":188,"column":94},"end":{"line":188,"column":165}},"type":"cond-expr","locations":[{"start":{"line":188,"column":149},"end":{"line":188,"column":155}},{"start":{"line":188,"column":158},"end":{"line":188,"column":165}}],"line":188},"20":{"loc":{"start":{"line":188,"column":94},"end":{"line":188,"column":146}},"type":"binary-expr","locations":[{"start":{"line":188,"column":94},"end":{"line":188,"column":129}},{"start":{"line":188,"column":133},"end":{"line":188,"column":146}}],"line":188},"21":{"loc":{"start":{"line":192,"column":8},"end":{"line":194,"column":9}},"type":"if","locations":[{"start":{"line":192,"column":8},"end":{"line":194,"column":9}},{"start":{},"end":{}}],"line":192},"22":{"loc":{"start":{"line":192,"column":12},"end":{"line":192,"column":79}},"type":"binary-expr","locations":[{"start":{"line":192,"column":12},"end":{"line":192,"column":43}},{"start":{"line":192,"column":47},"end":{"line":192,"column":79}}],"line":192}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":7,"10":7,"11":7,"12":0,"13":7,"14":7,"15":3,"16":7,"17":0,"18":7,"19":4,"20":6,"21":1,"22":0,"23":2,"24":1,"25":1,"26":1,"27":1,"28":0,"29":0,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":0,"37":0,"38":0,"39":1,"40":1,"41":1,"42":0,"43":0,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":2,"51":0,"52":1,"53":0,"54":1,"55":1,"56":0,"57":1,"58":0,"59":1,"60":1,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":1,"70":0,"71":1,"72":1,"73":0,"74":1,"75":5,"76":1},"f":{"0":1,"1":7,"2":4,"3":6,"4":1,"5":0,"6":2,"7":2,"8":1,"9":0,"10":5},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1],"3":[6],"4":[0,7],"5":[1,1],"6":[0,1],"7":[0,1],"8":[0,1],"9":[0,2],"10":[0,1],"11":[0,1],"12":[0,1],"13":[0,0],"14":[0,0],"15":[0,0,0],"16":[0,0],"17":[0,1],"18":[1,1],"19":[0,0],"20":[0,0],"21":[0,1],"22":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/app/service-providers/documents/document-tree/document-tree-leaf.ts","sources":["/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/app/service-providers/documents/document-tree/document-tree-leaf.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @ignore\n * BEGIN HEADER\n *\n * Contains:        DocumentTreeLeaf\n * CVM-Role:        Model\n * Maintainer:      Hendrik Erz\n * License:         GNU GPL v3\n *\n * Description:     Document Tree Leafs represent a single document pane within\n *                  a window. Formally, they are a wrapper around a tab manager.\n *                  We need to separate the tab manager from the leaf, since the\n *                  leaf needs to handle splitting itself up into a branch with\n *                  two leaves.\n *\n * END HEADER\n */\n\nimport isFile from '@common/util/is-file'\nimport type { OpenDocument, LeafNodeJSON } from '@dts/common/documents'\nimport { v4 as uuid4 } from 'uuid'\nimport { DocumentTree } from './document-tree'\nimport { DTBranch } from './document-tree-branch'\nimport { TabManager } from './tab-manager'\n\nexport class DTLeaf {\n  // This is info concerning the tree structure\n  private readonly _id: string\n  private _parent: DTBranch|DocumentTree\n  // The tab manager actually manages the data\n  private readonly _tabManager: TabManager\n\n  /**\n   * Creates a new empty leaf.\n   *\n   * @param  {DTBranch|DocumentTree}  parent  The parent for this leaf\n   * @param  {string}                 id      An optional ID, may be changed to ensure uniqueness\n   */\n  constructor (\n    parent: DTBranch|DocumentTree,\n    id: string = uuid4()\n  ) {\n    this._parent = parent\n    this._tabManager = new TabManager()\n\n    if (typeof id !== 'string') {\n      id = uuid4()\n    }\n\n    // Ensure a unique ID\n    let root = parent\n    while (!(root instanceof DocumentTree)) {\n      root = root.parent\n    }\n\n    while (root.findLeaf(id) !== undefined) {\n      id = uuid4()\n    }\n\n    this._id = id\n  }\n\n  /**\n   * Returns the tab manager associated with this leaf\n   *\n   * @return  {TabManager}  The tab manager instance\n   */\n  public get tabMan (): TabManager {\n    return this._tabManager\n  }\n\n  /**\n   * Returns the readonly ID for this leaf\n   *\n   * @return  {string}  The ID\n   */\n  public get id (): string {\n    return this._id\n  }\n\n  /**\n   * Returns this leaf's parent\n   *\n   * @return  {DTBranch|DocumentTree}  The parent\n   */\n  public get parent (): DTBranch|DocumentTree {\n    return this._parent\n  }\n\n  /**\n   * Sets the parent for this leaf\n   *\n   * @param   {DTBranch|DocumentTree}  parent  The new parent\n   */\n  public set parent (parent: DTBranch|DocumentTree) {\n    this._parent = parent\n  }\n\n  /**\n   * Directs the leaf to split itself. This can either mean to insert a new leaf\n   * into its parent's child nodes, or to add the leaf to a new branch and\n   * replace itself in the tree with that new branch.\n   *\n   * @param   {string}  direction  The direction in which to split\n   * @param   {string}  insertion  Where to split (before the leaf, or after)\n   *\n   * @return  {DTLeaf}             Returns the newly created leaf\n   */\n  public split (direction: 'horizontal'|'vertical', insertion: 'before'|'after'): DTLeaf {\n    if (this._parent instanceof DocumentTree) {\n      console.log('Replacing this leaf with a new branch as the tree node')\n      const newBranch = new DTBranch(this._parent, direction)\n      const newLeaf = new DTLeaf(newBranch)\n\n      if (insertion === 'before') {\n        newBranch.addNode(newLeaf)\n        newBranch.addNode(this)\n      } else {\n        newBranch.addNode(this)\n        newBranch.addNode(newLeaf)\n      }\n\n      this._parent.node = newBranch\n      this._parent = newBranch\n      return newLeaf\n    } else if (this._parent.direction === direction) {\n      // Same direction, and we're already in a split -> add a new node\n      const newLeaf = new DTLeaf(this._parent)\n      this._parent.addNode(newLeaf, this, insertion)\n      return newLeaf\n    } else {\n      // Different direction -> replace this node with a new branch\n      const newBranch = new DTBranch(this._parent, direction)\n      const newLeaf = new DTLeaf(newBranch)\n\n      if (insertion === 'before') {\n        newBranch.addNode(newLeaf)\n        newBranch.addNode(this)\n      } else {\n        newBranch.addNode(this)\n        newBranch.addNode(newLeaf)\n      }\n\n      this._parent.addNode(newBranch, this, 'after')\n      this._parent.removeNode(this)\n\n      this._parent = newBranch\n      return newLeaf\n    }\n  }\n\n  /**\n   * Returns this if the ID is this leaf's ID, else undefined.\n   *\n   * @param   {string}  id  The leaf ID\n   *\n   * @return  {DTLeaf}      This, or undefined\n   */\n  public findLeaf (id: string): this|undefined {\n    if (id === this._id) {\n      return this\n    }\n  }\n\n  /**\n   * Creates a new leaf based on the nodeData provided\n   *\n   * @param   {DocumentTree|DTBranch}  parent    The parent for the leaf\n   * @param   {any}                    nodeData  The node data\n   *\n   * @return  {Promise<DTLeaf>}                  Resolves with the new leaf\n   */\n  static fromJSON (parent: DocumentTree|DTBranch, nodeData: any): DTLeaf {\n    if (typeof nodeData !== 'object') {\n      throw new Error('Could not instantiate DTLeaf: Provided JSON was not an object.')\n    }\n\n    const { id, openFiles } = nodeData\n\n    if (typeof id !== 'string') {\n      throw new Error(`Could not instantiate DTLeaf: ID was invalid: ${String(id)}`)\n    }\n\n    if (!Array.isArray(openFiles)) {\n      throw new Error(`Could not instantiate DTLeaf: openFiles was not an array: ${typeof openFiles}`)\n    }\n\n    // NOTE: After this point, we don't throw any more errors, since the leaf\n    // can be successfully instantiated. The only thing that may miss are the\n    // open documents.\n    const leaf = new DTLeaf(parent, id)\n    for (const file of openFiles) {\n      if (typeof file !== 'object') {\n        continue // Invalid entry\n      }\n\n      const { path, pinned } = file\n\n      if (typeof path !== 'string' || typeof pinned !== 'boolean' || !isFile(path)) {\n        continue // Invalid entry\n      }\n\n      const success = leaf.tabMan.openFile(path, false)\n      if (success) {\n        leaf.tabMan.setPinnedStatus(path, pinned)\n      } else {\n        // Invalid entry\n      }\n    }\n\n    // Revitalize the active File pointer\n    const activeFile = leaf.tabMan.openFiles.find(e => e.path === nodeData.activeFile?.path) ?? null\n    leaf.tabMan.activeFile = activeFile\n\n    // If the last active file can't be restored, make the first one of this\n    // leaf active so that the editor shows something.\n    if (leaf.tabMan.activeFile === null && leaf.tabMan.openFiles.length > 0) {\n      leaf.tabMan.activeFile = leaf.tabMan.openFiles[0]\n    }\n\n    return leaf\n  }\n\n  /**\n   * Returns a JSON serializable representation for this leaf\n   *\n   * @return  {LeafNodeJSON}  The JSON data\n   */\n  public toJSON (): LeafNodeJSON {\n    return {\n      type: 'leaf',\n      id: this._id,\n      ...this._tabManager.toJSON()\n    }\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"0840fdd5027ff569dfb2eff43149a379f6e581f6","contentHash":"16e0c4c30166c018efb147c225ffcbb6f85cb881db625574e9cd39e2f7c24565"},"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/util/is-file.ts":{"path":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/util/is-file.ts","statementMap":{"0":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"1":{"start":{"line":15,"column":0},"end":{"line":15,"column":25}},"2":{"start":{"line":16,"column":13},"end":{"line":16,"column":26}},"3":{"start":{"line":25,"column":4},"end":{"line":31,"column":5}},"4":{"start":{"line":26,"column":16},"end":{"line":26,"column":38}},"5":{"start":{"line":27,"column":8},"end":{"line":27,"column":26}},"6":{"start":{"line":30,"column":8},"end":{"line":30,"column":21}}},"fnMap":{"0":{"name":"isFile","decl":{"start":{"line":24,"column":9},"end":{"line":24,"column":15}},"loc":{"start":{"line":24,"column":19},"end":{"line":32,"column":1}},"line":24}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":0,"4":0,"5":0,"6":0},"f":{"0":0},"b":{},"inputSourceMap":{"version":3,"file":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/util/is-file.ts","sources":["/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/util/is-file.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;GAWG;;AAWH,yBAOC;AAhBD,2BAA8B;AAE9B;;;;;;GAMG;AACH,SAAwB,MAAM,CAAE,CAAS;IACvC,IAAI,CAAC;QACH,IAAI,CAAC,GAAG,IAAA,cAAS,EAAC,CAAC,CAAC,CAAA;QACpB,OAAO,CAAC,CAAC,MAAM,EAAE,CAAA;IACnB,CAAC;IAAC,OAAO,GAAG,EAAE,CAAC;QACb,OAAO,KAAK,CAAA;IACd,CAAC;AACH,CAAC","sourcesContent":["/**\n * BEGIN HEADER\n *\n * Contains:        Utility function\n * CVM-Role:        <none>\n * Maintainer:      Hendrik Erz\n * License:         GNU GPL v3\n *\n * Description:     This file contains a utility function to check a file.\n *\n * END HEADER\n */\n\nimport { lstatSync } from 'fs'\n\n/**\n * Checks if a given path is a valid file\n *\n * @param  {string}  p The path to check\n *\n * @return {boolean}   True, if it is a valid path + file, and false if not\n */\nexport default function isFile (p: string): boolean {\n  try {\n    let s = lstatSync(p)\n    return s.isFile()\n  } catch (err) {\n    return false\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"ac8acf176ce4fa1bdbade431b9dd1650f1fc4b81","contentHash":"c16c40d459772afdb51b10df14ef74b33d4f59e352c59cd6135cba0baebee046"},"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/app/service-providers/documents/document-tree/tab-manager.ts":{"path":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/app/service-providers/documents/document-tree/tab-manager.ts","statementMap":{"0":{"start":{"line":17,"column":0},"end":{"line":17,"column":62}},"1":{"start":{"line":18,"column":0},"end":{"line":18,"column":28}},"2":{"start":{"line":21,"column":8},"end":{"line":21,"column":29}},"3":{"start":{"line":22,"column":8},"end":{"line":22,"column":32}},"4":{"start":{"line":23,"column":8},"end":{"line":23,"column":34}},"5":{"start":{"line":24,"column":8},"end":{"line":24,"column":34}},"6":{"start":{"line":33,"column":8},"end":{"line":33,"column":31}},"7":{"start":{"line":42,"column":8},"end":{"line":48,"column":9}},"8":{"start":{"line":43,"column":24},"end":{"line":43,"column":70}},"9":{"start":{"line":43,"column":52},"end":{"line":43,"column":69}},"10":{"start":{"line":44,"column":12},"end":{"line":46,"column":13}},"11":{"start":{"line":45,"column":16},"end":{"line":45,"column":23}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":23}},"13":{"start":{"line":49,"column":8},"end":{"line":49,"column":32}},"14":{"start":{"line":57,"column":8},"end":{"line":57,"column":32}},"15":{"start":{"line":69,"column":8},"end":{"line":80,"column":9}},"16":{"start":{"line":70,"column":35},"end":{"line":70,"column":40}},"17":{"start":{"line":71,"column":12},"end":{"line":76,"column":13}},"18":{"start":{"line":71,"column":25},"end":{"line":71,"column":26}},"19":{"start":{"line":72,"column":16},"end":{"line":75,"column":17}},"20":{"start":{"line":73,"column":20},"end":{"line":73,"column":44}},"21":{"start":{"line":74,"column":20},"end":{"line":74,"column":26}},"22":{"start":{"line":77,"column":12},"end":{"line":79,"column":13}},"23":{"start":{"line":78,"column":16},"end":{"line":78,"column":29}},"24":{"start":{"line":82,"column":8},"end":{"line":84,"column":11}},"25":{"start":{"line":83,"column":12},"end":{"line":83,"column":73}},"26":{"start":{"line":85,"column":8},"end":{"line":85,"column":34}},"27":{"start":{"line":86,"column":8},"end":{"line":86,"column":20}},"28":{"start":{"line":93,"column":8},"end":{"line":99,"column":11}},"29":{"start":{"line":94,"column":12},"end":{"line":95,"column":26}},"30":{"start":{"line":95,"column":16},"end":{"line":95,"column":26}},"31":{"start":{"line":96,"column":12},"end":{"line":97,"column":25}},"32":{"start":{"line":97,"column":16},"end":{"line":97,"column":25}},"33":{"start":{"line":98,"column":12},"end":{"line":98,"column":21}},"34":{"start":{"line":111,"column":8},"end":{"line":113,"column":9}},"35":{"start":{"line":112,"column":12},"end":{"line":112,"column":25}},"36":{"start":{"line":114,"column":25},"end":{"line":114,"column":77}},"37":{"start":{"line":114,"column":54},"end":{"line":114,"column":76}},"38":{"start":{"line":116,"column":8},"end":{"line":121,"column":9}},"39":{"start":{"line":117,"column":33},"end":{"line":117,"column":71}},"40":{"start":{"line":118,"column":12},"end":{"line":120,"column":13}},"41":{"start":{"line":119,"column":16},"end":{"line":119,"column":61}},"42":{"start":{"line":124,"column":8},"end":{"line":131,"column":9}},"43":{"start":{"line":125,"column":12},"end":{"line":128,"column":13}},"44":{"start":{"line":126,"column":16},"end":{"line":126,"column":52}},"45":{"start":{"line":127,"column":16},"end":{"line":127,"column":71}},"46":{"start":{"line":129,"column":12},"end":{"line":129,"column":39}},"47":{"start":{"line":130,"column":12},"end":{"line":130,"column":24}},"48":{"start":{"line":132,"column":21},"end":{"line":132,"column":54}},"49":{"start":{"line":133,"column":8},"end":{"line":141,"column":9}},"50":{"start":{"line":135,"column":24},"end":{"line":135,"column":65}},"51":{"start":{"line":136,"column":12},"end":{"line":136,"column":53}},"52":{"start":{"line":140,"column":12},"end":{"line":140,"column":39}},"53":{"start":{"line":145,"column":8},"end":{"line":145,"column":61}},"54":{"start":{"line":145,"column":52},"end":{"line":145,"column":58}},"55":{"start":{"line":146,"column":8},"end":{"line":146,"column":34}},"56":{"start":{"line":147,"column":8},"end":{"line":147,"column":31}},"57":{"start":{"line":148,"column":8},"end":{"line":151,"column":9}},"58":{"start":{"line":149,"column":12},"end":{"line":149,"column":48}},"59":{"start":{"line":150,"column":12},"end":{"line":150,"column":67}},"60":{"start":{"line":152,"column":8},"end":{"line":152,"column":20}},"61":{"start":{"line":164,"column":8},"end":{"line":172,"column":9}},"62":{"start":{"line":165,"column":24},"end":{"line":165,"column":70}},"63":{"start":{"line":165,"column":52},"end":{"line":165,"column":69}},"64":{"start":{"line":166,"column":12},"end":{"line":171,"column":13}},"65":{"start":{"line":167,"column":16},"end":{"line":167,"column":27}},"66":{"start":{"line":170,"column":16},"end":{"line":170,"column":29}},"67":{"start":{"line":173,"column":8},"end":{"line":175,"column":9}},"68":{"start":{"line":174,"column":12},"end":{"line":174,"column":25}},"69":{"start":{"line":176,"column":8},"end":{"line":179,"column":9}},"70":{"start":{"line":178,"column":12},"end":{"line":178,"column":25}},"71":{"start":{"line":181,"column":30},"end":{"line":181,"column":106}},"72":{"start":{"line":182,"column":25},"end":{"line":182,"column":50}},"73":{"start":{"line":184,"column":8},"end":{"line":184,"column":65}},"74":{"start":{"line":187,"column":8},"end":{"line":192,"column":9}},"75":{"start":{"line":188,"column":12},"end":{"line":188,"column":24}},"76":{"start":{"line":191,"column":12},"end":{"line":191,"column":35}},"77":{"start":{"line":193,"column":8},"end":{"line":198,"column":9}},"78":{"start":{"line":194,"column":12},"end":{"line":194,"column":65}},"79":{"start":{"line":196,"column":13},"end":{"line":198,"column":9}},"80":{"start":{"line":197,"column":12},"end":{"line":197,"column":49}},"81":{"start":{"line":199,"column":8},"end":{"line":199,"column":20}},"82":{"start":{"line":213,"column":21},"end":{"line":213,"column":69}},"83":{"start":{"line":213,"column":48},"end":{"line":213,"column":68}},"84":{"start":{"line":214,"column":8},"end":{"line":217,"column":9}},"85":{"start":{"line":215,"column":12},"end":{"line":215,"column":124}},"86":{"start":{"line":215,"column":113},"end":{"line":215,"column":121}},"87":{"start":{"line":216,"column":12},"end":{"line":216,"column":25}},"88":{"start":{"line":218,"column":8},"end":{"line":218,"column":28}},"89":{"start":{"line":219,"column":8},"end":{"line":221,"column":9}},"90":{"start":{"line":220,"column":12},"end":{"line":220,"column":35}},"91":{"start":{"line":222,"column":8},"end":{"line":222,"column":20}},"92":{"start":{"line":228,"column":8},"end":{"line":228,"column":37}},"93":{"start":{"line":234,"column":8},"end":{"line":234,"column":36}},"94":{"start":{"line":243,"column":8},"end":{"line":245,"column":9}},"95":{"start":{"line":244,"column":12},"end":{"line":244,"column":67}},"96":{"start":{"line":246,"column":28},"end":{"line":246,"column":60}},"97":{"start":{"line":247,"column":8},"end":{"line":249,"column":9}},"98":{"start":{"line":248,"column":12},"end":{"line":248,"column":48}},"99":{"start":{"line":251,"column":8},"end":{"line":251,"column":43}},"100":{"start":{"line":252,"column":27},"end":{"line":252,"column":69}},"101":{"start":{"line":254,"column":8},"end":{"line":254,"column":41}},"102":{"start":{"line":263,"column":20},"end":{"line":263,"column":75}},"103":{"start":{"line":263,"column":53},"end":{"line":263,"column":74}},"104":{"start":{"line":264,"column":8},"end":{"line":267,"column":9}},"105":{"start":{"line":265,"column":12},"end":{"line":265,"column":57}},"106":{"start":{"line":266,"column":12},"end":{"line":266,"column":38}},"107":{"start":{"line":276,"column":8},"end":{"line":279,"column":10}},"108":{"start":{"line":282,"column":0},"end":{"line":282,"column":32}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":20,"column":4},"end":{"line":20,"column":5}},"loc":{"start":{"line":20,"column":18},"end":{"line":25,"column":5}},"line":20},"1":{"name":"(anonymous_1)","decl":{"start":{"line":32,"column":4},"end":{"line":32,"column":5}},"loc":{"start":{"line":32,"column":20},"end":{"line":34,"column":5}},"line":32},"2":{"name":"(anonymous_2)","decl":{"start":{"line":41,"column":4},"end":{"line":41,"column":5}},"loc":{"start":{"line":41,"column":25},"end":{"line":50,"column":5}},"line":41},"3":{"name":"(anonymous_3)","decl":{"start":{"line":43,"column":45},"end":{"line":43,"column":46}},"loc":{"start":{"line":43,"column":52},"end":{"line":43,"column":69}},"line":43},"4":{"name":"(anonymous_4)","decl":{"start":{"line":56,"column":4},"end":{"line":56,"column":5}},"loc":{"start":{"line":56,"column":21},"end":{"line":58,"column":5}},"line":56},"5":{"name":"(anonymous_5)","decl":{"start":{"line":67,"column":4},"end":{"line":67,"column":5}},"loc":{"start":{"line":67,"column":29},"end":{"line":87,"column":5}},"line":67},"6":{"name":"(anonymous_6)","decl":{"start":{"line":82,"column":29},"end":{"line":82,"column":30}},"loc":{"start":{"line":82,"column":39},"end":{"line":84,"column":9}},"line":82},"7":{"name":"(anonymous_7)","decl":{"start":{"line":91,"column":4},"end":{"line":91,"column":5}},"loc":{"start":{"line":91,"column":25},"end":{"line":100,"column":5}},"line":91},"8":{"name":"(anonymous_8)","decl":{"start":{"line":93,"column":29},"end":{"line":93,"column":30}},"loc":{"start":{"line":93,"column":39},"end":{"line":99,"column":9}},"line":93},"9":{"name":"(anonymous_9)","decl":{"start":{"line":109,"column":4},"end":{"line":109,"column":5}},"loc":{"start":{"line":109,"column":38},"end":{"line":153,"column":5}},"line":109},"10":{"name":"(anonymous_10)","decl":{"start":{"line":114,"column":46},"end":{"line":114,"column":47}},"loc":{"start":{"line":114,"column":54},"end":{"line":114,"column":76}},"line":114},"11":{"name":"(anonymous_11)","decl":{"start":{"line":145,"column":47},"end":{"line":145,"column":48}},"loc":{"start":{"line":145,"column":52},"end":{"line":145,"column":58}},"line":145},"12":{"name":"(anonymous_12)","decl":{"start":{"line":163,"column":4},"end":{"line":163,"column":5}},"loc":{"start":{"line":163,"column":20},"end":{"line":200,"column":5}},"line":163},"13":{"name":"(anonymous_13)","decl":{"start":{"line":165,"column":45},"end":{"line":165,"column":46}},"loc":{"start":{"line":165,"column":52},"end":{"line":165,"column":69}},"line":165},"14":{"name":"(anonymous_14)","decl":{"start":{"line":211,"column":4},"end":{"line":211,"column":5}},"loc":{"start":{"line":211,"column":38},"end":{"line":223,"column":5}},"line":211},"15":{"name":"(anonymous_15)","decl":{"start":{"line":213,"column":41},"end":{"line":213,"column":42}},"loc":{"start":{"line":213,"column":48},"end":{"line":213,"column":68}},"line":213},"16":{"name":"(anonymous_16)","decl":{"start":{"line":215,"column":106},"end":{"line":215,"column":107}},"loc":{"start":{"line":215,"column":113},"end":{"line":215,"column":121}},"line":215},"17":{"name":"(anonymous_17)","decl":{"start":{"line":227,"column":4},"end":{"line":227,"column":5}},"loc":{"start":{"line":227,"column":11},"end":{"line":229,"column":5}},"line":227},"18":{"name":"(anonymous_18)","decl":{"start":{"line":233,"column":4},"end":{"line":233,"column":5}},"loc":{"start":{"line":233,"column":14},"end":{"line":235,"column":5}},"line":233},"19":{"name":"(anonymous_19)","decl":{"start":{"line":241,"column":4},"end":{"line":241,"column":5}},"loc":{"start":{"line":241,"column":35},"end":{"line":255,"column":5}},"line":241},"20":{"name":"(anonymous_20)","decl":{"start":{"line":262,"column":4},"end":{"line":262,"column":5}},"loc":{"start":{"line":262,"column":46},"end":{"line":268,"column":5}},"line":262},"21":{"name":"(anonymous_21)","decl":{"start":{"line":263,"column":46},"end":{"line":263,"column":47}},"loc":{"start":{"line":263,"column":53},"end":{"line":263,"column":74}},"line":263},"22":{"name":"(anonymous_22)","decl":{"start":{"line":275,"column":4},"end":{"line":275,"column":5}},"loc":{"start":{"line":275,"column":13},"end":{"line":280,"column":5}},"line":275}},"branchMap":{"0":{"loc":{"start":{"line":42,"column":8},"end":{"line":48,"column":9}},"type":"if","locations":[{"start":{"line":42,"column":8},"end":{"line":48,"column":9}},{"start":{},"end":{}}],"line":42},"1":{"loc":{"start":{"line":44,"column":12},"end":{"line":46,"column":13}},"type":"if","locations":[{"start":{"line":44,"column":12},"end":{"line":46,"column":13}},{"start":{},"end":{}}],"line":44},"2":{"loc":{"start":{"line":69,"column":8},"end":{"line":80,"column":9}},"type":"if","locations":[{"start":{"line":69,"column":8},"end":{"line":80,"column":9}},{"start":{},"end":{}}],"line":69},"3":{"loc":{"start":{"line":72,"column":16},"end":{"line":75,"column":17}},"type":"if","locations":[{"start":{"line":72,"column":16},"end":{"line":75,"column":17}},{"start":{},"end":{}}],"line":72},"4":{"loc":{"start":{"line":77,"column":12},"end":{"line":79,"column":13}},"type":"if","locations":[{"start":{"line":77,"column":12},"end":{"line":79,"column":13}},{"start":{},"end":{}}],"line":77},"5":{"loc":{"start":{"line":94,"column":12},"end":{"line":95,"column":26}},"type":"if","locations":[{"start":{"line":94,"column":12},"end":{"line":95,"column":26}},{"start":{},"end":{}}],"line":94},"6":{"loc":{"start":{"line":94,"column":16},"end":{"line":94,"column":37}},"type":"binary-expr","locations":[{"start":{"line":94,"column":16},"end":{"line":94,"column":24}},{"start":{"line":94,"column":28},"end":{"line":94,"column":37}}],"line":94},"7":{"loc":{"start":{"line":96,"column":12},"end":{"line":97,"column":25}},"type":"if","locations":[{"start":{"line":96,"column":12},"end":{"line":97,"column":25}},{"start":{},"end":{}}],"line":96},"8":{"loc":{"start":{"line":96,"column":16},"end":{"line":96,"column":37}},"type":"binary-expr","locations":[{"start":{"line":96,"column":16},"end":{"line":96,"column":25}},{"start":{"line":96,"column":29},"end":{"line":96,"column":37}}],"line":96},"9":{"loc":{"start":{"line":111,"column":8},"end":{"line":113,"column":9}},"type":"if","locations":[{"start":{"line":111,"column":8},"end":{"line":113,"column":9}},{"start":{},"end":{}}],"line":111},"10":{"loc":{"start":{"line":111,"column":13},"end":{"line":111,"column":80}},"type":"cond-expr","locations":[{"start":{"line":111,"column":64},"end":{"line":111,"column":70}},{"start":{"line":111,"column":73},"end":{"line":111,"column":80}}],"line":111},"11":{"loc":{"start":{"line":111,"column":13},"end":{"line":111,"column":61}},"type":"binary-expr","locations":[{"start":{"line":111,"column":13},"end":{"line":111,"column":44}},{"start":{"line":111,"column":48},"end":{"line":111,"column":61}}],"line":111},"12":{"loc":{"start":{"line":116,"column":8},"end":{"line":121,"column":9}},"type":"if","locations":[{"start":{"line":116,"column":8},"end":{"line":121,"column":9}},{"start":{},"end":{}}],"line":116},"13":{"loc":{"start":{"line":118,"column":12},"end":{"line":120,"column":13}},"type":"if","locations":[{"start":{"line":118,"column":12},"end":{"line":120,"column":13}},{"start":{},"end":{}}],"line":118},"14":{"loc":{"start":{"line":124,"column":8},"end":{"line":131,"column":9}},"type":"if","locations":[{"start":{"line":124,"column":8},"end":{"line":131,"column":9}},{"start":{},"end":{}}],"line":124},"15":{"loc":{"start":{"line":125,"column":12},"end":{"line":128,"column":13}},"type":"if","locations":[{"start":{"line":125,"column":12},"end":{"line":128,"column":13}},{"start":{},"end":{}}],"line":125},"16":{"loc":{"start":{"line":133,"column":8},"end":{"line":141,"column":9}},"type":"if","locations":[{"start":{"line":133,"column":8},"end":{"line":141,"column":9}},{"start":{"line":138,"column":13},"end":{"line":141,"column":9}}],"line":133},"17":{"loc":{"start":{"line":148,"column":8},"end":{"line":151,"column":9}},"type":"if","locations":[{"start":{"line":148,"column":8},"end":{"line":151,"column":9}},{"start":{},"end":{}}],"line":148},"18":{"loc":{"start":{"line":164,"column":8},"end":{"line":172,"column":9}},"type":"if","locations":[{"start":{"line":164,"column":8},"end":{"line":172,"column":9}},{"start":{},"end":{}}],"line":164},"19":{"loc":{"start":{"line":166,"column":12},"end":{"line":171,"column":13}},"type":"if","locations":[{"start":{"line":166,"column":12},"end":{"line":171,"column":13}},{"start":{"line":169,"column":17},"end":{"line":171,"column":13}}],"line":166},"20":{"loc":{"start":{"line":173,"column":8},"end":{"line":175,"column":9}},"type":"if","locations":[{"start":{"line":173,"column":8},"end":{"line":175,"column":9}},{"start":{},"end":{}}],"line":173},"21":{"loc":{"start":{"line":176,"column":8},"end":{"line":179,"column":9}},"type":"if","locations":[{"start":{"line":176,"column":8},"end":{"line":179,"column":9}},{"start":{},"end":{}}],"line":176},"22":{"loc":{"start":{"line":181,"column":30},"end":{"line":181,"column":106}},"type":"cond-expr","locations":[{"start":{"line":181,"column":60},"end":{"line":181,"column":62}},{"start":{"line":181,"column":65},"end":{"line":181,"column":106}}],"line":181},"23":{"loc":{"start":{"line":187,"column":8},"end":{"line":192,"column":9}},"type":"if","locations":[{"start":{"line":187,"column":8},"end":{"line":192,"column":9}},{"start":{"line":190,"column":13},"end":{"line":192,"column":9}}],"line":187},"24":{"loc":{"start":{"line":193,"column":8},"end":{"line":198,"column":9}},"type":"if","locations":[{"start":{"line":193,"column":8},"end":{"line":198,"column":9}},{"start":{"line":196,"column":13},"end":{"line":198,"column":9}}],"line":193},"25":{"loc":{"start":{"line":193,"column":12},"end":{"line":193,"column":59}},"type":"binary-expr","locations":[{"start":{"line":193,"column":12},"end":{"line":193,"column":38}},{"start":{"line":193,"column":42},"end":{"line":193,"column":59}}],"line":193},"26":{"loc":{"start":{"line":196,"column":13},"end":{"line":198,"column":9}},"type":"if","locations":[{"start":{"line":196,"column":13},"end":{"line":198,"column":9}},{"start":{},"end":{}}],"line":196},"27":{"loc":{"start":{"line":196,"column":17},"end":{"line":196,"column":66}},"type":"binary-expr","locations":[{"start":{"line":196,"column":17},"end":{"line":196,"column":43}},{"start":{"line":196,"column":47},"end":{"line":196,"column":66}}],"line":196},"28":{"loc":{"start":{"line":214,"column":8},"end":{"line":217,"column":9}},"type":"if","locations":[{"start":{"line":214,"column":8},"end":{"line":217,"column":9}},{"start":{},"end":{}}],"line":214},"29":{"loc":{"start":{"line":219,"column":8},"end":{"line":221,"column":9}},"type":"if","locations":[{"start":{"line":219,"column":8},"end":{"line":221,"column":9}},{"start":{},"end":{}}],"line":219},"30":{"loc":{"start":{"line":219,"column":13},"end":{"line":219,"column":80}},"type":"cond-expr","locations":[{"start":{"line":219,"column":64},"end":{"line":219,"column":70}},{"start":{"line":219,"column":73},"end":{"line":219,"column":80}}],"line":219},"31":{"loc":{"start":{"line":219,"column":13},"end":{"line":219,"column":61}},"type":"binary-expr","locations":[{"start":{"line":219,"column":13},"end":{"line":219,"column":44}},{"start":{"line":219,"column":48},"end":{"line":219,"column":61}}],"line":219},"32":{"loc":{"start":{"line":243,"column":8},"end":{"line":245,"column":9}},"type":"if","locations":[{"start":{"line":243,"column":8},"end":{"line":245,"column":9}},{"start":{},"end":{}}],"line":243},"33":{"loc":{"start":{"line":243,"column":12},"end":{"line":243,"column":94}},"type":"binary-expr","locations":[{"start":{"line":243,"column":12},"end":{"line":243,"column":36}},{"start":{"line":243,"column":40},"end":{"line":243,"column":94}}],"line":243},"34":{"loc":{"start":{"line":247,"column":8},"end":{"line":249,"column":9}},"type":"if","locations":[{"start":{"line":247,"column":8},"end":{"line":249,"column":9}},{"start":{},"end":{}}],"line":247},"35":{"loc":{"start":{"line":247,"column":12},"end":{"line":247,"column":76}},"type":"binary-expr","locations":[{"start":{"line":247,"column":12},"end":{"line":247,"column":57}},{"start":{"line":247,"column":61},"end":{"line":247,"column":76}}],"line":247},"36":{"loc":{"start":{"line":264,"column":8},"end":{"line":267,"column":9}},"type":"if","locations":[{"start":{"line":264,"column":8},"end":{"line":267,"column":9}},{"start":{},"end":{}}],"line":264}},"s":{"0":1,"1":1,"2":7,"3":7,"4":7,"5":7,"6":2,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":1,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":5,"108":1},"f":{"0":7,"1":2,"2":1,"3":0,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":5},"b":{"0":[0,1],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/app/service-providers/documents/document-tree/tab-manager.ts","sources":["/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/app/service-providers/documents/document-tree/tab-manager.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @ignore\n * BEGIN HEADER\n *\n * Contains:        TabManager\n * CVM-Role:        Model\n * Maintainer:      Hendrik Erz\n * License:         GNU GPL v3\n *\n * Description:     The tab manager manages the open documents for a single\n *                  editor pane. Tab managers aren't instantiated standalone but\n *                  are meant to be contained within a document tree leaf.\n *\n * END HEADER\n */\n\nimport type { OpenDocument } from '@dts/common/documents'\n\nexport interface TabManagerJSON {\n  openFiles: OpenDocument[]\n  activeFile: OpenDocument|null\n}\n\nexport class TabManager {\n  private readonly _openFiles: OpenDocument[]\n  private _activeFile: OpenDocument|null\n  private readonly _sessionHistory: string[]\n  private _sessionPointer: number\n\n  constructor () {\n    this._openFiles = []\n    this._activeFile = null\n    this._sessionHistory = []\n    this._sessionPointer = -1\n  }\n\n  // GETTERS AND SETTERS\n\n  /**\n   * Returns the list of currently opened files in this tab manager\n   *\n   * @return  {OpenDocument[]}  The currently open documents\n   */\n  public get openFiles (): OpenDocument[] {\n    return this._openFiles\n  }\n\n  /**\n   * Sets the active file to the one given; can either be an OpenDocument or\n   * a file path. Provide null to unset\n   *\n   * @param  {OpenDocument|string|null}  file  The new active file\n   */\n  public set activeFile (file: OpenDocument|string|null) {\n    if (typeof file === 'string') {\n      const doc = this._openFiles.find(doc => doc.path === file)\n      if (doc === undefined) {\n        return\n      }\n      file = doc\n    }\n\n    this._activeFile = file\n  }\n\n  /**\n   * Returns the current active file\n   *\n   * @return  {OpenDocument|null}  The active file or null\n   */\n  public get activeFile (): OpenDocument|null {\n    return this._activeFile\n  }\n\n  // PUBLIC METHODS\n\n  /**\n   * Sorts the openFiles according to pathArray.\n   *\n   * @param  {string[]}  pathArray  An array with absolute paths to sort with\n   *\n   * @return {boolean}              The new sorting\n   */\n  public sortOpenFiles (pathArray: string[]): boolean {\n    // Only sort if something changed\n    if (pathArray.length === this._openFiles.length) {\n      let somethingChanged = false\n      for (let i = 0; i < pathArray.length; i++) {\n        if (this._openFiles[i].path !== pathArray[i]) {\n          somethingChanged = true\n          break\n        }\n      }\n\n      if (!somethingChanged) {\n        return false\n      }\n    }\n\n    // Simply re-sort based on the new paths\n    this._openFiles.sort((a, b) => {\n      return pathArray.indexOf(a.path) - pathArray.indexOf(b.path)\n    })\n\n    this.movePinnedTabsLeft()\n\n    return true\n  }\n\n  /**\n   * This function (re)sorts the open files solely based on their pinned status\n   */\n  private movePinnedTabsLeft (): void {\n    // Also make sure that pinned tabs are all grouped to the left before sync\n    this._openFiles.sort((a, b) => {\n      if (a.pinned && !b.pinned) return -1\n      if (!a.pinned && b.pinned) return 1\n      return 0\n    })\n  }\n\n  /**\n   * Opens a file within this tab manager.\n   *\n   * @param   {string}   filePath       The absolute file path\n   * @param   {boolean}  modifyHistory  Optional. Only used internally.\n   *\n   * @return  {Promise<boolean>}        True upon successful opening\n   */\n  public openFile (filePath: string, modifyHistory?: boolean): boolean {\n    if (this.activeFile?.path === filePath) {\n      return false\n    }\n    const openFile = this._openFiles.find(file => file.path === filePath)\n\n    // Remove the file from the session history if applicable\n    if (modifyHistory !== false) {\n      const sessionIndex = this._sessionHistory.indexOf(filePath)\n      if (sessionIndex > -1) {\n        this._sessionHistory.splice(sessionIndex, 1)\n      }\n    }\n\n    // If the file is already open, we just set it as the active one and be done\n    // with it, no further action needed\n    if (openFile !== undefined) {\n      if (modifyHistory !== false) {\n        this._sessionHistory.push(filePath)\n        this._sessionPointer = this._sessionHistory.length - 1\n      }\n      this.activeFile = openFile\n      return true\n    }\n\n    const file: OpenDocument = { path: filePath, pinned: false }\n\n    if (this._activeFile !== null) {\n      // ... behind our active file\n      const idx = this._openFiles.indexOf(this._activeFile)\n      this._openFiles.splice(idx + 1, 0, file)\n    } else {\n      // ... or at the end\n      this._openFiles.push(file)\n    }\n\n    // Update all required states. Especially make sure to re-sort this to\n    // ensure the new file (unpinned) doesn't end up in between several pinned\n    // files.\n    this.sortOpenFiles(this._openFiles.map(d => d.path))\n    this.movePinnedTabsLeft()\n\n    this.activeFile = file\n\n    if (modifyHistory !== false) {\n      this._sessionHistory.push(filePath)\n      this._sessionPointer = this._sessionHistory.length - 1\n    }\n\n    return true\n  }\n\n  /**\n   * Closes the given file if it's in fact open. This function deals with every\n   * potential problem such as retrieving user consent to closing the file if it\n   * is modified.\n   *\n   * @param   {MDFileDescriptor|CodeFileDescriptor}  file  The file to be closed\n   *\n   * @return  {boolean}                                    Whether or not the file was closed\n   */\n  public closeFile (file: OpenDocument|string): boolean {\n    if (typeof file === 'string') {\n      const doc = this._openFiles.find(doc => doc.path === file)\n      if (doc !== undefined) {\n        file = doc\n      } else {\n        return false\n      }\n    }\n    if (!this._openFiles.includes(file)) {\n      return false // All good, we didn't even have to close the file.\n    }\n\n    if (file.pinned) {\n      // TODO this._app.log.warning(`[Document Provider] Refusing to close pinned file ${file.path}`)\n      return false\n    }\n\n    // Retrieve the index of the active file and whether it's an active file\n    const activeFileIdx = (this._activeFile === null) ? -1 : this._openFiles.indexOf(this._activeFile)\n    const isActive = this._activeFile === file\n\n    // Then remove the file from the list of open files\n    this._openFiles.splice(this._openFiles.indexOf(file), 1)\n\n    // Now, if we just closed the active file, we need to make another file\n    // active, or none, if there are no more open files active.\n    if (!isActive) {\n      return true\n    } else {\n      this.activeFile = null\n    }\n\n    if (this._openFiles.length > 0 && activeFileIdx > 0) {\n      this.activeFile = this._openFiles[activeFileIdx - 1]\n    } else if (this._openFiles.length > 0 && activeFileIdx === 0) {\n      this.activeFile = this._openFiles[0]\n    }\n\n    return true\n  }\n\n  /**\n   * This function is a convenience when the path of a file has changed without\n   * the file being deleted or otherwise removed from the app. NOTE that you\n   * still have to emit any events to notify the editors of this change.\n   *\n   * @param   {string}  oldPath  The old path\n   * @param   {string}  newPath  The new path\n   *\n   * @return  {boolean}          False if the file was not open here\n   */\n  public replaceFilePath (oldPath: string, newPath: string): boolean {\n    const file = this.openFiles.find(doc => doc.path === oldPath)\n    if (file === undefined) {\n      console.log(`Didnt find file for path ${oldPath} -- nothing has changed.`, this.openFiles.map(doc => doc.path))\n      return false\n    }\n\n    file.path = newPath\n    if (this.activeFile?.path === oldPath) {\n      this.activeFile = file\n    }\n\n    return true\n  }\n\n  /**\n   * Goes back in the session history and opens the previous file\n   */\n  public back (): void {\n    this._moveThroughHistory(-1)\n  }\n\n  /**\n   * Goes forward in the session history and opens the next file\n   */\n  public forward (): void {\n    this._moveThroughHistory(1)\n  }\n\n  /**\n   * Moves through history using the specified direction\n   *\n   * @param   {number}  direction  The direction to take. Negative = back, positive = forward\n   */\n  private _moveThroughHistory (direction: number): void {\n    // Always make sure the session pointer is valid\n    if (this._sessionPointer < 0 || this._sessionPointer > this._sessionHistory.length - 1) {\n      this._sessionPointer = this._sessionHistory.length - 1\n    }\n\n    const targetIndex = this._sessionPointer + direction\n\n    if (targetIndex > this._sessionHistory.length - 1 || targetIndex < 0) {\n      return console.log('Out of bounds') // Cannot move: Out of bounds\n    }\n\n    // Move the pointer\n    this._sessionPointer = targetIndex\n    const pathToOpen = this._sessionHistory[this._sessionPointer]\n\n    // Open that file, but tell the opener explicitly not to modify the state\n    this.openFile(pathToOpen, false)\n  }\n\n  /**\n   * Sets the pinned status for the given file.\n   *\n   * @param   {string}   filePath        The absolute path to the file\n   * @param   {boolean}  shouldBePinned  Whether the file should be pinned.\n   */\n  public setPinnedStatus (filePath: string, shouldBePinned: boolean): void {\n    const idx = this._openFiles.findIndex(doc => doc.path === filePath)\n    if (idx > -1) {\n      this._openFiles[idx].pinned = shouldBePinned\n      this.movePinnedTabsLeft()\n    }\n  }\n\n  // API METHODS\n\n  /**\n   * Returns a JSON serializable representation of the tab manager instance\n   *\n   * @return  {TabManagerJSON}     The JSON data\n   */\n  public toJSON (): TabManagerJSON {\n    return {\n      openFiles: this._openFiles,\n      activeFile: this._activeFile\n    }\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"dd4a05903facde88a692aaa5c31a842125ff29f9","contentHash":"dfaa12c9d7df2086e6299d9cdfbd47fc85621016d88cc72b31f1fc0c9aebe9fd"},"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/app/service-providers/citeproc/extract-bibtex-attachments.ts":{"path":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/app/service-providers/citeproc/extract-bibtex-attachments.ts","statementMap":{"0":{"start":{"line":15,"column":22},"end":{"line":17,"column":1}},"1":{"start":{"line":16,"column":4},"end":{"line":16,"column":62}},"2":{"start":{"line":18,"column":0},"end":{"line":18,"column":62}},"3":{"start":{"line":19,"column":0},"end":{"line":19,"column":43}},"4":{"start":{"line":20,"column":15},"end":{"line":20,"column":47}},"5":{"start":{"line":21,"column":20},"end":{"line":21,"column":40}},"6":{"start":{"line":22,"column":22},"end":{"line":22,"column":74}},"7":{"start":{"line":23,"column":21},"end":{"line":23,"column":43}},"8":{"start":{"line":31,"column":16},"end":{"line":31,"column":48}},"9":{"start":{"line":33,"column":18},"end":{"line":33,"column":37}},"10":{"start":{"line":35,"column":21},"end":{"line":35,"column":79}},"11":{"start":{"line":35,"column":49},"end":{"line":35,"column":78}},"12":{"start":{"line":37,"column":27},"end":{"line":37,"column":89}},"13":{"start":{"line":37,"column":51},"end":{"line":37,"column":88}},"14":{"start":{"line":38,"column":4},"end":{"line":45,"column":5}},"15":{"start":{"line":39,"column":22},"end":{"line":39,"column":63}},"16":{"start":{"line":39,"column":54},"end":{"line":39,"column":62}},"17":{"start":{"line":40,"column":8},"end":{"line":44,"column":9}},"18":{"start":{"line":41,"column":12},"end":{"line":41,"column":49}},"19":{"start":{"line":42,"column":12},"end":{"line":42,"column":157}},"20":{"start":{"line":43,"column":12},"end":{"line":43,"column":18}},"21":{"start":{"line":48,"column":4},"end":{"line":87,"column":5}},"22":{"start":{"line":49,"column":8},"end":{"line":51,"column":9}},"23":{"start":{"line":50,"column":12},"end":{"line":50,"column":21}},"24":{"start":{"line":52,"column":8},"end":{"line":80,"column":9}},"25":{"start":{"line":53,"column":12},"end":{"line":79,"column":13}},"26":{"start":{"line":54,"column":35},"end":{"line":54,"column":52}},"27":{"start":{"line":55,"column":16},"end":{"line":57,"column":17}},"28":{"start":{"line":56,"column":20},"end":{"line":56,"column":29}},"29":{"start":{"line":61,"column":24},"end":{"line":61,"column":51}},"30":{"start":{"line":62,"column":16},"end":{"line":70,"column":19}},"31":{"start":{"line":64,"column":20},"end":{"line":69,"column":21}},"32":{"start":{"line":65,"column":24},"end":{"line":65,"column":50}},"33":{"start":{"line":68,"column":24},"end":{"line":68,"column":36}},"34":{"start":{"line":72,"column":16},"end":{"line":72,"column":50}},"35":{"start":{"line":74,"column":16},"end":{"line":76,"column":17}},"36":{"start":{"line":75,"column":20},"end":{"line":75,"column":74}},"37":{"start":{"line":75,"column":38},"end":{"line":75,"column":72}},"38":{"start":{"line":78,"column":16},"end":{"line":78,"column":36}},"39":{"start":{"line":84,"column":8},"end":{"line":86,"column":9}},"40":{"start":{"line":85,"column":12},"end":{"line":85,"column":36}},"41":{"start":{"line":88,"column":4},"end":{"line":88,"column":17}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":15,"column":56},"end":{"line":15,"column":57}},"loc":{"start":{"line":15,"column":71},"end":{"line":17,"column":1}},"line":15},"1":{"name":"extractBibtexAttachments","decl":{"start":{"line":30,"column":9},"end":{"line":30,"column":33}},"loc":{"start":{"line":30,"column":65},"end":{"line":89,"column":1}},"line":30},"2":{"name":"(anonymous_2)","decl":{"start":{"line":35,"column":41},"end":{"line":35,"column":42}},"loc":{"start":{"line":35,"column":49},"end":{"line":35,"column":78}},"line":35},"3":{"name":"(anonymous_3)","decl":{"start":{"line":37,"column":43},"end":{"line":37,"column":44}},"loc":{"start":{"line":37,"column":51},"end":{"line":37,"column":88}},"line":37},"4":{"name":"(anonymous_4)","decl":{"start":{"line":39,"column":49},"end":{"line":39,"column":50}},"loc":{"start":{"line":39,"column":54},"end":{"line":39,"column":62}},"line":39},"5":{"name":"(anonymous_5)","decl":{"start":{"line":62,"column":26},"end":{"line":62,"column":27}},"loc":{"start":{"line":62,"column":34},"end":{"line":70,"column":17}},"line":62},"6":{"name":"(anonymous_6)","decl":{"start":{"line":75,"column":30},"end":{"line":75,"column":31}},"loc":{"start":{"line":75,"column":38},"end":{"line":75,"column":72}},"line":75}},"branchMap":{"0":{"loc":{"start":{"line":15,"column":22},"end":{"line":17,"column":1}},"type":"binary-expr","locations":[{"start":{"line":15,"column":23},"end":{"line":15,"column":27}},{"start":{"line":15,"column":31},"end":{"line":15,"column":51}},{"start":{"line":15,"column":56},"end":{"line":17,"column":1}}],"line":15},"1":{"loc":{"start":{"line":16,"column":11},"end":{"line":16,"column":61}},"type":"cond-expr","locations":[{"start":{"line":16,"column":37},"end":{"line":16,"column":40}},{"start":{"line":16,"column":43},"end":{"line":16,"column":61}}],"line":16},"2":{"loc":{"start":{"line":16,"column":12},"end":{"line":16,"column":33}},"type":"binary-expr","locations":[{"start":{"line":16,"column":12},"end":{"line":16,"column":15}},{"start":{"line":16,"column":19},"end":{"line":16,"column":33}}],"line":16},"3":{"loc":{"start":{"line":40,"column":8},"end":{"line":44,"column":9}},"type":"if","locations":[{"start":{"line":40,"column":8},"end":{"line":44,"column":9}},{"start":{},"end":{}}],"line":40},"4":{"loc":{"start":{"line":42,"column":12},"end":{"line":42,"column":156}},"type":"cond-expr","locations":[{"start":{"line":42,"column":51},"end":{"line":42,"column":57}},{"start":{"line":42,"column":60},"end":{"line":42,"column":156}}],"line":42},"5":{"loc":{"start":{"line":42,"column":12},"end":{"line":42,"column":48}},"type":"binary-expr","locations":[{"start":{"line":42,"column":12},"end":{"line":42,"column":27}},{"start":{"line":42,"column":31},"end":{"line":42,"column":48}}],"line":42},"6":{"loc":{"start":{"line":49,"column":8},"end":{"line":51,"column":9}},"type":"if","locations":[{"start":{"line":49,"column":8},"end":{"line":51,"column":9}},{"start":{},"end":{}}],"line":49},"7":{"loc":{"start":{"line":53,"column":12},"end":{"line":79,"column":13}},"type":"if","locations":[{"start":{"line":53,"column":12},"end":{"line":79,"column":13}},{"start":{},"end":{}}],"line":53},"8":{"loc":{"start":{"line":55,"column":16},"end":{"line":57,"column":17}},"type":"if","locations":[{"start":{"line":55,"column":16},"end":{"line":57,"column":17}},{"start":{},"end":{}}],"line":55},"9":{"loc":{"start":{"line":55,"column":20},"end":{"line":55,"column":78}},"type":"binary-expr","locations":[{"start":{"line":55,"column":20},"end":{"line":55,"column":48}},{"start":{"line":55,"column":52},"end":{"line":55,"column":78}}],"line":55},"10":{"loc":{"start":{"line":64,"column":20},"end":{"line":69,"column":21}},"type":"if","locations":[{"start":{"line":64,"column":20},"end":{"line":69,"column":21}},{"start":{"line":67,"column":25},"end":{"line":69,"column":21}}],"line":64},"11":{"loc":{"start":{"line":74,"column":16},"end":{"line":76,"column":17}},"type":"if","locations":[{"start":{"line":74,"column":16},"end":{"line":76,"column":17}},{"start":{},"end":{}}],"line":74},"12":{"loc":{"start":{"line":84,"column":8},"end":{"line":86,"column":9}},"type":"if","locations":[{"start":{"line":84,"column":8},"end":{"line":86,"column":9}},{"start":{},"end":{}}],"line":84}},"s":{"0":1,"1":2,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":2,"9":1,"10":1,"11":6,"12":1,"13":1,"14":1,"15":1,"16":3,"17":1,"18":0,"19":0,"20":0,"21":1,"22":6,"23":3,"24":3,"25":17,"26":2,"27":2,"28":0,"29":2,"30":2,"31":3,"32":3,"33":0,"34":2,"35":2,"36":2,"37":3,"38":2,"39":3,"40":1,"41":1},"f":{"0":2,"1":2,"2":6,"3":1,"4":3,"5":3,"6":3},"b":{"0":[1,1,1],"1":[1,1],"2":[2,2],"3":[0,1],"4":[0,0],"5":[0,0],"6":[3,3],"7":[2,15],"8":[0,2],"9":[2,2],"10":[3,0],"11":[2,0],"12":[1,2]},"inputSourceMap":{"version":3,"file":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/app/service-providers/citeproc/extract-bibtex-attachments.ts","sources":["/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/app/service-providers/citeproc/extract-bibtex-attachments.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * BEGIN HEADER\n *\n * Contains:        Utility function\n * CVM-Role:        <none>\n * Maintainer:      Hendrik Erz\n * License:         GNU GPL v3\n *\n * Description:     This file contains a utility function to extract\n *                  BibTex attachment entries from such a file.\n *\n * END HEADER\n */\n\nimport path from 'path'\nimport { bibtex } from 'astrocite'\nimport { type BracedComment } from 'astrocite-bibtex'\nimport pdfSorter from '@common/util/sort-by-pdf'\nimport type LogProvider from '@providers/log'\n\nconst AstrociteAST = bibtex.AST\n\ntype BibTexAttachments = Record<string, string[]|false>\n\n/**\n * Returns a dictionary in the form citeKey: Array(files)\n * @param {String} fileContents The contents of a valid BibTex file\n * @param {String} baseDir The base directory to use in case the links are relative.\n * @return {Object} Returns a dictionary containing all extracted files\n */\nexport default function extractBibtexAttachments (\n  fileContents: string,\n  baseDir: string,\n  logger?: LogProvider\n): BibTexAttachments {\n  const ast = AstrociteAST.parse(fileContents)\n  // Return value will be a fast-access dictionary\n  const files = Object.create(null)\n\n  // First we search for the jabref comments containing the files' root directories\n  const comments = ast.children.filter(item => item.kind === 'BracedComment') as BracedComment[]\n  // The format of the value field is 'jabref-meta: fileDirectory*:<path>;'\n  const jabrefComments = comments.filter(item => item.value.startsWith('jabref-meta:'))\n  for (const entry of jabrefComments) {\n    const value = entry.value.split(':').map(e => e.trim())\n    if (value[1].startsWith('fileDirectory')) {\n      baseDir = value[2].replace(/;/g, '')\n      logger?.info(`[extractBibtexAttachments] Found a fileDirectory, overwriting baseDir: ${baseDir}`)\n      break\n    }\n  }\n\n  // Now let's see what entries have files attached.\n  // Such attributes are stored in properties within the entry.\n  for (const entry of ast.children) {\n    if (entry.kind !== 'Entry') {\n      continue\n    }\n\n    for (const property of entry.properties) {\n      if (property.key === 'file') {\n        const firstValue = property.value[0]\n        if (firstValue.kind !== 'String' && firstValue.kind !== 'Text') {\n          continue\n        }\n\n        // The file entry by JabRef is saved as description:path:type\n        // Multiple entries are delimited with ;\n        // Reference: https://github.com/JabRef/jabref/blob/93f47c9069d01247375cabbe6e1328f0a477472b/src/main/java/org/jabref/gui/filelist/FileListEntry.java#L46\n        let f = firstValue.value.split(';')\n        f = f.map(elem => {\n          // Extract the file paths\n          if (elem.includes(':')) {\n            return elem.split(':')[1]\n          } else {\n            return elem\n          }\n        })\n        // Now sort so that PDF-files are at the top\n        f = f.sort(pdfSorter)\n\n        // In case the paths are not absolute, make them this way.\n        if (!path.isAbsolute(f[0])) {\n          f = f.map(elem => path.join(baseDir, elem))\n        }\n        // Save them to the dictionary\n        files[entry.id] = f\n      }\n    }\n\n    // If the entry has not been assigned by now, this means there\n    // are no files attached. -> Set it to false so one can easily\n    // check if (!files[key]), as an array will evaluate to true.\n    if (files[entry.id] === undefined) {\n      files[entry.id] = false\n    }\n  }\n\n  return files\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"d57f86d5dc40ec46bac8314dc47307b399eaed91","contentHash":"8a2b940348ea5c35a26055db0a34611d4b52135b30601d8131aa5446e62fde29"},"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/util/sort-by-pdf.ts":{"path":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/util/sort-by-pdf.ts","statementMap":{"0":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"1":{"start":{"line":15,"column":0},"end":{"line":15,"column":28}},"2":{"start":{"line":16,"column":14},"end":{"line":16,"column":23}},"3":{"start":{"line":26,"column":17},"end":{"line":26,"column":30}},"4":{"start":{"line":27,"column":17},"end":{"line":27,"column":30}},"5":{"start":{"line":28,"column":4},"end":{"line":29,"column":17}},"6":{"start":{"line":29,"column":8},"end":{"line":29,"column":17}},"7":{"start":{"line":30,"column":4},"end":{"line":31,"column":18}},"8":{"start":{"line":31,"column":8},"end":{"line":31,"column":18}},"9":{"start":{"line":32,"column":4},"end":{"line":33,"column":17}},"10":{"start":{"line":33,"column":8},"end":{"line":33,"column":17}},"11":{"start":{"line":34,"column":4},"end":{"line":34,"column":13}}},"fnMap":{"0":{"name":"sortByPDF","decl":{"start":{"line":25,"column":9},"end":{"line":25,"column":18}},"loc":{"start":{"line":25,"column":25},"end":{"line":35,"column":1}},"line":25}},"branchMap":{"0":{"loc":{"start":{"line":28,"column":4},"end":{"line":29,"column":17}},"type":"if","locations":[{"start":{"line":28,"column":4},"end":{"line":29,"column":17}},{"start":{},"end":{}}],"line":28},"1":{"loc":{"start":{"line":28,"column":8},"end":{"line":28,"column":24}},"type":"binary-expr","locations":[{"start":{"line":28,"column":8},"end":{"line":28,"column":14}},{"start":{"line":28,"column":18},"end":{"line":28,"column":24}}],"line":28},"2":{"loc":{"start":{"line":30,"column":4},"end":{"line":31,"column":18}},"type":"if","locations":[{"start":{"line":30,"column":4},"end":{"line":31,"column":18}},{"start":{},"end":{}}],"line":30},"3":{"loc":{"start":{"line":32,"column":4},"end":{"line":33,"column":17}},"type":"if","locations":[{"start":{"line":32,"column":4},"end":{"line":33,"column":17}},{"start":{},"end":{}}],"line":32}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":1,"8":0,"9":1,"10":1,"11":0},"f":{"0":1},"b":{"0":[0,1],"1":[1,0],"2":[0,1],"3":[1,0]},"inputSourceMap":{"version":3,"file":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/util/sort-by-pdf.ts","sources":["/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/util/sort-by-pdf.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;GAWG;;AAYH,4BAQC;AAlBD,MAAM,KAAK,GAAG,SAAS,CAAA;AAEvB;;;;;;;GAOG;AACH,SAAwB,SAAS,CAAE,CAAS,EAAE,CAAS;IACrD,IAAI,MAAM,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;IAC1B,IAAI,MAAM,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;IAE1B,IAAI,MAAM,IAAI,MAAM;QAAE,OAAO,CAAC,CAAA;IAC9B,IAAI,MAAM;QAAE,OAAO,CAAC,CAAC,CAAA;IACrB,IAAI,MAAM;QAAE,OAAO,CAAC,CAAA;IACpB,OAAO,CAAC,CAAA;AACV,CAAC","sourcesContent":["/**\n * BEGIN HEADER\n *\n * Contains:        Utility function\n * CVM-Role:        <none>\n * Maintainer:      Hendrik Erz\n * License:         GNU GPL v3\n *\n * Description:     Sorts an array of strings with PDF at the top.\n *\n * END HEADER\n */\n\nconst pdfRE = /\\.pdf$/i\n\n/**\n * Sorting function that sorts PDF files to be at the top\n *\n * @param  {string} a The first comparator\n * @param  {string} b The second comparator\n *\n * @return {number}   A number for consumption by Array.sort()\n */\nexport default function sortByPDF (a: string, b: string): number {\n  let isAPDF = pdfRE.test(a)\n  let isBPDF = pdfRE.test(b)\n\n  if (isAPDF && isBPDF) return 0\n  if (isAPDF) return -1\n  if (isBPDF) return 1\n  return 0\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"8c0949bafc96d3bb99ad495d81db0c9b1a952566","contentHash":"aa29715c08dc5c27511eb6439ab2fb36b168ddbef2a40ae95012220c3defbb45"},"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/app/service-providers/fsal/util/extract-linefeed.ts":{"path":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/app/service-providers/fsal/util/extract-linefeed.ts","statementMap":{"0":{"start":{"line":15,"column":0},"end":{"line":15,"column":62}},"1":{"start":{"line":16,"column":0},"end":{"line":16,"column":42}},"2":{"start":{"line":18,"column":15},"end":{"line":18,"column":34}},"3":{"start":{"line":19,"column":15},"end":{"line":19,"column":34}},"4":{"start":{"line":20,"column":17},"end":{"line":20,"column":38}},"5":{"start":{"line":21,"column":17},"end":{"line":21,"column":38}},"6":{"start":{"line":22,"column":22},"end":{"line":22,"column":60}},"7":{"start":{"line":23,"column":22},"end":{"line":23,"column":60}},"8":{"start":{"line":24,"column":4},"end":{"line":38,"column":5}},"9":{"start":{"line":25,"column":8},"end":{"line":25,"column":20}},"10":{"start":{"line":27,"column":9},"end":{"line":38,"column":5}},"11":{"start":{"line":28,"column":8},"end":{"line":28,"column":20}},"12":{"start":{"line":30,"column":9},"end":{"line":38,"column":5}},"13":{"start":{"line":31,"column":8},"end":{"line":31,"column":22}},"14":{"start":{"line":33,"column":9},"end":{"line":38,"column":5}},"15":{"start":{"line":34,"column":8},"end":{"line":34,"column":22}},"16":{"start":{"line":37,"column":8},"end":{"line":37,"column":20}}},"fnMap":{"0":{"name":"extractLinefeed","decl":{"start":{"line":17,"column":9},"end":{"line":17,"column":24}},"loc":{"start":{"line":17,"column":31},"end":{"line":39,"column":1}},"line":17}},"branchMap":{"0":{"loc":{"start":{"line":22,"column":22},"end":{"line":22,"column":60}},"type":"cond-expr","locations":[{"start":{"line":22,"column":29},"end":{"line":22,"column":49}},{"start":{"line":22,"column":52},"end":{"line":22,"column":60}}],"line":22},"1":{"loc":{"start":{"line":23,"column":22},"end":{"line":23,"column":60}},"type":"cond-expr","locations":[{"start":{"line":23,"column":29},"end":{"line":23,"column":49}},{"start":{"line":23,"column":52},"end":{"line":23,"column":60}}],"line":23},"2":{"loc":{"start":{"line":24,"column":4},"end":{"line":38,"column":5}},"type":"if","locations":[{"start":{"line":24,"column":4},"end":{"line":38,"column":5}},{"start":{"line":27,"column":9},"end":{"line":38,"column":5}}],"line":24},"3":{"loc":{"start":{"line":24,"column":8},"end":{"line":24,"column":17}},"type":"binary-expr","locations":[{"start":{"line":24,"column":8},"end":{"line":24,"column":10}},{"start":{"line":24,"column":14},"end":{"line":24,"column":17}}],"line":24},"4":{"loc":{"start":{"line":27,"column":9},"end":{"line":38,"column":5}},"type":"if","locations":[{"start":{"line":27,"column":9},"end":{"line":38,"column":5}},{"start":{"line":30,"column":9},"end":{"line":38,"column":5}}],"line":27},"5":{"loc":{"start":{"line":27,"column":13},"end":{"line":27,"column":22}},"type":"binary-expr","locations":[{"start":{"line":27,"column":13},"end":{"line":27,"column":15}},{"start":{"line":27,"column":19},"end":{"line":27,"column":22}}],"line":27},"6":{"loc":{"start":{"line":30,"column":9},"end":{"line":38,"column":5}},"type":"if","locations":[{"start":{"line":30,"column":9},"end":{"line":38,"column":5}},{"start":{"line":33,"column":9},"end":{"line":38,"column":5}}],"line":30},"7":{"loc":{"start":{"line":30,"column":13},"end":{"line":30,"column":42}},"type":"binary-expr","locations":[{"start":{"line":30,"column":13},"end":{"line":30,"column":17}},{"start":{"line":30,"column":21},"end":{"line":30,"column":42}}],"line":30},"8":{"loc":{"start":{"line":33,"column":9},"end":{"line":38,"column":5}},"type":"if","locations":[{"start":{"line":33,"column":9},"end":{"line":38,"column":5}},{"start":{"line":36,"column":9},"end":{"line":38,"column":5}}],"line":33},"9":{"loc":{"start":{"line":33,"column":13},"end":{"line":33,"column":42}},"type":"binary-expr","locations":[{"start":{"line":33,"column":13},"end":{"line":33,"column":17}},{"start":{"line":33,"column":21},"end":{"line":33,"column":42}}],"line":33}},"s":{"0":1,"1":1,"2":9,"3":9,"4":9,"5":9,"6":9,"7":9,"8":9,"9":1,"10":8,"11":1,"12":7,"13":3,"14":4,"15":2,"16":2},"f":{"0":9},"b":{"0":[4,5],"1":[4,5],"2":[1,8],"3":[9,7],"4":[1,7],"5":[8,7],"6":[3,4],"7":[7,4],"8":[2,2],"9":[4,2]},"inputSourceMap":{"version":3,"file":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/app/service-providers/fsal/util/extract-linefeed.ts","sources":["/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/app/service-providers/fsal/util/extract-linefeed.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;GAYG;;AAIH,0CAoBC;AApBD,SAAgB,eAAe,CAAE,IAAY;IAC3C,MAAM,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAA;IAC9B,MAAM,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAA;IAC9B,MAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAA;IAClC,MAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAA;IAElC,MAAM,SAAS,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAA;IACxD,MAAM,SAAS,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAA;IAExD,IAAI,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC;QACd,OAAO,IAAI,CAAA,CAAC,2BAA2B;IACzC,CAAC;SAAM,IAAI,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC;QACrB,OAAO,IAAI,CAAA,CAAC,2DAA2D;IACzE,CAAC;SAAM,IAAI,IAAI,IAAI,SAAS,GAAG,SAAS,EAAE,CAAC;QACzC,OAAO,MAAM,CAAA,CAAC,qBAAqB;IACrC,CAAC;SAAM,IAAI,IAAI,IAAI,SAAS,GAAG,SAAS,EAAE,CAAC;QACzC,OAAO,MAAM,CAAA,CAAC,qDAAqD;IACrE,CAAC;SAAM,CAAC;QACN,OAAO,IAAI,CAAA,CAAC,sCAAsC;IACpD,CAAC;AACH,CAAC","sourcesContent":["/**\n * @ignore\n * BEGIN HEADER\n *\n * Contains:        extractLinefeed\n * CVM-Role:        Utility Function\n * Maintainer:      Hendrik Erz\n * License:         GNU GPL v3\n *\n * Description:     This function extracts the correct linefeed from a file.\n *\n * END HEADER\n */\n\ntype Linefeed = '\\n'|'\\r'|'\\r\\n'|'\\n\\r'\n\nexport function extractLinefeed (text: string): Linefeed {\n  const CR = text.includes('\\r')\n  const LF = text.includes('\\n')\n  const CRLF = text.includes('\\r\\n')\n  const LFCR = text.includes('\\n\\r')\n\n  const indexCRLF = CRLF ? text.indexOf('\\r\\n') : Infinity\n  const indexLFCR = LFCR ? text.indexOf('\\n\\r') : Infinity\n\n  if (LF && !CR) {\n    return '\\n' // Unix-style (Linux/macOS)\n  } else if (CR && !LF) {\n    return '\\r' // Commodore 64 and old Apple II systems, also emails afaik\n  } else if (CRLF && indexCRLF < indexLFCR) {\n    return '\\r\\n' // Windows and MS-DOS\n  } else if (LFCR && indexLFCR < indexCRLF) {\n    return '\\n\\r' // According to Wikipedia, only Acorn BBC and RISC OS\n  } else {\n    return '\\n' // By default, assume a simple newline\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"5f32e1f5fe8cda302e594f5f1c8e08bc763d5c34","contentHash":"465b7e110413712176a11a8b12857aa59f97443df1a1f4bdc63b5e76078496a3"},"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/util/extract-yaml-frontmatter.ts":{"path":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/util/extract-yaml-frontmatter.ts","statementMap":{"0":{"start":{"line":14,"column":22},"end":{"line":16,"column":1}},"1":{"start":{"line":15,"column":4},"end":{"line":15,"column":62}},"2":{"start":{"line":17,"column":0},"end":{"line":17,"column":62}},"3":{"start":{"line":18,"column":0},"end":{"line":18,"column":41}},"4":{"start":{"line":19,"column":15},"end":{"line":19,"column":47}},"5":{"start":{"line":36,"column":4},"end":{"line":38,"column":5}},"6":{"start":{"line":37,"column":8},"end":{"line":37,"column":56}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":5}},"8":{"start":{"line":43,"column":19},"end":{"line":43,"column":23}},"9":{"start":{"line":44,"column":4},"end":{"line":45,"column":26}},"10":{"start":{"line":45,"column":8},"end":{"line":45,"column":26}},"11":{"start":{"line":46,"column":4},"end":{"line":47,"column":26}},"12":{"start":{"line":47,"column":8},"end":{"line":47,"column":26}},"13":{"start":{"line":48,"column":18},"end":{"line":48,"column":42}},"14":{"start":{"line":49,"column":4},"end":{"line":49,"column":22}},"15":{"start":{"line":50,"column":16},"end":{"line":50,"column":18}},"16":{"start":{"line":51,"column":14},"end":{"line":51,"column":16}},"17":{"start":{"line":52,"column":4},"end":{"line":59,"column":5}},"18":{"start":{"line":52,"column":17},"end":{"line":52,"column":18}},"19":{"start":{"line":55,"column":8},"end":{"line":58,"column":9}},"20":{"start":{"line":56,"column":12},"end":{"line":56,"column":22}},"21":{"start":{"line":57,"column":12},"end":{"line":57,"column":18}},"22":{"start":{"line":60,"column":4},"end":{"line":62,"column":5}},"23":{"start":{"line":61,"column":8},"end":{"line":61,"column":19}},"24":{"start":{"line":63,"column":4},"end":{"line":68,"column":5}},"25":{"start":{"line":63,"column":17},"end":{"line":63,"column":26}},"26":{"start":{"line":64,"column":8},"end":{"line":67,"column":9}},"27":{"start":{"line":65,"column":12},"end":{"line":65,"column":24}},"28":{"start":{"line":66,"column":12},"end":{"line":66,"column":18}},"29":{"start":{"line":69,"column":4},"end":{"line":71,"column":5}},"30":{"start":{"line":70,"column":8},"end":{"line":70,"column":19}},"31":{"start":{"line":73,"column":22},"end":{"line":73,"column":24}},"32":{"start":{"line":74,"column":4},"end":{"line":76,"column":5}},"33":{"start":{"line":74,"column":17},"end":{"line":74,"column":22}},"34":{"start":{"line":75,"column":8},"end":{"line":75,"column":39}},"35":{"start":{"line":78,"column":4},"end":{"line":96,"column":5}},"36":{"start":{"line":79,"column":34},"end":{"line":79,"column":67}},"37":{"start":{"line":80,"column":28},"end":{"line":80,"column":94}},"38":{"start":{"line":81,"column":8},"end":{"line":89,"column":9}},"39":{"start":{"line":82,"column":12},"end":{"line":82,"column":48}},"40":{"start":{"line":88,"column":12},"end":{"line":88,"column":33}},"41":{"start":{"line":91,"column":8},"end":{"line":91,"column":58}},"42":{"start":{"line":92,"column":8},"end":{"line":92,"column":19}},"43":{"start":{"line":95,"column":8},"end":{"line":95,"column":19}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":14,"column":56},"end":{"line":14,"column":57}},"loc":{"start":{"line":14,"column":71},"end":{"line":16,"column":1}},"line":14},"1":{"name":"extractYamlFrontmatter","decl":{"start":{"line":34,"column":9},"end":{"line":34,"column":31}},"loc":{"start":{"line":34,"column":42},"end":{"line":97,"column":1}},"line":34}},"branchMap":{"0":{"loc":{"start":{"line":14,"column":22},"end":{"line":16,"column":1}},"type":"binary-expr","locations":[{"start":{"line":14,"column":23},"end":{"line":14,"column":27}},{"start":{"line":14,"column":31},"end":{"line":14,"column":51}},{"start":{"line":14,"column":56},"end":{"line":16,"column":1}}],"line":14},"1":{"loc":{"start":{"line":15,"column":11},"end":{"line":15,"column":61}},"type":"cond-expr","locations":[{"start":{"line":15,"column":37},"end":{"line":15,"column":40}},{"start":{"line":15,"column":43},"end":{"line":15,"column":61}}],"line":15},"2":{"loc":{"start":{"line":15,"column":12},"end":{"line":15,"column":33}},"type":"binary-expr","locations":[{"start":{"line":15,"column":12},"end":{"line":15,"column":15}},{"start":{"line":15,"column":19},"end":{"line":15,"column":33}}],"line":15},"3":{"loc":{"start":{"line":36,"column":4},"end":{"line":38,"column":5}},"type":"if","locations":[{"start":{"line":36,"column":4},"end":{"line":38,"column":5}},{"start":{},"end":{}}],"line":36},"4":{"loc":{"start":{"line":44,"column":4},"end":{"line":45,"column":26}},"type":"if","locations":[{"start":{"line":44,"column":4},"end":{"line":45,"column":26}},{"start":{},"end":{}}],"line":44},"5":{"loc":{"start":{"line":46,"column":4},"end":{"line":47,"column":26}},"type":"if","locations":[{"start":{"line":46,"column":4},"end":{"line":47,"column":26}},{"start":{},"end":{}}],"line":46},"6":{"loc":{"start":{"line":55,"column":8},"end":{"line":58,"column":9}},"type":"if","locations":[{"start":{"line":55,"column":8},"end":{"line":58,"column":9}},{"start":{},"end":{}}],"line":55},"7":{"loc":{"start":{"line":55,"column":12},"end":{"line":55,"column":53}},"type":"binary-expr","locations":[{"start":{"line":55,"column":12},"end":{"line":55,"column":30}},{"start":{"line":55,"column":34},"end":{"line":55,"column":53}}],"line":55},"8":{"loc":{"start":{"line":60,"column":4},"end":{"line":62,"column":5}},"type":"if","locations":[{"start":{"line":60,"column":4},"end":{"line":62,"column":5}},{"start":{},"end":{}}],"line":60},"9":{"loc":{"start":{"line":64,"column":8},"end":{"line":67,"column":9}},"type":"if","locations":[{"start":{"line":64,"column":8},"end":{"line":67,"column":9}},{"start":{},"end":{}}],"line":64},"10":{"loc":{"start":{"line":69,"column":4},"end":{"line":71,"column":5}},"type":"if","locations":[{"start":{"line":69,"column":4},"end":{"line":71,"column":5}},{"start":{},"end":{}}],"line":69},"11":{"loc":{"start":{"line":81,"column":8},"end":{"line":89,"column":9}},"type":"if","locations":[{"start":{"line":81,"column":8},"end":{"line":89,"column":9}},{"start":{"line":84,"column":13},"end":{"line":89,"column":9}}],"line":81},"12":{"loc":{"start":{"line":81,"column":12},"end":{"line":81,"column":61}},"type":"binary-expr","locations":[{"start":{"line":81,"column":12},"end":{"line":81,"column":24}},{"start":{"line":81,"column":28},"end":{"line":81,"column":61}}],"line":81}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":10,"6":2,"7":8,"8":8,"9":8,"10":0,"11":8,"12":0,"13":8,"14":8,"15":8,"16":8,"17":8,"18":8,"19":8,"20":8,"21":8,"22":8,"23":0,"24":8,"25":8,"26":38,"27":8,"28":8,"29":8,"30":0,"31":8,"32":8,"33":8,"34":38,"35":8,"36":8,"37":8,"38":8,"39":8,"40":0,"41":8,"42":8,"43":0},"f":{"0":1,"1":10},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1],"3":[2,8],"4":[0,8],"5":[0,8],"6":[8,0],"7":[8,8],"8":[0,8],"9":[8,30],"10":[0,8],"11":[8,0],"12":[8,8]},"inputSourceMap":{"version":3,"file":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/util/extract-yaml-frontmatter.ts","sources":["/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/util/extract-yaml-frontmatter.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;GAWG;;;;;AAuBH,yCAuEC;AA5FD,gDAAuB;AAOvB;;;;;;;;;;;;;GAaG;AACH,SAAwB,sBAAsB,CAAE,QAAgB;IAC9D,uEAAuE;IACvE,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE,CAAC;QAChC,OAAO,EAAE,WAAW,EAAE,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,CAAA;IACjD,CAAC;IAED,MAAM,GAAG,GAAiC;QACxC,WAAW,EAAE,IAAI;QACjB,OAAO,EAAE,QAAQ;KAClB,CAAA;IAED,IAAI,QAAQ,GAAG,IAAI,CAAA;IACnB,IAAI,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC;QAAE,QAAQ,GAAG,MAAM,CAAA;IAChD,IAAI,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC;QAAE,QAAQ,GAAG,MAAM,CAAA;IAEhD,MAAM,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAA;IAEtC,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC,CAAA,CAAC,0BAA0B;IAC5C,IAAI,KAAK,GAAG,CAAC,CAAC,CAAA;IACd,IAAI,GAAG,GAAG,CAAC,CAAC,CAAA;IAEZ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;QACtC,iDAAiD;QACjD,qDAAqD;QACrD,IAAI,KAAK,CAAC,CAAC,CAAC,KAAK,KAAK,IAAI,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC;YAC9C,KAAK,GAAG,CAAC,CAAA;YACT,MAAK;QACP,CAAC;IACH,CAAC;IAED,IAAI,KAAK,GAAG,CAAC,EAAE,CAAC;QACd,OAAO,GAAG,CAAA,CAAC,iBAAiB;IAC9B,CAAC;IAED,KAAK,IAAI,CAAC,GAAG,KAAK,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;QAC9C,IAAI,CAAE,KAAK,EAAE,KAAK,CAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;YACxC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAA;YACX,MAAK;QACP,CAAC;IACH,CAAC;IAED,IAAI,GAAG,GAAG,CAAC,EAAE,CAAC;QACZ,OAAO,GAAG,CAAA,CAAC,8BAA8B;IAC3C,CAAC;IAED,2DAA2D;IAC3D,IAAI,WAAW,GAAG,EAAE,CAAA;IACpB,KAAK,IAAI,CAAC,GAAG,KAAK,EAAE,CAAC,IAAI,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;QAClC,WAAW,IAAI,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAA;IAChC,CAAC;IAED,mBAAmB;IACnB,IAAI,CAAC;QACH,MAAM,iBAAiB,GAAG,cAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAA;QACjD,MAAM,WAAW,GAAG,CAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,CAAE,CAAC,QAAQ,CAAC,OAAO,iBAAiB,CAAC,CAAA;QAExF,IAAI,CAAC,WAAW,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,iBAAiB,CAAC,EAAE,CAAC;YACtD,GAAG,CAAC,WAAW,GAAG,iBAAiB,CAAA;QACrC,CAAC;aAAM,CAAC;YACN,yEAAyE;YACzE,qEAAqE;YACrE,6CAA6C;YAC7C,GAAG,CAAC,WAAW,GAAG,EAAE,CAAA;QACtB,CAAC;QAED,mCAAmC;QACnC,GAAG,CAAC,OAAO,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;QACjD,OAAO,GAAG,CAAA;IACZ,CAAC;IAAC,OAAO,GAAG,EAAE,CAAC;QACb,OAAO,GAAG,CAAA;IACZ,CAAC;AACH,CAAC","sourcesContent":["/**\n * BEGIN HEADER\n *\n * Contains:        Utility function\n * CVM-Role:        <none>\n * Maintainer:      Hendrik Erz\n * License:         GNU GPL v3\n *\n * Description:     Extracts a YAML frontmatter\n *\n * END HEADER\n */\n\nimport YAML from 'yaml'\n\ninterface ExtractYamlFrontmatterReturn {\n  frontmatter: Record<string, any>|null\n  content: string\n}\n\n/**\n * Takes Markdown source and returns a parsed YAML frontmatter as an object or\n * null (if there was no frontmatter). NOTE: This function will always return\n * either null or an object with keys and values, as frontmatter in the context\n * of this function does NOT simply mean \"valid YAML\" (since that could also be\n * just a string or a number). So if the frontmatter consists solely of a\n * primitive or a list, this function will remove the frontmatter from the\n * content BUT return an empty object. This makes it easy to work with the\n * returned object but is strictly speaking opiniated.\n *\n * @param   {string}    markdown  The Markdown source\n *\n * @return  {any|null}            The parsed frontmatter as an object, or null.\n */\nexport default function extractYamlFrontmatter (markdown: string): ExtractYamlFrontmatterReturn {\n  // Shortcut, since most files can be expected not to have a frontmatter\n  if (!markdown.startsWith('---')) {\n    return { frontmatter: null, content: markdown }\n  }\n\n  const ret: ExtractYamlFrontmatterReturn = {\n    frontmatter: null,\n    content: markdown\n  }\n\n  let linefeed = '\\n'\n  if (markdown.includes('\\r\\n')) linefeed = '\\r\\n'\n  if (markdown.includes('\\n\\r')) linefeed = '\\n\\r'\n\n  const lines = markdown.split(linefeed)\n\n  lines.unshift('') // For the start algorithm\n  let start = -1\n  let end = -1\n\n  for (let i = 1; i < lines.length; i++) {\n    // Either first line or in between, in both cases\n    // this condition holds true due to the unshift above\n    if (lines[i] === '---' && lines[i - 1] === '') {\n      start = i\n      break\n    }\n  }\n\n  if (start < 0) {\n    return ret // No frontmatter\n  }\n\n  for (let i = start + 1; i < lines.length; i++) {\n    if ([ '---', '...' ].includes(lines[i])) {\n      end = i - 1\n      break\n    }\n  }\n\n  if (end < 0) {\n    return ret // The frontmatter did not end\n  }\n\n  // Now we have a frontmatter (if there was any) -> extract!\n  let frontmatter = ''\n  for (let i = start; i <= end; i++) {\n    frontmatter += '\\n' + lines[i]\n  }\n\n  // Parse and return\n  try {\n    const parsedFrontmatter = YAML.parse(frontmatter)\n    const isPrimitive = [ 'string', 'number', 'boolean' ].includes(typeof parsedFrontmatter)\n\n    if (!isPrimitive && !Array.isArray(parsedFrontmatter)) {\n      ret.frontmatter = parsedFrontmatter\n    } else {\n      // We have a frontmatter but it only consists of either a primitive or an\n      // array. Since this function is assumed to return a Pandoc-parseable\n      // frontmatter, we need to overwrite it here.\n      ret.frontmatter = {}\n    }\n\n    // Remove frontmatter from content.\n    ret.content = lines.slice(end + 2).join(linefeed)\n    return ret\n  } catch (err) {\n    return ret\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"6c2bb89b3dee46ed966086e6da06d903a4bbeeec","contentHash":"7eb1edaecda3252c358def4d9d1058a2b08327a5c25b88428cc03fc5cb6e99e6"},"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/util/find-object.ts":{"path":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/util/find-object.ts","statementMap":{"0":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"1":{"start":{"line":15,"column":0},"end":{"line":15,"column":29}},"2":{"start":{"line":28,"column":4},"end":{"line":30,"column":5}},"3":{"start":{"line":29,"column":8},"end":{"line":29,"column":25}},"4":{"start":{"line":32,"column":4},"end":{"line":34,"column":5}},"5":{"start":{"line":33,"column":8},"end":{"line":33,"column":20}},"6":{"start":{"line":36,"column":4},"end":{"line":57,"column":5}},"7":{"start":{"line":38,"column":8},"end":{"line":43,"column":9}},"8":{"start":{"line":39,"column":24},"end":{"line":39,"column":61}},"9":{"start":{"line":40,"column":12},"end":{"line":42,"column":13}},"10":{"start":{"line":41,"column":16},"end":{"line":41,"column":27}},"11":{"start":{"line":45,"column":9},"end":{"line":57,"column":5}},"12":{"start":{"line":47,"column":8},"end":{"line":52,"column":9}},"13":{"start":{"line":48,"column":24},"end":{"line":48,"column":67}},"14":{"start":{"line":49,"column":12},"end":{"line":51,"column":13}},"15":{"start":{"line":50,"column":16},"end":{"line":50,"column":27}},"16":{"start":{"line":54,"column":9},"end":{"line":57,"column":5}},"17":{"start":{"line":56,"column":8},"end":{"line":56,"column":63}}},"fnMap":{"0":{"name":"findObject","decl":{"start":{"line":26,"column":9},"end":{"line":26,"column":19}},"loc":{"start":{"line":26,"column":47},"end":{"line":58,"column":1}},"line":26}},"branchMap":{"0":{"loc":{"start":{"line":28,"column":4},"end":{"line":30,"column":5}},"type":"if","locations":[{"start":{"line":28,"column":4},"end":{"line":30,"column":5}},{"start":{},"end":{}}],"line":28},"1":{"loc":{"start":{"line":32,"column":4},"end":{"line":34,"column":5}},"type":"if","locations":[{"start":{"line":32,"column":4},"end":{"line":34,"column":5}},{"start":{},"end":{}}],"line":32},"2":{"loc":{"start":{"line":32,"column":8},"end":{"line":32,"column":66}},"type":"binary-expr","locations":[{"start":{"line":32,"column":8},"end":{"line":32,"column":28}},{"start":{"line":32,"column":32},"end":{"line":32,"column":44}},{"start":{"line":32,"column":48},"end":{"line":32,"column":66}}],"line":32},"3":{"loc":{"start":{"line":36,"column":4},"end":{"line":57,"column":5}},"type":"if","locations":[{"start":{"line":36,"column":4},"end":{"line":57,"column":5}},{"start":{"line":45,"column":9},"end":{"line":57,"column":5}}],"line":36},"4":{"loc":{"start":{"line":40,"column":12},"end":{"line":42,"column":13}},"type":"if","locations":[{"start":{"line":40,"column":12},"end":{"line":42,"column":13}},{"start":{},"end":{}}],"line":40},"5":{"loc":{"start":{"line":45,"column":9},"end":{"line":57,"column":5}},"type":"if","locations":[{"start":{"line":45,"column":9},"end":{"line":57,"column":5}},{"start":{"line":54,"column":9},"end":{"line":57,"column":5}}],"line":45},"6":{"loc":{"start":{"line":45,"column":13},"end":{"line":45,"column":62}},"type":"binary-expr","locations":[{"start":{"line":45,"column":13},"end":{"line":45,"column":29}},{"start":{"line":45,"column":33},"end":{"line":45,"column":62}}],"line":45},"7":{"loc":{"start":{"line":49,"column":12},"end":{"line":51,"column":13}},"type":"if","locations":[{"start":{"line":49,"column":12},"end":{"line":51,"column":13}},{"start":{},"end":{}}],"line":49},"8":{"loc":{"start":{"line":54,"column":9},"end":{"line":57,"column":5}},"type":"if","locations":[{"start":{"line":54,"column":9},"end":{"line":57,"column":5}},{"start":{},"end":{}}],"line":54}},"s":{"0":1,"1":1,"2":11,"3":0,"4":11,"5":3,"6":8,"7":0,"8":0,"9":0,"10":0,"11":8,"12":3,"13":7,"14":7,"15":2,"16":5,"17":0},"f":{"0":11},"b":{"0":[0,11],"1":[3,8],"2":[11,11,11],"3":[0,8],"4":[0,0],"5":[3,5],"6":[8,3],"7":[2,5],"8":[0,5]},"inputSourceMap":{"version":3,"file":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/util/find-object.ts","sources":["/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/util/find-object.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;GAWG;;AAYH,6BAgCC;AA1CD;;;;;;;;;GASG;AACH,SAAwB,UAAU,CAAE,IAAS,EAAE,IAAY,EAAE,GAAQ,EAAE,QAAgB;IACrF,4BAA4B;IAC5B,IAAI,IAAI,IAAI,IAAI,EAAE,CAAC;QACjB,OAAO,SAAS,CAAA;IAClB,CAAC;IAED,qCAAqC;IACrC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAC/D,OAAO,IAAI,CAAA;IACb,CAAC;IAED,sBAAsB;IACtB,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC;QACxB,8BAA8B;QAC9B,KAAK,MAAM,IAAI,IAAI,IAAI,EAAE,CAAC;YACxB,MAAM,GAAG,GAAG,UAAU,CAAC,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,QAAQ,CAAC,CAAA;YACjD,IAAI,GAAG,KAAK,SAAS,EAAE,CAAC;gBACtB,OAAO,GAAG,CAAA;YACZ,CAAC;QACH,CAAC;IACH,CAAC;SAAM,IAAI,QAAQ,IAAI,IAAI,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC;QAC7D,+BAA+B;QAC/B,KAAK,MAAM,UAAU,IAAI,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC;YACxC,MAAM,GAAG,GAAG,UAAU,CAAC,UAAU,EAAE,IAAI,EAAE,GAAG,EAAE,QAAQ,CAAC,CAAA;YACvD,IAAI,GAAG,KAAK,SAAS,EAAE,CAAC;gBACtB,OAAO,GAAG,CAAA;YACZ,CAAC;QACH,CAAC;IACH,CAAC;SAAM,IAAI,QAAQ,IAAI,IAAI,EAAE,CAAC;QAC5B,+DAA+D;QAC/D,OAAO,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,IAAI,EAAE,GAAG,EAAE,QAAQ,CAAC,CAAA;IACxD,CAAC;AACH,CAAC","sourcesContent":["/**\n * BEGIN HEADER\n *\n * Contains:        Utility function\n * CVM-Role:        <none>\n * Maintainer:      Hendrik Erz\n * License:         GNU GPL v3\n *\n * Description:     The contained file can find an object in an arbitrary tree.\n *\n * END HEADER\n */\n\n/**\n * Traverses an arbitrary recursive object tree to find an object with a specific prop=val.\n *\n * @param   {any}            tree     The tree to traverse\n * @param   {string}         prop     The property that should be matched\n * @param   {any}            val      The value that the property should be checked for\n * @param   {string}         traverse The property over which the function traverses the tree\n *\n * @returns {any|undefined}           Either the correct object, or undefined\n */\nexport default function findObject (tree: any, prop: string, val: any, traverse: string): any|undefined {\n  // Is the tree even defined?\n  if (tree == null) {\n    return undefined\n  }\n\n  // First let's see if we can shortcut\n  if (!Array.isArray(tree) && prop in tree && tree[prop] === val) {\n    return tree\n  }\n\n  // Now search the tree\n  if (Array.isArray(tree)) {\n    // The tree itself is an array\n    for (const item of tree) {\n      const ret = findObject(item, prop, val, traverse)\n      if (ret !== undefined) {\n        return ret\n      }\n    }\n  } else if (traverse in tree && Array.isArray(tree[traverse])) {\n    // The descendants are an array\n    for (const descendant of tree[traverse]) {\n      const ret = findObject(descendant, prop, val, traverse)\n      if (ret !== undefined) {\n        return ret\n      }\n    }\n  } else if (traverse in tree) {\n    // Neither tree nor descendants are an array -> simple traverse\n    return findObject(tree[traverse], prop, val, traverse)\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"a3d866278b05da59d62011b5136509a3678cc1b5","contentHash":"012b8366ad61272b952a3ed92625fb3f345b3574631e463358041adca6a7e55d"},"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/util/format-date.ts":{"path":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/util/format-date.ts","statementMap":{"0":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"1":{"start":{"line":15,"column":0},"end":{"line":15,"column":29}},"2":{"start":{"line":16,"column":16},"end":{"line":16,"column":32}},"3":{"start":{"line":17,"column":24},"end":{"line":17,"column":51}},"4":{"start":{"line":29,"column":19},"end":{"line":29,"column":42}},"5":{"start":{"line":30,"column":15},"end":{"line":30,"column":101}},"6":{"start":{"line":31,"column":4},"end":{"line":46,"column":5}},"7":{"start":{"line":34,"column":8},"end":{"line":42,"column":9}},"8":{"start":{"line":35,"column":12},"end":{"line":35,"column":58}},"9":{"start":{"line":38,"column":12},"end":{"line":41,"column":52}},"10":{"start":{"line":45,"column":8},"end":{"line":45,"column":88}}},"fnMap":{"0":{"name":"formatDate","decl":{"start":{"line":27,"column":9},"end":{"line":27,"column":19}},"loc":{"start":{"line":27,"column":55},"end":{"line":47,"column":1}},"line":27}},"branchMap":{"0":{"loc":{"start":{"line":27,"column":37},"end":{"line":27,"column":53}},"type":"default-arg","locations":[{"start":{"line":27,"column":48},"end":{"line":27,"column":53}}],"line":27},"1":{"loc":{"start":{"line":30,"column":15},"end":{"line":30,"column":101}},"type":"cond-expr","locations":[{"start":{"line":30,"column":26},"end":{"line":30,"column":62}},{"start":{"line":30,"column":65},"end":{"line":30,"column":101}}],"line":30},"2":{"loc":{"start":{"line":31,"column":4},"end":{"line":46,"column":5}},"type":"if","locations":[{"start":{"line":31,"column":4},"end":{"line":46,"column":5}},{"start":{"line":44,"column":9},"end":{"line":46,"column":5}}],"line":31},"3":{"loc":{"start":{"line":34,"column":8},"end":{"line":42,"column":9}},"type":"if","locations":[{"start":{"line":34,"column":8},"end":{"line":42,"column":9}},{"start":{"line":37,"column":13},"end":{"line":42,"column":9}}],"line":34},"4":{"loc":{"start":{"line":38,"column":19},"end":{"line":41,"column":51}},"type":"cond-expr","locations":[{"start":{"line":41,"column":44},"end":{"line":41,"column":46}},{"start":{"line":41,"column":49},"end":{"line":41,"column":51}}],"line":38},"5":{"loc":{"start":{"line":38,"column":19},"end":{"line":41,"column":41}},"type":"binary-expr","locations":[{"start":{"line":38,"column":19},"end":{"line":41,"column":24}},{"start":{"line":41,"column":28},"end":{"line":41,"column":41}}],"line":38}},"s":{"0":1,"1":1,"2":1,"3":1,"4":7,"5":7,"6":7,"7":4,"8":0,"9":4,"10":3},"f":{"0":7},"b":{"0":[0],"1":[0,7],"2":[4,3],"3":[0,4],"4":[4,0],"5":[4,4]},"inputSourceMap":{"version":3,"file":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/util/format-date.ts","sources":["/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/util/format-date.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;GAWG;;AAcH,6BAoBC;AAhCD,iCAAgC;AAChC,oDAAwC;AAExC;;;;;;;;GAQG;AACH,SAAwB,UAAU,CAAE,OAAoB,EAAE,MAAc,EAAE,WAAoB,KAAK;;IACjG,MAAM,MAAM,GAAG,OAAO,YAAY,IAAI,CAAA;IACtC,MAAM,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,gBAAQ,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,gBAAQ,CAAC,UAAU,CAAC,OAAO,CAAC,CAAA;IACjF,IAAI,QAAQ,EAAE,CAAC;QACb,6EAA6E;QAC7E,kFAAkF;QAClF,IAAI,EAAE,CAAC,IAAI,CAAC,gBAAQ,CAAC,GAAG,EAAE,EAAE,SAAS,CAAC,CAAC,QAAQ,EAAE,CAAC,OAAiB,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC;YAC7E,OAAO,IAAA,qBAAK,EAAC,UAAU,CAAC,CAAA;QAC1B,CAAC;aAAM,CAAC;YACN,OAAO,MAAA,EAAE,CAAC,UAAU,CAAC;gBACnB,KAAK,EAAE,OAAO,EAAE,gCAAgC;gBAChD,MAAM;aACP,CAAC,mCAAI,EAAE,CAAA;QACV,CAAC;IACH,CAAC;SAAM,CAAC;QACN,OAAO,EAAE,CAAC,cAAc,CACtB,EAAE,SAAS,EAAE,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,EACzC,EAAE,MAAM,EAAE,CACX,CAAA;IACH,CAAC;AACH,CAAC","sourcesContent":["/**\n * BEGIN HEADER\n *\n * Contains:        Utility function\n * CVM-Role:        <none>\n * Maintainer:      Hendrik Erz\n * License:         GNU GPL v3\n *\n * Description:     This file contains a utility function to format dates\n *\n * END HEADER\n */\n\nimport { DateTime } from 'luxon'\nimport { trans } from '../i18n-renderer'\n\n/**\n * Formats a date based on the given locale.\n *\n * @param   {Date|number}  dateObj           A JavaScript Date object or a timestamp in milliseconds\n * @param   {string}       locale            The locale to use for the formatter\n * @param   {boolean}      [relative=false]  Optional. If true, output a relative timestamp\n *\n * @return  {string}                         The formatted date string\n */\nexport default function formatDate (dateObj: Date|number, locale: string, relative: boolean = false): string {\n  const isDate = dateObj instanceof Date\n  const dt = (isDate) ? DateTime.fromJSDate(dateObj) : DateTime.fromMillis(dateObj)\n  if (relative) {\n    // Check if there is at least a minute difference between the datetime object\n    // and now. If not, simply output \"just now\", else the actual relative difference.\n    if (dt.diff(DateTime.now(), 'minutes').toObject().minutes as number * -1 < 1) {\n      return trans('just now')\n    } else {\n      return dt.toRelative({\n        style: 'short', // Can be short, narrow, or long\n        locale\n      }) ?? ''\n    }\n  } else {\n    return dt.toLocaleString(\n      { dateStyle: 'long', timeStyle: 'short' },\n      { locale }\n    )\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"aaeb1d2a51a9bcb00913640e0f8deeb5a001e7a1","contentHash":"112df94942d8b3de859934b2ed26eb353ab9f27b92d48da6a79a958d82782c38"},"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/i18n-renderer.ts":{"path":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/i18n-renderer.ts","statementMap":{"0":{"start":{"line":16,"column":22},"end":{"line":18,"column":1}},"1":{"start":{"line":17,"column":4},"end":{"line":17,"column":62}},"2":{"start":{"line":19,"column":0},"end":{"line":19,"column":62}},"3":{"start":{"line":20,"column":0},"end":{"line":20,"column":28}},"4":{"start":{"line":21,"column":0},"end":{"line":21,"column":22}},"5":{"start":{"line":22,"column":24},"end":{"line":22,"column":65}},"6":{"start":{"line":23,"column":20},"end":{"line":23,"column":30}},"7":{"start":{"line":31,"column":4},"end":{"line":31,"column":48}},"8":{"start":{"line":42,"column":4},"end":{"line":44,"column":5}},"9":{"start":{"line":43,"column":8},"end":{"line":43,"column":21}},"10":{"start":{"line":45,"column":20},"end":{"line":45,"column":45}},"11":{"start":{"line":46,"column":4},"end":{"line":51,"column":5}},"12":{"start":{"line":47,"column":8},"end":{"line":47,"column":40}},"13":{"start":{"line":50,"column":8},"end":{"line":50,"column":21}},"14":{"start":{"line":63,"column":22},"end":{"line":63,"column":43}},"15":{"start":{"line":64,"column":4},"end":{"line":66,"column":5}},"16":{"start":{"line":65,"column":8},"end":{"line":65,"column":51}},"17":{"start":{"line":70,"column":23},"end":{"line":72,"column":6}},"18":{"start":{"line":73,"column":4},"end":{"line":73,"column":22}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":16,"column":56},"end":{"line":16,"column":57}},"loc":{"start":{"line":16,"column":71},"end":{"line":18,"column":1}},"line":16},"1":{"name":"loadData","decl":{"start":{"line":30,"column":15},"end":{"line":30,"column":23}},"loc":{"start":{"line":30,"column":26},"end":{"line":32,"column":1}},"line":30},"2":{"name":"getTranslation","decl":{"start":{"line":41,"column":9},"end":{"line":41,"column":23}},"loc":{"start":{"line":41,"column":31},"end":{"line":52,"column":1}},"line":41},"3":{"name":"trans","decl":{"start":{"line":62,"column":9},"end":{"line":62,"column":14}},"loc":{"start":{"line":62,"column":31},"end":{"line":74,"column":1}},"line":62}},"branchMap":{"0":{"loc":{"start":{"line":16,"column":22},"end":{"line":18,"column":1}},"type":"binary-expr","locations":[{"start":{"line":16,"column":23},"end":{"line":16,"column":27}},{"start":{"line":16,"column":31},"end":{"line":16,"column":51}},{"start":{"line":16,"column":56},"end":{"line":18,"column":1}}],"line":16},"1":{"loc":{"start":{"line":17,"column":11},"end":{"line":17,"column":61}},"type":"cond-expr","locations":[{"start":{"line":17,"column":37},"end":{"line":17,"column":40}},{"start":{"line":17,"column":43},"end":{"line":17,"column":61}}],"line":17},"2":{"loc":{"start":{"line":17,"column":12},"end":{"line":17,"column":33}},"type":"binary-expr","locations":[{"start":{"line":17,"column":12},"end":{"line":17,"column":15}},{"start":{"line":17,"column":19},"end":{"line":17,"column":33}}],"line":17},"3":{"loc":{"start":{"line":42,"column":4},"end":{"line":44,"column":5}},"type":"if","locations":[{"start":{"line":42,"column":4},"end":{"line":44,"column":5}},{"start":{},"end":{}}],"line":42},"4":{"loc":{"start":{"line":46,"column":4},"end":{"line":51,"column":5}},"type":"if","locations":[{"start":{"line":46,"column":4},"end":{"line":51,"column":5}},{"start":{"line":49,"column":9},"end":{"line":51,"column":5}}],"line":46},"5":{"loc":{"start":{"line":46,"column":8},"end":{"line":46,"column":59}},"type":"binary-expr","locations":[{"start":{"line":46,"column":8},"end":{"line":46,"column":24}},{"start":{"line":46,"column":28},"end":{"line":46,"column":59}}],"line":46}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":8,"9":8,"10":0,"11":0,"12":0,"13":0,"14":8,"15":8,"16":0,"17":8,"18":8},"f":{"0":1,"1":0,"2":8,"3":8},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1],"3":[8,0],"4":[0,0],"5":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/i18n-renderer.ts","sources":["/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/i18n-renderer.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;GAaG;;;;;AAYH,4BAEC;AAiCD,sBAeC;AA5DD,kEAAwC;AACxC,MAAM,WAAW,GAAG,MAAM,CAAC,GAAG,CAAA;AAE9B,IAAI,QAAa,CAAA;AAEjB;;;;GAIG;AACI,KAAK,UAAU,QAAQ;IAC5B,QAAQ,GAAG,MAAM,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,CAAA;AAC7C,CAAC;AAED;;;;;;;GAOG;AACH,SAAS,cAAc,CAAE,KAAa;IACpC,IAAI,QAAQ,KAAK,SAAS,EAAE,CAAC;QAC3B,OAAO,KAAK,CAAA;IACd,CAAC;IAED,MAAM,OAAO,GAAG,QAAQ,CAAC,YAAY,CAAC,EAAE,CAAC,CAAA;IAEzC,IAAI,KAAK,IAAI,OAAO,IAAI,OAAO,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC;QACxD,OAAO,OAAO,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAA;IACjC,CAAC;SAAM,CAAC;QACN,OAAO,KAAK,CAAA;IACd,CAAC;AACH,CAAC;AAED;;;;;;;;GAQG;AACH,SAAgB,KAAK,CAAE,KAAa,EAAE,GAAG,IAAW;IAClD,IAAI,WAAW,GAAG,cAAc,CAAC,KAAK,CAAC,CAAA;IAEvC,KAAK,MAAM,CAAC,IAAI,IAAI,EAAE,CAAC;QACrB,WAAW,GAAG,WAAW,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC,CAAA,CAAC,oCAAoC;IACjF,CAAC;IAED,4EAA4E;IAC5E,8EAA8E;IAC9E,QAAQ;IACR,MAAM,UAAU,GAAG,IAAA,uBAAY,EAAC,WAAW,EAAE;QAC3C,WAAW,EAAE,CAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,CAAE;KACvC,CAAC,CAAA;IAEF,OAAO,UAAU,CAAA;AACnB,CAAC","sourcesContent":["/**\n * @ignore\n * BEGIN HEADER\n *\n * Contains:        Trans-function for the renderer\n * CVM-Role:        Utility Function\n * Maintainer:      Hendrik Erz\n * License:         GNU GPL v3\n *\n * Description:     This is the trans-function that is specifically made for\n *                  sandboxed renderer processes.\n *\n * END HEADER\n */\n\nimport sanitizeHtml from 'sanitize-html'\nconst ipcRenderer = window.ipc\n\nlet i18nData: any\n\n/**\n * Call this function during window registration to load the translation data\n * immediately after start so that the translations are available. NOTE: This\n * function produces a side-effect in that it sets the local module variable.\n */\nexport async function loadData (): Promise<void> {\n  i18nData = await ipcRenderer.invoke('i18n')\n}\n\n/**\n * Takes a message ID and returns the appropriate translated message string. If\n * there is no language data loaded, this function returns the message ID.\n *\n * @param   {string}  msgid  The message ID to return a translation for\n *\n * @return  {string}         The translation, or the message ID if no translations were found.\n */\nfunction getTranslation (msgid: string): string {\n  if (i18nData === undefined) {\n    return msgid\n  }\n\n  const context = i18nData.translations['']\n\n  if (msgid in context && context[msgid].msgstr[0] !== '') {\n    return context[msgid].msgstr[0]\n  } else {\n    return msgid\n  }\n}\n\n/**\n * Translates the given message ID\n *\n * @param   {string}  msgid  The message ID to translate\n * @param   {any[]}   args   Provide optional arguments to replace in the\n *                           translation. One argument replaces one %s, in order.\n *\n * @return  {string}         The translated and replaced string.\n */\nexport function trans (msgid: string, ...args: any[]): string {\n  let transString = getTranslation(msgid)\n\n  for (const a of args) {\n    transString = transString.replace('%s', a) // Always replace one %s with an arg\n  }\n\n  // Finally, before returning the translation, sanitize it. As these are only\n  // translation strings, we can basically only allow a VERY small subset of all\n  // tags.\n  const safeString = sanitizeHtml(transString, {\n    allowedTags: [ 'em', 'strong', 'kbd' ]\n  })\n\n  return safeString\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"499877b42f2c02aa8fc696e65368eaf909aa2e93","contentHash":"d89326aff484cfe2c1d4a9af849dd8a7d503607fa8d07d79d0ab284d3b809488"},"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/app/service-providers/links/directed-graph.ts":{"path":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/app/service-providers/links/directed-graph.ts","statementMap":{"0":{"start":{"line":15,"column":0},"end":{"line":15,"column":62}},"1":{"start":{"line":16,"column":23},"end":{"line":16,"column":30}},"2":{"start":{"line":19,"column":8},"end":{"line":19,"column":24}},"3":{"start":{"line":20,"column":8},"end":{"line":20,"column":28}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":30}},"5":{"start":{"line":22,"column":8},"end":{"line":22,"column":34}},"6":{"start":{"line":25,"column":8},"end":{"line":27,"column":9}},"7":{"start":{"line":26,"column":12},"end":{"line":26,"column":104}},"8":{"start":{"line":28,"column":8},"end":{"line":32,"column":10}},"9":{"start":{"line":35,"column":8},"end":{"line":35,"column":33}},"10":{"start":{"line":38,"column":8},"end":{"line":38,"column":34}},"11":{"start":{"line":40,"column":8},"end":{"line":40,"column":34}},"12":{"start":{"line":43,"column":8},"end":{"line":43,"column":37}},"13":{"start":{"line":46,"column":8},"end":{"line":46,"column":33}},"14":{"start":{"line":49,"column":8},"end":{"line":49,"column":60}},"15":{"start":{"line":49,"column":42},"end":{"line":49,"column":51}},"16":{"start":{"line":52,"column":8},"end":{"line":52,"column":39}},"17":{"start":{"line":55,"column":8},"end":{"line":55,"column":30}},"18":{"start":{"line":58,"column":23},"end":{"line":58,"column":60}},"19":{"start":{"line":58,"column":48},"end":{"line":58,"column":59}},"20":{"start":{"line":59,"column":8},"end":{"line":61,"column":9}},"21":{"start":{"line":60,"column":12},"end":{"line":60,"column":26}},"22":{"start":{"line":62,"column":21},"end":{"line":67,"column":9}},"23":{"start":{"line":68,"column":8},"end":{"line":68,"column":34}},"24":{"start":{"line":69,"column":8},"end":{"line":71,"column":9}},"25":{"start":{"line":70,"column":12},"end":{"line":70,"column":38}},"26":{"start":{"line":72,"column":8},"end":{"line":72,"column":20}},"27":{"start":{"line":75,"column":17},"end":{"line":75,"column":58}},"28":{"start":{"line":75,"column":42},"end":{"line":75,"column":57}},"29":{"start":{"line":76,"column":17},"end":{"line":76,"column":58}},"30":{"start":{"line":76,"column":42},"end":{"line":76,"column":57}},"31":{"start":{"line":77,"column":8},"end":{"line":79,"column":9}},"32":{"start":{"line":78,"column":12},"end":{"line":78,"column":40}},"33":{"start":{"line":80,"column":8},"end":{"line":82,"column":9}},"34":{"start":{"line":81,"column":12},"end":{"line":81,"column":40}},"35":{"start":{"line":83,"column":8},"end":{"line":83,"column":27}},"36":{"start":{"line":84,"column":8},"end":{"line":84,"column":27}},"37":{"start":{"line":85,"column":8},"end":{"line":85,"column":52}},"38":{"start":{"line":86,"column":8},"end":{"line":88,"column":9}},"39":{"start":{"line":87,"column":12},"end":{"line":87,"column":38}},"40":{"start":{"line":91,"column":18},"end":{"line":91,"column":63}},"41":{"start":{"line":91,"column":45},"end":{"line":91,"column":62}},"42":{"start":{"line":92,"column":8},"end":{"line":94,"column":9}},"43":{"start":{"line":93,"column":12},"end":{"line":93,"column":69}},"44":{"start":{"line":95,"column":8},"end":{"line":95,"column":24}},"45":{"start":{"line":99,"column":8},"end":{"line":101,"column":9}},"46":{"start":{"line":100,"column":12},"end":{"line":100,"column":41}},"47":{"start":{"line":103,"column":8},"end":{"line":103,"column":30}},"48":{"start":{"line":104,"column":22},"end":{"line":137,"column":9}},"49":{"start":{"line":106,"column":12},"end":{"line":108,"column":13}},"50":{"start":{"line":107,"column":16},"end":{"line":107,"column":23}},"51":{"start":{"line":111,"column":12},"end":{"line":114,"column":13}},"52":{"start":{"line":112,"column":16},"end":{"line":112,"column":71}},"53":{"start":{"line":113,"column":16},"end":{"line":113,"column":49}},"54":{"start":{"line":115,"column":12},"end":{"line":115,"column":41}},"55":{"start":{"line":120,"column":31},"end":{"line":129,"column":14}},"56":{"start":{"line":121,"column":32},"end":{"line":121,"column":86}},"57":{"start":{"line":123,"column":16},"end":{"line":128,"column":17}},"58":{"start":{"line":124,"column":20},"end":{"line":124,"column":39}},"59":{"start":{"line":127,"column":20},"end":{"line":127,"column":39}},"60":{"start":{"line":130,"column":12},"end":{"line":136,"column":13}},"61":{"start":{"line":131,"column":26},"end":{"line":131,"column":67}},"62":{"start":{"line":131,"column":51},"end":{"line":131,"column":66}},"63":{"start":{"line":132,"column":16},"end":{"line":134,"column":17}},"64":{"start":{"line":133,"column":20},"end":{"line":133,"column":83}},"65":{"start":{"line":135,"column":16},"end":{"line":135,"column":36}},"66":{"start":{"line":138,"column":8},"end":{"line":140,"column":9}},"67":{"start":{"line":139,"column":12},"end":{"line":139,"column":21}},"68":{"start":{"line":143,"column":0},"end":{"line":143,"column":32}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":18,"column":4},"end":{"line":18,"column":5}},"loc":{"start":{"line":18,"column":18},"end":{"line":23,"column":5}},"line":18},"1":{"name":"(anonymous_1)","decl":{"start":{"line":24,"column":4},"end":{"line":24,"column":5}},"loc":{"start":{"line":24,"column":16},"end":{"line":33,"column":5}},"line":24},"2":{"name":"(anonymous_2)","decl":{"start":{"line":34,"column":4},"end":{"line":34,"column":5}},"loc":{"start":{"line":34,"column":21},"end":{"line":36,"column":5}},"line":34},"3":{"name":"(anonymous_3)","decl":{"start":{"line":37,"column":4},"end":{"line":37,"column":5}},"loc":{"start":{"line":37,"column":19},"end":{"line":41,"column":5}},"line":37},"4":{"name":"(anonymous_4)","decl":{"start":{"line":42,"column":4},"end":{"line":42,"column":5}},"loc":{"start":{"line":42,"column":24},"end":{"line":44,"column":5}},"line":42},"5":{"name":"(anonymous_5)","decl":{"start":{"line":45,"column":4},"end":{"line":45,"column":5}},"loc":{"start":{"line":45,"column":20},"end":{"line":47,"column":5}},"line":45},"6":{"name":"(anonymous_6)","decl":{"start":{"line":48,"column":4},"end":{"line":48,"column":5}},"loc":{"start":{"line":48,"column":24},"end":{"line":50,"column":5}},"line":48},"7":{"name":"(anonymous_7)","decl":{"start":{"line":49,"column":37},"end":{"line":49,"column":38}},"loc":{"start":{"line":49,"column":42},"end":{"line":49,"column":51}},"line":49},"8":{"name":"(anonymous_8)","decl":{"start":{"line":51,"column":4},"end":{"line":51,"column":5}},"loc":{"start":{"line":51,"column":26},"end":{"line":53,"column":5}},"line":51},"9":{"name":"(anonymous_9)","decl":{"start":{"line":54,"column":4},"end":{"line":54,"column":5}},"loc":{"start":{"line":54,"column":19},"end":{"line":56,"column":5}},"line":54},"10":{"name":"(anonymous_10)","decl":{"start":{"line":57,"column":4},"end":{"line":57,"column":5}},"loc":{"start":{"line":57,"column":25},"end":{"line":73,"column":5}},"line":57},"11":{"name":"(anonymous_11)","decl":{"start":{"line":58,"column":43},"end":{"line":58,"column":44}},"loc":{"start":{"line":58,"column":48},"end":{"line":58,"column":59}},"line":58},"12":{"name":"(anonymous_12)","decl":{"start":{"line":74,"column":4},"end":{"line":74,"column":5}},"loc":{"start":{"line":74,"column":39},"end":{"line":89,"column":5}},"line":74},"13":{"name":"(anonymous_13)","decl":{"start":{"line":75,"column":37},"end":{"line":75,"column":38}},"loc":{"start":{"line":75,"column":42},"end":{"line":75,"column":57}},"line":75},"14":{"name":"(anonymous_14)","decl":{"start":{"line":76,"column":37},"end":{"line":76,"column":38}},"loc":{"start":{"line":76,"column":42},"end":{"line":76,"column":57}},"line":76},"15":{"name":"(anonymous_15)","decl":{"start":{"line":90,"column":4},"end":{"line":90,"column":5}},"loc":{"start":{"line":90,"column":28},"end":{"line":96,"column":5}},"line":90},"16":{"name":"(anonymous_16)","decl":{"start":{"line":91,"column":38},"end":{"line":91,"column":39}},"loc":{"start":{"line":91,"column":45},"end":{"line":91,"column":62}},"line":91},"17":{"name":"(anonymous_17)","decl":{"start":{"line":97,"column":4},"end":{"line":97,"column":5}},"loc":{"start":{"line":97,"column":25},"end":{"line":141,"column":5}},"line":97},"18":{"name":"(anonymous_18)","decl":{"start":{"line":104,"column":22},"end":{"line":104,"column":23}},"loc":{"start":{"line":104,"column":45},"end":{"line":137,"column":9}},"line":104},"19":{"name":"(anonymous_19)","decl":{"start":{"line":121,"column":24},"end":{"line":121,"column":25}},"loc":{"start":{"line":121,"column":32},"end":{"line":121,"column":86}},"line":121},"20":{"name":"(anonymous_20)","decl":{"start":{"line":122,"column":21},"end":{"line":122,"column":22}},"loc":{"start":{"line":122,"column":29},"end":{"line":129,"column":13}},"line":122},"21":{"name":"(anonymous_21)","decl":{"start":{"line":131,"column":46},"end":{"line":131,"column":47}},"loc":{"start":{"line":131,"column":51},"end":{"line":131,"column":66}},"line":131}},"branchMap":{"0":{"loc":{"start":{"line":25,"column":8},"end":{"line":27,"column":9}},"type":"if","locations":[{"start":{"line":25,"column":8},"end":{"line":27,"column":9}},{"start":{},"end":{}}],"line":25},"1":{"loc":{"start":{"line":59,"column":8},"end":{"line":61,"column":9}},"type":"if","locations":[{"start":{"line":59,"column":8},"end":{"line":61,"column":9}},{"start":{},"end":{}}],"line":59},"2":{"loc":{"start":{"line":69,"column":8},"end":{"line":71,"column":9}},"type":"if","locations":[{"start":{"line":69,"column":8},"end":{"line":71,"column":9}},{"start":{},"end":{}}],"line":69},"3":{"loc":{"start":{"line":74,"column":27},"end":{"line":74,"column":37}},"type":"default-arg","locations":[{"start":{"line":74,"column":36},"end":{"line":74,"column":37}}],"line":74},"4":{"loc":{"start":{"line":77,"column":8},"end":{"line":79,"column":9}},"type":"if","locations":[{"start":{"line":77,"column":8},"end":{"line":79,"column":9}},{"start":{},"end":{}}],"line":77},"5":{"loc":{"start":{"line":80,"column":8},"end":{"line":82,"column":9}},"type":"if","locations":[{"start":{"line":80,"column":8},"end":{"line":82,"column":9}},{"start":{},"end":{}}],"line":80},"6":{"loc":{"start":{"line":86,"column":8},"end":{"line":88,"column":9}},"type":"if","locations":[{"start":{"line":86,"column":8},"end":{"line":88,"column":9}},{"start":{},"end":{}}],"line":86},"7":{"loc":{"start":{"line":92,"column":8},"end":{"line":94,"column":9}},"type":"if","locations":[{"start":{"line":92,"column":8},"end":{"line":94,"column":9}},{"start":{},"end":{}}],"line":92},"8":{"loc":{"start":{"line":106,"column":12},"end":{"line":108,"column":13}},"type":"if","locations":[{"start":{"line":106,"column":12},"end":{"line":108,"column":13}},{"start":{},"end":{}}],"line":106},"9":{"loc":{"start":{"line":111,"column":12},"end":{"line":114,"column":13}},"type":"if","locations":[{"start":{"line":111,"column":12},"end":{"line":114,"column":13}},{"start":{},"end":{}}],"line":111},"10":{"loc":{"start":{"line":121,"column":32},"end":{"line":121,"column":86}},"type":"binary-expr","locations":[{"start":{"line":121,"column":32},"end":{"line":121,"column":57}},{"start":{"line":121,"column":61},"end":{"line":121,"column":86}}],"line":121},"11":{"loc":{"start":{"line":123,"column":16},"end":{"line":128,"column":17}},"type":"if","locations":[{"start":{"line":123,"column":16},"end":{"line":128,"column":17}},{"start":{"line":126,"column":21},"end":{"line":128,"column":17}}],"line":123},"12":{"loc":{"start":{"line":132,"column":16},"end":{"line":134,"column":17}},"type":"if","locations":[{"start":{"line":132,"column":16},"end":{"line":134,"column":17}},{"start":{},"end":{}}],"line":132}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":2,"13":1,"14":1,"15":9,"16":5,"17":0,"18":10,"19":37,"20":10,"21":1,"22":9,"23":9,"24":9,"25":9,"26":9,"27":10,"28":29,"29":10,"30":28,"31":10,"32":1,"33":10,"34":5,"35":10,"36":10,"37":10,"38":10,"39":10,"40":0,"41":0,"42":0,"43":0,"44":0,"45":19,"46":95,"47":19,"48":19,"49":285,"50":190,"51":95,"52":32,"53":32,"54":95,"55":95,"56":609,"57":190,"58":95,"59":95,"60":95,"61":190,"62":498,"63":190,"64":0,"65":190,"66":19,"67":95,"68":1},"f":{"0":1,"1":0,"2":0,"3":0,"4":2,"5":1,"6":1,"7":9,"8":5,"9":0,"10":10,"11":37,"12":10,"13":29,"14":28,"15":0,"16":0,"17":19,"18":285,"19":609,"20":190,"21":498},"b":{"0":[0,0],"1":[1,9],"2":[9,0],"3":[10],"4":[1,9],"5":[5,5],"6":[10,0],"7":[0,0],"8":[190,95],"9":[32,63],"10":[609,514],"11":[95,95],"12":[0,190]},"inputSourceMap":{"version":3,"file":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/app/service-providers/links/directed-graph.ts","sources":["/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/app/service-providers/links/directed-graph.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @ignore\n * BEGIN HEADER\n *\n * Contains:        DirectedGraph\n * CVM-Role:        Model\n * Maintainer:      Hendrik Erz\n * License:         GNU GPL v3\n *\n * Description:     This class implements a directed graph\n *\n * END HEADER\n */\n\nimport type { GraphArc, GraphVertex, LinkGraph } from '@dts/common/graph'\n\nconst NONE_COMPONENT = 'Files'\n\nexport default class DirectedGraph {\n  private readonly _arcs: GraphArc[]\n  private readonly _vertices: GraphVertex[]\n  private _components: string[]\n  private _inOperation: boolean\n\n  constructor () {\n    this._arcs = []\n    this._vertices = []\n    this._components = []\n    this._inOperation = false\n  }\n\n  get graph (): LinkGraph {\n    if (this._inOperation) {\n      throw new Error('Graph is currently in an operation. Did you forget to call endOperation?')\n    }\n    return {\n      nodes: this._vertices,\n      links: this._arcs,\n      components: this._components\n    }\n  }\n\n  startOperation (): void {\n    this._inOperation = true\n  }\n\n  endOperation (): void {\n    this._inOperation = false\n    // Now we can recalculate all the metrics and run the algorithms\n    this.identifyComponents()\n  }\n\n  get countVertices (): number {\n    return this._vertices.length\n  }\n\n  get countArcs (): number {\n    return this._arcs.length\n  }\n\n  get countIsolates (): number {\n    return this._vertices.filter(V => V.isolate).length\n  }\n\n  get countComponents (): number {\n    return this._components.length\n  }\n\n  get vertices (): GraphVertex[] {\n    return this._vertices\n  }\n\n  addVertex (id: string, label?: string): GraphVertex {\n    const foundV = this._vertices.find(V => V.id === id)\n    if (foundV !== undefined) {\n      return foundV\n    }\n\n    const newV = {\n      id,\n      label,\n      component: NONE_COMPONENT,\n      isolate: true\n    }\n\n    this._vertices.push(newV)\n    if (!this._inOperation) {\n      this.identifyComponents()\n    }\n    return newV\n  }\n\n  addArc (source: string, target: string, weight: number = 1): void {\n    let sV = this._vertices.find(V => V.id === source)\n    let tV = this._vertices.find(V => V.id === target)\n\n    if (sV === undefined) {\n      sV = this.addVertex(source)\n    }\n    if (tV === undefined) {\n      tV = this.addVertex(target)\n    }\n\n    sV.isolate = false\n    tV.isolate = false\n    this._arcs.push({ source, target, weight })\n\n    if (!this._inOperation) {\n      this.identifyComponents()\n    }\n  }\n\n  setLabel (vertex: string, label: string): void {\n    const V = this._vertices.find(ver => ver.id === vertex)\n\n    if (V === undefined) {\n      throw new Error(`Could not set label for V(${vertex})!`)\n    }\n\n    V.label = label\n  }\n\n  private identifyComponents (): void {\n    // First, reset all components\n    for (const V of this._vertices) {\n      V.component = NONE_COMPONENT\n    }\n\n    // We need to also reset the components\n    this._components = []\n\n    const visit = (source: GraphVertex, component?: string): void => {\n      // This node already is part of a component\n      if (source.component !== NONE_COMPONENT) {\n        return\n      }\n\n      // Now we know that this vertex does not yet have a component, i.e. it's\n      // not part of an already existing component. So create a new one\n      if (component === undefined) {\n        component = `Component ${this._components.length + 1}`\n        this._components.push(component)\n      }\n\n      source.component = component\n\n      // NOTE: Here we must treat the network as undirected in order to create\n      // components. For this, we retrieve every arc that has the current vertex\n      // either as its head or tail, then map to the opposite end of the arc and\n      // resolve to the nodes.\n      const allTargets = this._arcs\n        .filter(link => link.source === source.id || link.target === source.id)\n        .map(link => {\n          if (link.target === source.id) {\n            return link.source\n          } else {\n            return link.target\n          }\n        })\n\n      for (const target of allTargets) {\n        const V = this._vertices.find(V => V.id === target)\n        if (V === undefined) {\n          throw new Error(`${target} for ${source.id} was not defined!`)\n        }\n        visit(V, component)\n      }\n    }\n\n    for (const V of this._vertices) {\n      visit(V)\n    }\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"e82e8cecbed45ba66e5852c1bf11de89cf008ea6","contentHash":"f9fc27e37f1242040a936e126baa4de70c9683f6f380a862b3a3bf1d6e2279b5"},"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/util/hash.ts":{"path":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/util/hash.ts","statementMap":{"0":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"1":{"start":{"line":15,"column":0},"end":{"line":15,"column":28}},"2":{"start":{"line":23,"column":15},"end":{"line":23,"column":16}},"3":{"start":{"line":25,"column":4},"end":{"line":26,"column":20}},"4":{"start":{"line":26,"column":8},"end":{"line":26,"column":20}},"5":{"start":{"line":27,"column":4},"end":{"line":31,"column":5}},"6":{"start":{"line":28,"column":8},"end":{"line":28,"column":35}},"7":{"start":{"line":29,"column":8},"end":{"line":29,"column":42}},"8":{"start":{"line":30,"column":8},"end":{"line":30,"column":18}},"9":{"start":{"line":32,"column":4},"end":{"line":32,"column":16}}},"fnMap":{"0":{"name":"default_1","decl":{"start":{"line":22,"column":9},"end":{"line":22,"column":18}},"loc":{"start":{"line":22,"column":27},"end":{"line":33,"column":1}},"line":22}},"branchMap":{"0":{"loc":{"start":{"line":25,"column":4},"end":{"line":26,"column":20}},"type":"if","locations":[{"start":{"line":25,"column":4},"end":{"line":26,"column":20}},{"start":{},"end":{}}],"line":25}},"s":{"0":1,"1":1,"2":7,"3":7,"4":1,"5":6,"6":18,"7":18,"8":18,"9":6},"f":{"0":7},"b":{"0":[1,6]},"inputSourceMap":{"version":3,"file":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/util/hash.ts","sources":["/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/util/hash.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;GAWG;;AAQH,4BAYC;AAlBD;;;;;GAKG;AACH,mBAAyB,MAAc;IACrC,IAAI,IAAI,GAAG,CAAC,CAAA;IACZ,IAAI,CAAC,EAAE,GAAG,CAAA;IAEV,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC;QAAE,OAAO,IAAI,CAAA;IAEpC,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;QACnC,GAAG,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAA;QAC1B,IAAI,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,GAAG,CAAA;QACjC,IAAI,IAAI,CAAC,CAAA,CAAC,2BAA2B;IACvC,CAAC;IACD,OAAO,IAAI,CAAA;AACb,CAAC","sourcesContent":["/**\n * BEGIN HEADER\n *\n * Contains:        Utility function\n * CVM-Role:        <none>\n * Maintainer:      Hendrik Erz\n * License:         GNU GPL v3\n *\n * Description:     This file contains a utility function to hash strings.\n *\n * END HEADER\n */\n\n/**\n * Basic hashing function (thanks to https://stackoverflow.com/a/7616484)\n *\n * @param  {string} string The string that should be hashed\n * @return {number}        The hash of the given string\n */\nexport default function (string: string): number {\n  let hash = 0\n  let i, chr\n\n  if (string.length === 0) return hash\n\n  for (i = 0; i < string.length; i++) {\n    chr = string.charCodeAt(i)\n    hash = ((hash << 5) - hash) + chr\n    hash |= 0 // Convert to 64bit integer\n  }\n  return hash\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"3364561328816de170e4be66475be90350205ffa","contentHash":"1634b7080997cf3e8610ba3f88c770c4697675b6b46cbe2a0c38adc1fd3805f8"},"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/util/is-function.ts":{"path":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/util/is-function.ts","statementMap":{"0":{"start":{"line":15,"column":0},"end":{"line":15,"column":62}},"1":{"start":{"line":16,"column":0},"end":{"line":16,"column":28}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":76}}},"fnMap":{"0":{"name":"default_1","decl":{"start":{"line":22,"column":9},"end":{"line":22,"column":18}},"loc":{"start":{"line":22,"column":29},"end":{"line":29,"column":1}},"line":22}},"branchMap":{},"s":{"0":1,"1":1,"2":5},"f":{"0":5},"b":{},"inputSourceMap":{"version":3,"file":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/util/is-function.ts","sources":["/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/util/is-function.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;GAYG;;AAOH,4BAOC;AAZD;;;;EAIE;AACF,mBAAyB,QAAa;IACpC,0EAA0E;IAC1E,wEAAwE;IACxE,0EAA0E;IAC1E,0EAA0E;IAC1E,uEAAuE;IACvE,OAAO,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,mBAAmB,CAAA;AACzE,CAAC","sourcesContent":["/**\n * BEGIN HEADER\n *\n * Contains:        Utility function\n * CVM-Role:        <none>\n * Maintainer:      Hendrik Erz\n * License:         GNU GPL v3\n *\n * Description:     This file contains a utility function to determine a\n *                  callback is actually a function.\n *\n * END HEADER\n */\n\n/**\n* Returns true, if the passed callback is actually callable.\n* @param  {Function} callback The callback variable that should be tested\n* @return {Boolean}        Whether or not the given callback is actually callable.\n*/\nexport default function (callback: any): boolean {\n  // We are calling the toString-function of the object prototype, as we can\n  // be sure it returns Function, if the callback was actually a function.\n  // We could also use the toString-method from any newly created object {},\n  // as it will inherit the unaltered tostring method from Object.prototype.\n  // Further reading: http://luxiyalu.com/object-prototype-tostring-call/\n  return Object.prototype.toString.call(callback) === '[object Function]'\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"16737892ae32e27c53b95bd3fae2daaf23e18abd","contentHash":"59f3a2ec944e6c09982fcd5a840febd9ae6573754fe60aa6b0a8b5db29acc1a5"},"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/util/localise-number.ts":{"path":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/util/localise-number.ts","statementMap":{"0":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"1":{"start":{"line":15,"column":0},"end":{"line":15,"column":28}},"2":{"start":{"line":16,"column":24},"end":{"line":16,"column":51}},"3":{"start":{"line":25,"column":4},"end":{"line":27,"column":5}},"4":{"start":{"line":26,"column":8},"end":{"line":26,"column":33}},"5":{"start":{"line":28,"column":16},"end":{"line":28,"column":47}},"6":{"start":{"line":29,"column":18},"end":{"line":29,"column":49}},"7":{"start":{"line":31,"column":4},"end":{"line":32,"column":20}},"8":{"start":{"line":32,"column":8},"end":{"line":32,"column":20}},"9":{"start":{"line":33,"column":4},"end":{"line":34,"column":22}},"10":{"start":{"line":34,"column":8},"end":{"line":34,"column":22}},"11":{"start":{"line":36,"column":21},"end":{"line":36,"column":26}},"12":{"start":{"line":37,"column":17},"end":{"line":37,"column":19}},"13":{"start":{"line":38,"column":4},"end":{"line":41,"column":5}},"14":{"start":{"line":39,"column":8},"end":{"line":39,"column":26}},"15":{"start":{"line":40,"column":8},"end":{"line":40,"column":34}},"16":{"start":{"line":43,"column":4},"end":{"line":46,"column":5}},"17":{"start":{"line":44,"column":8},"end":{"line":44,"column":49}},"18":{"start":{"line":45,"column":8},"end":{"line":45,"column":36}},"19":{"start":{"line":47,"column":14},"end":{"line":47,"column":16}},"20":{"start":{"line":48,"column":4},"end":{"line":48,"column":28}},"21":{"start":{"line":49,"column":14},"end":{"line":49,"column":15}},"22":{"start":{"line":50,"column":4},"end":{"line":56,"column":5}},"23":{"start":{"line":50,"column":17},"end":{"line":50,"column":31}},"24":{"start":{"line":51,"column":8},"end":{"line":51,"column":14}},"25":{"start":{"line":52,"column":8},"end":{"line":55,"column":9}},"26":{"start":{"line":53,"column":12},"end":{"line":53,"column":65}},"27":{"start":{"line":54,"column":12},"end":{"line":54,"column":20}},"28":{"start":{"line":58,"column":4},"end":{"line":58,"column":61}},"29":{"start":{"line":60,"column":4},"end":{"line":60,"column":44}}},"fnMap":{"0":{"name":"default_1","decl":{"start":{"line":24,"column":9},"end":{"line":24,"column":18}},"loc":{"start":{"line":24,"column":27},"end":{"line":61,"column":1}},"line":24}},"branchMap":{"0":{"loc":{"start":{"line":25,"column":4},"end":{"line":27,"column":5}},"type":"if","locations":[{"start":{"line":25,"column":4},"end":{"line":27,"column":5}},{"start":{},"end":{}}],"line":25},"1":{"loc":{"start":{"line":25,"column":8},"end":{"line":25,"column":68}},"type":"binary-expr","locations":[{"start":{"line":25,"column":8},"end":{"line":25,"column":34}},{"start":{"line":25,"column":39},"end":{"line":25,"column":52}},{"start":{"line":25,"column":56},"end":{"line":25,"column":67}}],"line":25},"2":{"loc":{"start":{"line":31,"column":4},"end":{"line":32,"column":20}},"type":"if","locations":[{"start":{"line":31,"column":4},"end":{"line":32,"column":20}},{"start":{},"end":{}}],"line":31},"3":{"loc":{"start":{"line":33,"column":4},"end":{"line":34,"column":22}},"type":"if","locations":[{"start":{"line":33,"column":4},"end":{"line":34,"column":22}},{"start":{},"end":{}}],"line":33},"4":{"loc":{"start":{"line":38,"column":4},"end":{"line":41,"column":5}},"type":"if","locations":[{"start":{"line":38,"column":4},"end":{"line":41,"column":5}},{"start":{},"end":{}}],"line":38},"5":{"loc":{"start":{"line":43,"column":4},"end":{"line":46,"column":5}},"type":"if","locations":[{"start":{"line":43,"column":4},"end":{"line":46,"column":5}},{"start":{},"end":{}}],"line":43},"6":{"loc":{"start":{"line":52,"column":8},"end":{"line":55,"column":9}},"type":"if","locations":[{"start":{"line":52,"column":8},"end":{"line":55,"column":9}},{"start":{},"end":{}}],"line":52},"7":{"loc":{"start":{"line":58,"column":10},"end":{"line":58,"column":60}},"type":"cond-expr","locations":[{"start":{"line":58,"column":32},"end":{"line":58,"column":54}},{"start":{"line":58,"column":57},"end":{"line":58,"column":60}}],"line":58},"8":{"loc":{"start":{"line":60,"column":12},"end":{"line":60,"column":42}},"type":"cond-expr","locations":[{"start":{"line":60,"column":27},"end":{"line":60,"column":36}},{"start":{"line":60,"column":39},"end":{"line":60,"column":42}}],"line":60}},"s":{"0":1,"1":1,"2":1,"3":6,"4":2,"5":4,"6":4,"7":4,"8":0,"9":4,"10":0,"11":4,"12":4,"13":4,"14":2,"15":2,"16":4,"17":2,"18":2,"19":4,"20":4,"21":4,"22":4,"23":4,"24":19,"25":19,"26":5,"27":5,"28":4,"29":4},"f":{"0":6},"b":{"0":[2,4],"1":[6,6,4],"2":[0,4],"3":[0,4],"4":[2,2],"5":[2,2],"6":[5,14],"7":[2,2],"8":[2,2]},"inputSourceMap":{"version":3,"file":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/util/localise-number.ts","sources":["/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/util/localise-number.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;GAWG;;AAWH,4BAyCC;AAlDD,oDAAwC;AAExC;;;;;;GAMG;AACH,mBAAyB,MAAc;IACrC,IAAI,OAAO,MAAM,KAAK,QAAQ,IAAI,CAAC,MAAM,GAAG,IAAI,IAAI,MAAM,IAAI,CAAC,CAAC,EAAE,CAAC;QACjE,OAAO,MAAM,CAAC,QAAQ,EAAE,CAAA;IAC1B,CAAC;IAED,IAAI,KAAK,GAAG,IAAA,qBAAK,EAAC,GAAG,CAAC,CAAA;IACtB,IAAI,OAAO,GAAG,IAAA,qBAAK,EAAC,GAAG,CAAC,CAAA;IACxB,qCAAqC;IACrC,IAAI,KAAK,KAAK,6BAA6B;QAAE,KAAK,GAAG,GAAG,CAAA;IACxD,IAAI,OAAO,KAAK,4BAA4B;QAAE,OAAO,GAAG,GAAG,CAAA;IAE3D,8BAA8B;IAC9B,IAAI,UAAU,GAAG,KAAK,CAAA;IACtB,IAAI,MAAM,GAAG,EAAE,CAAA;IACf,IAAI,MAAM,GAAG,CAAC,EAAE,CAAC;QACf,UAAU,GAAG,IAAI,CAAA;QACjB,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAA;IAC3B,CAAC;IAED,uCAAuC;IACvC,IAAI,MAAM,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC;QACrB,MAAM,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;QACxC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAA;IAC7B,CAAC;IAED,IAAI,GAAG,GAAG,EAAE,CAAA;IACZ,GAAG,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAA;IACvB,IAAI,GAAG,GAAG,CAAC,CAAA;IACX,KAAK,IAAI,CAAC,GAAG,GAAG,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;QACxC,GAAG,EAAE,CAAA;QACL,IAAI,GAAG,KAAK,CAAC,EAAE,CAAC;YACd,GAAG,GAAG,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,KAAK,GAAG,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,CAAA;YACpD,GAAG,GAAG,CAAC,CAAA;QACT,CAAC;IACH,CAAC;IAED,sCAAsC;IACtC,GAAG,GAAG,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,OAAO,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,CAAA;IAExD,4BAA4B;IAC5B,OAAO,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA;AACzC,CAAC","sourcesContent":["/**\n * BEGIN HEADER\n *\n * Contains:        Utility function\n * CVM-Role:        <none>\n * Maintainer:      Hendrik Erz\n * License:         GNU GPL v3\n *\n * Description:     This file contains a utility function to localise numbers.\n *\n * END HEADER\n */\n\nimport { trans } from '../i18n-renderer'\n\n/**\n * Adds delimiters to numbers.\n *\n * @param  {number} number The number to be localised.\n *\n * @return {string}        The number with delimiters.\n */\nexport default function (number: number): string {\n  if (typeof number !== 'number' || (number < 1000 && number >= 0)) {\n    return number.toString()\n  }\n\n  let delim = trans(',')\n  let decimal = trans('.')\n  // No delimiter available -> fallback\n  if (delim === 'localise.thousand_delimiter') delim = '.'\n  if (decimal === 'localise.decimal_delimiter') decimal = ','\n\n  // Account for negative values\n  let isNegative = false\n  let suffix = ''\n  if (number < 0) {\n    isNegative = true\n    number = Math.abs(number)\n  }\n\n  // If we have a float, we have a suffix\n  if (number % 1 !== 0) {\n    suffix = number.toString().split('.')[1]\n    number = Math.floor(number)\n  }\n\n  let ret = ''\n  ret = number.toString()\n  let cnt = 0\n  for (let i = ret.length - 1; i > 0; i--) {\n    cnt++\n    if (cnt === 3) {\n      ret = ret.substring(0, i) + delim + ret.substring(i)\n      cnt = 0\n    }\n  }\n\n  // Re-append the suffix, if applicable\n  ret = (suffix.length > 0) ? ret + decimal + suffix : ret\n\n  // Re-prepend the minus sign\n  return ((isNegative) ? '-' + ret : ret)\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"c296507c83dd0e2a05ba4a334b06b243902ce32a","contentHash":"a4f5368c7a9acc4891e692bfb197b77fde71d10461d0987fae9616724d652690"},"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/util/make-search-regex.ts":{"path":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/util/make-search-regex.ts","statementMap":{"0":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"1":{"start":{"line":15,"column":0},"end":{"line":15,"column":34}},"2":{"start":{"line":25,"column":15},"end":{"line":25,"column":38}},"3":{"start":{"line":27,"column":4},"end":{"line":29,"column":5}},"4":{"start":{"line":28,"column":8},"end":{"line":28,"column":44}},"5":{"start":{"line":31,"column":4},"end":{"line":33,"column":5}},"6":{"start":{"line":32,"column":8},"end":{"line":32,"column":36}},"7":{"start":{"line":35,"column":4},"end":{"line":51,"column":5}},"8":{"start":{"line":37,"column":18},"end":{"line":37,"column":33}},"9":{"start":{"line":38,"column":8},"end":{"line":38,"column":18}},"10":{"start":{"line":39,"column":22},"end":{"line":39,"column":29}},"11":{"start":{"line":40,"column":8},"end":{"line":42,"column":9}},"12":{"start":{"line":41,"column":12},"end":{"line":41,"column":39}},"13":{"start":{"line":43,"column":8},"end":{"line":43,"column":48}},"14":{"start":{"line":44,"column":8},"end":{"line":44,"column":30}},"15":{"start":{"line":49,"column":8},"end":{"line":49,"column":62}},"16":{"start":{"line":50,"column":8},"end":{"line":50,"column":45}},"17":{"start":{"line":53,"column":4},"end":{"line":53,"column":74}},"18":{"start":{"line":53,"column":53},"end":{"line":53,"column":72}},"19":{"start":{"line":54,"column":4},"end":{"line":54,"column":50}}},"fnMap":{"0":{"name":"makeSearchRegex","decl":{"start":{"line":24,"column":9},"end":{"line":24,"column":24}},"loc":{"start":{"line":24,"column":49},"end":{"line":55,"column":1}},"line":24},"1":{"name":"(anonymous_1)","decl":{"start":{"line":53,"column":45},"end":{"line":53,"column":46}},"loc":{"start":{"line":53,"column":53},"end":{"line":53,"column":72}},"line":53}},"branchMap":{"0":{"loc":{"start":{"line":24,"column":31},"end":{"line":24,"column":47}},"type":"default-arg","locations":[{"start":{"line":24,"column":45},"end":{"line":24,"column":47}}],"line":24},"1":{"loc":{"start":{"line":27,"column":4},"end":{"line":29,"column":5}},"type":"if","locations":[{"start":{"line":27,"column":4},"end":{"line":29,"column":5}},{"start":{},"end":{}}],"line":27},"2":{"loc":{"start":{"line":31,"column":4},"end":{"line":33,"column":5}},"type":"if","locations":[{"start":{"line":31,"column":4},"end":{"line":33,"column":5}},{"start":{},"end":{}}],"line":31},"3":{"loc":{"start":{"line":35,"column":4},"end":{"line":51,"column":5}},"type":"if","locations":[{"start":{"line":35,"column":4},"end":{"line":51,"column":5}},{"start":{"line":46,"column":9},"end":{"line":51,"column":5}}],"line":35},"4":{"loc":{"start":{"line":40,"column":8},"end":{"line":42,"column":9}},"type":"if","locations":[{"start":{"line":40,"column":8},"end":{"line":42,"column":9}},{"start":{},"end":{}}],"line":40}},"s":{"0":1,"1":1,"2":5,"3":5,"4":0,"5":5,"6":0,"7":5,"8":3,"9":3,"10":3,"11":3,"12":3,"13":3,"14":3,"15":2,"16":2,"17":5,"18":3,"19":5},"f":{"0":5,"1":3},"b":{"0":[5],"1":[0,5],"2":[0,5],"3":[3,2],"4":[3,0]},"inputSourceMap":{"version":3,"file":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/util/make-search-regex.ts","sources":["/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/util/make-search-regex.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;GAWG;;AAUH,kCAkCC;AA1CD;;;;;;;GAOG;AACH,SAAwB,eAAe,CAAE,IAAY,EAAE,cAA+B,EAAE;IACtF,MAAM,EAAE,GAAsC,EAAE,IAAI,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,CAAA;IAErE,mFAAmF;IACnF,IAAI,OAAO,WAAW,KAAK,QAAQ,EAAE,CAAC;QACpC,WAAW,GAAG,WAAW,CAAC,KAAK,CAAC,EAAE,CAAC,CAAA;IACrC,CAAC;IAED,YAAY;IACZ,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE,CAAC;QAChC,WAAW,GAAG,CAAC,WAAW,CAAC,CAAA;IAC7B,CAAC;IAED,uCAAuC;IACvC,IAAI,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;QACrC,mDAAmD;QACnD,MAAM,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA,CAAC,uEAAuE;QACjG,CAAC,CAAC,KAAK,EAAE,CAAA,CAAC,uBAAuB;QACjC,MAAM,KAAK,GAAG,CAAC,CAAC,GAAG,EAAE,CAAA;QACrB,IAAI,KAAK,KAAK,SAAS,EAAE,CAAC;YACxB,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,CAAA;QAC5B,CAAC;QACD,EAAE,CAAC,KAAK,GAAG,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,WAAW,CAAC,CAAA,CAAC,uDAAuD;QAC/F,EAAE,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA,CAAC,6DAA6D;IACrF,CAAC;SAAM,CAAC;QACN,yEAAyE;QACzE,0EAA0E;QAC1E,EAAE,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,qBAAqB,EAAE,MAAM,CAAC,CAAA;QACrD,EAAE,CAAC,KAAK,GAAG,WAAW,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAA,CAAC,wCAAwC;IAC/E,CAAC;IAED,4EAA4E;IAC5E,EAAE,CAAC,KAAK,GAAG,CAAC,GAAG,IAAI,GAAG,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAA;IACrE,OAAO,IAAI,MAAM,CAAC,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAA;AAC/C,CAAC","sourcesContent":["/**\n * BEGIN HEADER\n *\n * Contains:        Utility function\n * CVM-Role:        <none>\n * Maintainer:      Hendrik Erz\n * License:         GNU GPL v3\n *\n * Description:     This file contains a utility function to get a search regex.\n *\n * END HEADER\n */\n\n/**\n * Creates a search term (always suitable to be used in new RegExp())\n *\n * @param  {string} term              A string that may contain a regular expression\n * @param  {array}  [injectFlags=[]]  Flags to be injected into the expression\n *\n * @return {RegExp}                    The regular expression\n */\nexport default function makeSearchRegex (term: string, injectFlags: string|string[] = []): RegExp {\n  const re: { term: string, flags: string[] } = { term: '', flags: [] }\n\n  // For ease of access you can simply pass the injectFlags as a string of characters\n  if (typeof injectFlags === 'string') {\n    injectFlags = injectFlags.split('')\n  }\n\n  // Failesafe\n  if (!Array.isArray(injectFlags)) {\n    injectFlags = [injectFlags]\n  }\n\n  // Test if we have a regular expression\n  if (/^\\/.+\\/[gimy]{0,4}$/.test(term)) {\n    // The user wants to do a regex search -> transform\n    const r = term.split('/') // 0 is empty, last index contains flags, everything else is expression\n    r.shift() // Remove empty index 0\n    const flags = r.pop()\n    if (flags !== undefined) {\n      re.flags = flags.split('')\n    }\n    re.flags = re.flags.concat(injectFlags) // Retrieve the flags, convert to char array and concat\n    re.term = r.join('/') // Reassemble the expression if it contained forward-slashes.\n  } else {\n    // User wants to do a simple search. Careful: Escape all raw regex chars!\n    // Regex replacer taken from https://stackoverflow.com/a/6969486 (thanks!)\n    re.term = term.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&')\n    re.flags = injectFlags.concat(['i']) // Always make a case-insensitive search\n  }\n\n  // The flags need to be unique and valid, so filter out any non-valid flags.\n  re.flags = [...new Set(re.flags)].filter(flag => /[gimy]/.test(flag))\n  return new RegExp(re.term, re.flags.join(''))\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"5405ce712357185d458de34ac08bc357baa36d10","contentHash":"9afd8ebd6a4b7c3b32c42a43f97ce06c0c7dfc5b6e58841b7eafe6a37276e9af"},"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/util/make-valid-uri.ts":{"path":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/util/make-valid-uri.ts","statementMap":{"0":{"start":{"line":16,"column":0},"end":{"line":16,"column":62}},"1":{"start":{"line":17,"column":0},"end":{"line":17,"column":31}},"2":{"start":{"line":20,"column":30},"end":{"line":20,"column":63}},"3":{"start":{"line":21,"column":33},"end":{"line":21,"column":68}},"4":{"start":{"line":22,"column":19},"end":{"line":22,"column":61}},"5":{"start":{"line":23,"column":15},"end":{"line":23,"column":53}},"6":{"start":{"line":24,"column":16},"end":{"line":24,"column":60}},"7":{"start":{"line":27,"column":23},"end":{"line":27,"column":84}},"8":{"start":{"line":59,"column":4},"end":{"line":59,"column":40}},"9":{"start":{"line":62,"column":4},"end":{"line":67,"column":5}},"10":{"start":{"line":63,"column":8},"end":{"line":63,"column":41}},"11":{"start":{"line":65,"column":9},"end":{"line":67,"column":5}},"12":{"start":{"line":66,"column":8},"end":{"line":66,"column":53}},"13":{"start":{"line":70,"column":19},"end":{"line":70,"column":21}},"14":{"start":{"line":71,"column":4},"end":{"line":87,"column":5}},"15":{"start":{"line":72,"column":23},"end":{"line":72,"column":35}},"16":{"start":{"line":73,"column":8},"end":{"line":80,"column":9}},"17":{"start":{"line":74,"column":12},"end":{"line":74,"column":26}},"18":{"start":{"line":75,"column":12},"end":{"line":75,"column":30}},"19":{"start":{"line":79,"column":12},"end":{"line":79,"column":64}},"20":{"start":{"line":81,"column":8},"end":{"line":81,"column":33}},"21":{"start":{"line":89,"column":23},"end":{"line":89,"column":43}},"22":{"start":{"line":91,"column":4},"end":{"line":93,"column":5}},"23":{"start":{"line":92,"column":8},"end":{"line":92,"column":33}},"24":{"start":{"line":94,"column":4},"end":{"line":105,"column":5}},"25":{"start":{"line":96,"column":8},"end":{"line":96,"column":22}},"26":{"start":{"line":98,"column":9},"end":{"line":105,"column":5}},"27":{"start":{"line":100,"column":8},"end":{"line":100,"column":22}},"28":{"start":{"line":102,"column":9},"end":{"line":105,"column":5}},"29":{"start":{"line":104,"column":8},"end":{"line":104,"column":22}},"30":{"start":{"line":109,"column":4},"end":{"line":137,"column":5}},"31":{"start":{"line":116,"column":8},"end":{"line":136,"column":9}},"32":{"start":{"line":120,"column":12},"end":{"line":120,"column":27}},"33":{"start":{"line":122,"column":13},"end":{"line":136,"column":9}},"34":{"start":{"line":132,"column":12},"end":{"line":132,"column":27}},"35":{"start":{"line":135,"column":12},"end":{"line":135,"column":26}},"36":{"start":{"line":141,"column":4},"end":{"line":148,"column":5}},"37":{"start":{"line":142,"column":8},"end":{"line":142,"column":26}},"38":{"start":{"line":144,"column":9},"end":{"line":148,"column":5}},"39":{"start":{"line":147,"column":8},"end":{"line":147,"column":27}},"40":{"start":{"line":153,"column":4},"end":{"line":168,"column":5}},"41":{"start":{"line":155,"column":8},"end":{"line":157,"column":9}},"42":{"start":{"line":156,"column":12},"end":{"line":156,"column":35}},"43":{"start":{"line":159,"column":8},"end":{"line":161,"column":9}},"44":{"start":{"line":160,"column":12},"end":{"line":160,"column":71}},"45":{"start":{"line":164,"column":8},"end":{"line":166,"column":9}},"46":{"start":{"line":165,"column":12},"end":{"line":165,"column":28}},"47":{"start":{"line":167,"column":8},"end":{"line":167,"column":31}},"48":{"start":{"line":170,"column":4},"end":{"line":175,"column":5}},"49":{"start":{"line":171,"column":8},"end":{"line":171,"column":58}},"50":{"start":{"line":174,"column":8},"end":{"line":174,"column":39}}},"fnMap":{"0":{"name":"makeValidUri","decl":{"start":{"line":36,"column":9},"end":{"line":36,"column":21}},"loc":{"start":{"line":36,"column":38},"end":{"line":176,"column":1}},"line":36}},"branchMap":{"0":{"loc":{"start":{"line":36,"column":27},"end":{"line":36,"column":36}},"type":"default-arg","locations":[{"start":{"line":36,"column":34},"end":{"line":36,"column":36}}],"line":36},"1":{"loc":{"start":{"line":62,"column":4},"end":{"line":67,"column":5}},"type":"if","locations":[{"start":{"line":62,"column":4},"end":{"line":67,"column":5}},{"start":{"line":65,"column":9},"end":{"line":67,"column":5}}],"line":62},"2":{"loc":{"start":{"line":65,"column":9},"end":{"line":67,"column":5}},"type":"if","locations":[{"start":{"line":65,"column":9},"end":{"line":67,"column":5}},{"start":{},"end":{}}],"line":65},"3":{"loc":{"start":{"line":73,"column":8},"end":{"line":80,"column":9}},"type":"if","locations":[{"start":{"line":73,"column":8},"end":{"line":80,"column":9}},{"start":{},"end":{}}],"line":73},"4":{"loc":{"start":{"line":91,"column":4},"end":{"line":93,"column":5}},"type":"if","locations":[{"start":{"line":91,"column":4},"end":{"line":93,"column":5}},{"start":{},"end":{}}],"line":91},"5":{"loc":{"start":{"line":94,"column":4},"end":{"line":105,"column":5}},"type":"if","locations":[{"start":{"line":94,"column":4},"end":{"line":105,"column":5}},{"start":{"line":98,"column":9},"end":{"line":105,"column":5}}],"line":94},"6":{"loc":{"start":{"line":98,"column":9},"end":{"line":105,"column":5}},"type":"if","locations":[{"start":{"line":98,"column":9},"end":{"line":105,"column":5}},{"start":{"line":102,"column":9},"end":{"line":105,"column":5}}],"line":98},"7":{"loc":{"start":{"line":98,"column":13},"end":{"line":98,"column":82}},"type":"binary-expr","locations":[{"start":{"line":98,"column":13},"end":{"line":98,"column":33}},{"start":{"line":98,"column":37},"end":{"line":98,"column":57}},{"start":{"line":98,"column":61},"end":{"line":98,"column":82}}],"line":98},"8":{"loc":{"start":{"line":102,"column":9},"end":{"line":105,"column":5}},"type":"if","locations":[{"start":{"line":102,"column":9},"end":{"line":105,"column":5}},{"start":{},"end":{}}],"line":102},"9":{"loc":{"start":{"line":109,"column":4},"end":{"line":137,"column":5}},"type":"if","locations":[{"start":{"line":109,"column":4},"end":{"line":137,"column":5}},{"start":{},"end":{}}],"line":109},"10":{"loc":{"start":{"line":116,"column":8},"end":{"line":136,"column":9}},"type":"if","locations":[{"start":{"line":116,"column":8},"end":{"line":136,"column":9}},{"start":{"line":122,"column":13},"end":{"line":136,"column":9}}],"line":116},"11":{"loc":{"start":{"line":122,"column":13},"end":{"line":136,"column":9}},"type":"if","locations":[{"start":{"line":122,"column":13},"end":{"line":136,"column":9}},{"start":{"line":134,"column":13},"end":{"line":136,"column":9}}],"line":122},"12":{"loc":{"start":{"line":122,"column":17},"end":{"line":122,"column":62}},"type":"binary-expr","locations":[{"start":{"line":122,"column":17},"end":{"line":122,"column":33}},{"start":{"line":122,"column":37},"end":{"line":122,"column":62}}],"line":122},"13":{"loc":{"start":{"line":141,"column":4},"end":{"line":148,"column":5}},"type":"if","locations":[{"start":{"line":141,"column":4},"end":{"line":148,"column":5}},{"start":{"line":144,"column":9},"end":{"line":148,"column":5}}],"line":141},"14":{"loc":{"start":{"line":141,"column":8},"end":{"line":141,"column":33}},"type":"binary-expr","locations":[{"start":{"line":141,"column":8},"end":{"line":141,"column":23}},{"start":{"line":141,"column":27},"end":{"line":141,"column":33}}],"line":141},"15":{"loc":{"start":{"line":144,"column":9},"end":{"line":148,"column":5}},"type":"if","locations":[{"start":{"line":144,"column":9},"end":{"line":148,"column":5}},{"start":{},"end":{}}],"line":144},"16":{"loc":{"start":{"line":144,"column":13},"end":{"line":144,"column":39}},"type":"binary-expr","locations":[{"start":{"line":144,"column":13},"end":{"line":144,"column":28}},{"start":{"line":144,"column":32},"end":{"line":144,"column":39}}],"line":144},"17":{"loc":{"start":{"line":153,"column":4},"end":{"line":168,"column":5}},"type":"if","locations":[{"start":{"line":153,"column":4},"end":{"line":168,"column":5}},{"start":{},"end":{}}],"line":153},"18":{"loc":{"start":{"line":155,"column":8},"end":{"line":157,"column":9}},"type":"if","locations":[{"start":{"line":155,"column":8},"end":{"line":157,"column":9}},{"start":{},"end":{}}],"line":155},"19":{"loc":{"start":{"line":159,"column":8},"end":{"line":161,"column":9}},"type":"if","locations":[{"start":{"line":159,"column":8},"end":{"line":161,"column":9}},{"start":{},"end":{}}],"line":159},"20":{"loc":{"start":{"line":164,"column":8},"end":{"line":166,"column":9}},"type":"if","locations":[{"start":{"line":164,"column":8},"end":{"line":166,"column":9}},{"start":{},"end":{}}],"line":164},"21":{"loc":{"start":{"line":170,"column":4},"end":{"line":175,"column":5}},"type":"if","locations":[{"start":{"line":170,"column":4},"end":{"line":175,"column":5}},{"start":{"line":173,"column":9},"end":{"line":175,"column":5}}],"line":170}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":16,"9":16,"10":0,"11":16,"12":0,"13":16,"14":16,"15":16,"16":6,"17":3,"18":3,"19":3,"20":3,"21":13,"22":13,"23":3,"24":13,"25":3,"26":10,"27":3,"28":7,"29":2,"30":13,"31":5,"32":0,"33":5,"34":3,"35":2,"36":13,"37":7,"38":6,"39":3,"40":13,"41":10,"42":3,"43":10,"44":6,"45":10,"46":0,"47":10,"48":13,"49":13,"50":0},"f":{"0":16},"b":{"0":[0],"1":[0,16],"2":[0,16],"3":[3,3],"4":[3,10],"5":[3,10],"6":[3,7],"7":[10,9,7],"8":[2,5],"9":[5,8],"10":[0,5],"11":[3,2],"12":[5,5],"13":[7,6],"14":[13,10],"15":[3,3],"16":[6,3],"17":[10,3],"18":[3,7],"19":[6,4],"20":[0,10],"21":[13,0]},"inputSourceMap":{"version":3,"file":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/util/make-valid-uri.ts","sources":["/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/util/make-valid-uri.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @ignore\n * BEGIN HEADER\n *\n * Contains:        makeValidURI function\n * CVM-Role:        <none>\n * Maintainer:      Hendrik Erz\n * License:         GNU GPL v3\n *\n * Description:     Small helper function that tries\n *                  to return a valid URI.\n *\n * END HEADER\n */\n\n// NOTE: fileExists is called \"isFile\" everywhere else, we have just renamed\n// it because of a naming conflict in the function.\nimport { getProtocolRE, getLinkRE } from '../regular-expressions'\nimport { isAbsolutePath, resolvePath } from './renderer-path-polyfill'\n\nconst protocolRE = getProtocolRE()\nconst linkRE = getLinkRE()\nconst emailRe = /^[a-z0-9-.]+@[a-z0-9-.]+\\.[a-z0-9-.]{2,}$/i\n\n// This regular expression checks whether an URI could be linking to a local file\n// const anyLocallyLinkableFileRE = /.+\\.(?:md|markdown|txt|rmd)$/i\nconst linkableFileRE = /.+\\.(?:mdx?|markdown|txt|(?:q|r)md|jpe?g|png|gif|svg|bmp)$/i\n\n/**\n * Returns a valid URI, using the available context information\n *\n * @param   {string}  uri   The URI to check\n * @param   {string}  base  The base which can be used to make uri absolute\n *\n * @return  {string}        The absolute, parsed string.\n */\nexport default function makeValidUri (uri: string, base: string = ''): string {\n  // Why do we need a helper function for this?\n  // Because it's not only hard to distinguish\n  // a URL from a file path, but also there are\n  // a lot of variables to account for.\n  //\n  // Examples:\n  // github.com --> is a valid hostname, but has no protocol and no \"www\"\n  // subdomain.toplevel.tld --> also valid, but without \"www\" and protocol\n  // ./path/file.md --> Valid file path, but relative\n  // path/file.md --> Also valid, also relative, but without the dot indicator\n  // path/to/.htaccess --> Valid extension-only filepath\n  //\n  // All of these examples can (in case of relative paths with the base) be\n  // resolved perfectly. The first two examples only need the http(s) protocol,\n  // the other three examples need the base and file:// prepended.\n  //\n  // So what we need to do first is distinguish between a URL and a Path.\n\n  // But before we do anything like that, we have to ensure that the URL that\n  // gets passed in here is not surrounded with angle brackets. This is\n  // perfectly valid, especially within Markdown documents, but of course these\n  // serve only as delineators of URLs. Instead of dispersing this functionality\n  // across the codebase, we can do this centrally here.\n  uri = uri.replace(/^<(.+)>$/, '$1')\n\n  // Shortcut for mailto-links, as these have a protocol (mailto) but with\n  // *only* a colon, not the double-slash (//).\n  if (uri.startsWith('mailto:')) {\n    return (new URL(uri)).toString()\n  } else if (emailRe.test(uri)) {\n    return (new URL('mailto:' + uri)).toString()\n  }\n\n  // Set the isFile var to undefined\n  let isFile\n  let protocol = ''\n\n  try {\n    const parsed = new URL(uri)\n    if (parsed.protocol === 'file:') {\n      isFile = true\n      protocol = 'file'\n      // \"file\" links could be relative, and we need to tend to that possibility\n      // below, so even if this is a proper URL, we have to let the rest of the\n      // functionality take over.\n      throw new Error('Look at my smart programming lol')\n    }\n    return parsed.toString()\n  } catch (err) {\n    // We can trust the URL constructor to throw an error if it is not something\n    // that a web browser can *immediately* open. So if new URL() doesn't throw,\n    // we have a proper URL and can save us these shenanigans.\n  }\n\n  // First, remove a potential protocol and save it for later use\n  const protoMatch = protocolRE.exec(uri)\n  // If there was a protocol, extract the capturing group\n  if (protoMatch !== null) {\n    protocol = protoMatch[1]\n  }\n\n  if (protocol === 'file') {\n    // We know it's a file\n    isFile = true\n  } else if (uri.startsWith('//') || uri.startsWith('./') || uri.startsWith('../')) {\n    // We know it's a file (shared drive, or relative to this directory)\n    isFile = true\n  } else if (isAbsolutePath(uri)) {\n    // The link is already absolute\n    isFile = true\n  }\n\n  // At this point, it might be that isFile is still undefined. If so,\n  // no protocol was being extracted, and it's up to us to find out\n  // more.\n  if (isFile === undefined) {\n    // So, no explicit file protocol, which means we have to\n    // check the first part of the URI. If it resembles a\n    // valid URI, that is: something in the form <sub>.<host>.<tld>,\n    // we assume a link. If not, we assume a file. Remember\n    // that the subdomain may be omitted. So what we're really\n    // searching for is <host>.<tld>.\n    if (protocol !== '') {\n      // It may be that the protocol is given, but not a file\n      // In this case, it's not a file, but we don't care which\n      // protocol it uses.\n      isFile = false\n    } else if (linkRE.test(uri) && !linkableFileRE.test(uri)) {\n      // NOTE: The regular expression will also test true for\n      // relative paths without ./ at the beginning and a folder\n      // containing a full stop. But remedification by adding ./\n      // is easy in this case for the user.\n      // NOTE: Using linkableFileRE we prevent this behaviour for any file that\n      // users could be linking locally (Markdown files and images).\n      // BUT beware: This will treat moldovian TLD domains (or any TLD that can\n      // double as a file extension) as files. Here, a trailing slash will\n      // remedify this.\n      isFile = false\n    } else {\n      isFile = true\n    }\n  }\n\n  // At this point, we definitely know the isFile. If the protocol\n  // is still not known we can now derive it from the information\n  // we have gathered so far.\n  if (protocol === '' && isFile) {\n    protocol = 'file'\n  } else if (protocol === '' && !isFile) {\n    // For links we assume HTTPS. Websites that still\n    // don't use HTTPS by 2020* can go home. (* 2023)\n    protocol = 'https'\n  }\n\n  // Now we have both the protocol and whether it's a file\n  // or not. If it's a file, one last thing we need to do\n  // is check if we have to convert the path to absolute\n  // using the current base.\n  if (isFile) {\n    // Again, extract a possible file-protocol\n    if (uri.indexOf('file://') === 0) {\n      uri = uri.substring(7)\n    }\n\n    // We've got a relative path\n    if (!isAbsolutePath(uri)) {\n      uri = resolvePath(base, uri)\n    }\n\n    // See https://github.com/Zettlr/Zettlr/issues/5489\n    // I was very salty.\n    if (process.platform === 'win32') {\n      uri = `/${uri}`\n    }\n\n    protocol = 'safe-file'\n  }\n\n  // Now we can return the correct uri, made absolute\n  if (!protocolRE.test(uri)) {\n    return new URL(protocol + '://' + uri).toString()\n  } else {\n    return new URL(uri).toString()\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"00eb2af9f89d16cfdd6b979ec97003f3637a254e","contentHash":"8a165db0f6c3f7625052d67f60ac26b784563a0ba62ab82d333f815b6c2c3963"},"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/regular-expressions.ts":{"path":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/regular-expressions.ts","statementMap":{"0":{"start":{"line":16,"column":0},"end":{"line":16,"column":62}},"1":{"start":{"line":17,"column":0},"end":{"line":17,"column":26}},"2":{"start":{"line":18,"column":0},"end":{"line":18,"column":30}},"3":{"start":{"line":19,"column":0},"end":{"line":19,"column":38}},"4":{"start":{"line":28,"column":25},"end":{"line":28,"column":37}},"5":{"start":{"line":31,"column":4},"end":{"line":33,"column":5}},"6":{"start":{"line":32,"column":8},"end":{"line":32,"column":47}},"7":{"start":{"line":34,"column":4},"end":{"line":34,"column":73}},"8":{"start":{"line":44,"column":4},"end":{"line":44,"column":66}},"9":{"start":{"line":54,"column":15},"end":{"line":54,"column":37}},"10":{"start":{"line":55,"column":4},"end":{"line":55,"column":53}}},"fnMap":{"0":{"name":"getIDRE","decl":{"start":{"line":27,"column":9},"end":{"line":27,"column":16}},"loc":{"start":{"line":27,"column":46},"end":{"line":35,"column":1}},"line":27},"1":{"name":"getLinkRE","decl":{"start":{"line":43,"column":9},"end":{"line":43,"column":18}},"loc":{"start":{"line":43,"column":35},"end":{"line":45,"column":1}},"line":43},"2":{"name":"getProtocolRE","decl":{"start":{"line":53,"column":9},"end":{"line":53,"column":22}},"loc":{"start":{"line":53,"column":42},"end":{"line":56,"column":1}},"line":53}},"branchMap":{"0":{"loc":{"start":{"line":27,"column":31},"end":{"line":27,"column":44}},"type":"default-arg","locations":[{"start":{"line":27,"column":39},"end":{"line":27,"column":44}}],"line":27},"1":{"loc":{"start":{"line":31,"column":4},"end":{"line":33,"column":5}},"type":"if","locations":[{"start":{"line":31,"column":4},"end":{"line":33,"column":5}},{"start":{},"end":{}}],"line":31},"2":{"loc":{"start":{"line":34,"column":18},"end":{"line":34,"column":66}},"type":"cond-expr","locations":[{"start":{"line":34,"column":28},"end":{"line":34,"column":49}},{"start":{"line":34,"column":52},"end":{"line":34,"column":66}}],"line":34},"3":{"loc":{"start":{"line":43,"column":19},"end":{"line":43,"column":33}},"type":"default-arg","locations":[{"start":{"line":43,"column":28},"end":{"line":43,"column":33}}],"line":43},"4":{"loc":{"start":{"line":44,"column":43},"end":{"line":44,"column":64}},"type":"cond-expr","locations":[{"start":{"line":44,"column":54},"end":{"line":44,"column":58}},{"start":{"line":44,"column":61},"end":{"line":44,"column":64}}],"line":44},"5":{"loc":{"start":{"line":53,"column":23},"end":{"line":53,"column":40}},"type":"default-arg","locations":[{"start":{"line":53,"column":35},"end":{"line":53,"column":40}}],"line":53},"6":{"loc":{"start":{"line":54,"column":15},"end":{"line":54,"column":37}},"type":"cond-expr","locations":[{"start":{"line":54,"column":29},"end":{"line":54,"column":32}},{"start":{"line":54,"column":35},"end":{"line":54,"column":37}}],"line":54}},"s":{"0":1,"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":1,"9":1,"10":1},"f":{"0":0,"1":1,"2":1},"b":{"0":[0],"1":[0,0],"2":[0,0],"3":[1],"4":[0,1],"5":[1],"6":[0,1]},"inputSourceMap":{"version":3,"file":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/regular-expressions.ts","sources":["/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/regular-expressions.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;GAaG;;AASH,0BAYC;AASD,8BAIC;AASD,sCAMC;AA/CD;;;;;;GAMG;AACH,SAAgB,OAAO,CAAE,YAAoB,EAAE,QAAiB,KAAK;IACnE,IAAI,cAAc,GAAW,YAAY,CAAA;IACzC,+CAA+C;IAC/C,yCAAyC;IACzC,IAAI,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,EAAE,CAAC;QACtC,cAAc,GAAG,IAAI,cAAc,GAAG,CAAA;IACxC,CAAC;IAED,OAAO,MAAM,CACX,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,cAAc,GAAG,CAAC,CAAC,CAAC,cAAc,EAChD,GAAG,CACJ,CAAA;AACH,CAAC;AAED;;;;;;GAMG;AACH,SAAgB,SAAS,CAAE,SAAkB,KAAK;IAChD,OAAO,MAAM,CACX,gBAAgB,CAAC,MAAM,EACvB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA;AAC1B,CAAC;AAED;;;;;;GAMG;AACH,SAAgB,aAAa,CAAE,YAAqB,KAAK;IACvD,IAAI,IAAI,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAA;IACjC,OAAO,MAAM,CACX,qBAAqB,EACrB,GAAG,GAAG,IAAI,CACX,CAAA;AACH,CAAC","sourcesContent":["/**\n * BEGIN HEADER\n *\n * Contains:        Utility class\n * CVM-Role:        <none>\n * Maintainer:      Hendrik Erz\n * License:         GNU GPL v3\n *\n * Description:     This file contains functionality to generate regular\n *                  expressions to be used across the application for\n *                  consistent behaviour.\n *\n * END HEADER\n */\n\n/**\n * Returns a regular expression that matches file IDs as in the settings\n *\n * @param   {boolean}  exact      If true, makes sure that the full string needs to match\n *\n * @return  {RegExp}              The compiled Regular Expression\n */\nexport function getIDRE (idGenPattern: string, exact: boolean = false): RegExp {\n  let idRegExpString: string = idGenPattern\n  // Make sure the ID definitely has at least one\n  // capturing group to not produce errors.\n  if (!(/\\(.+?\\)/.test(idRegExpString))) {\n    idRegExpString = `(${idRegExpString})`\n  }\n\n  return RegExp(\n    (exact) ? `^${idRegExpString}$` : idRegExpString,\n    'g'\n  )\n}\n\n/**\n * Returns a regular expression that matches Markdown links.\n *\n * @param   {boolean}  global  whether the expression should match globally\n *\n * @return  {RegExp}           The compiled Regular Expression\n */\nexport function getLinkRE (global: boolean = false): RegExp {\n  return RegExp(\n    /^.+\\.[a-z0-9]+/.source,\n    (global) ? 'gi' : 'i')\n}\n\n/**\n * Returns a regular expression that matches URL protocols (e.g. http://)\n *\n * @param   {boolean}  multiline  Whether or not the expression should be multiline\n *\n * @return  {RegExp}           The wanted regular expression\n */\nexport function getProtocolRE (multiline: boolean = false): RegExp {\n  let flag = (multiline) ? 'm' : ''\n  return RegExp(\n    /^([a-z]{1,10}):\\/\\//,\n    'i' + flag\n  )\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"260b02fafb1dc63206918440300d499963d63843","contentHash":"32ac98ddee361923958670ec611022008358ecfd5940c7e3ff4384e21e7f8c43"},"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/util/renderer-path-polyfill.ts":{"path":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/util/renderer-path-polyfill.ts","statementMap":{"0":{"start":{"line":18,"column":0},"end":{"line":18,"column":62}},"1":{"start":{"line":19,"column":0},"end":{"line":19,"column":34}},"2":{"start":{"line":20,"column":0},"end":{"line":20,"column":40}},"3":{"start":{"line":21,"column":0},"end":{"line":21,"column":36}},"4":{"start":{"line":22,"column":0},"end":{"line":22,"column":34}},"5":{"start":{"line":23,"column":0},"end":{"line":23,"column":36}},"6":{"start":{"line":24,"column":0},"end":{"line":24,"column":34}},"7":{"start":{"line":25,"column":0},"end":{"line":25,"column":34}},"8":{"start":{"line":34,"column":4},"end":{"line":34,"column":42}},"9":{"start":{"line":47,"column":4},"end":{"line":47,"column":54}},"10":{"start":{"line":57,"column":4},"end":{"line":57,"column":52}},"11":{"start":{"line":67,"column":4},"end":{"line":78,"column":5}},"12":{"start":{"line":68,"column":8},"end":{"line":68,"column":21}},"13":{"start":{"line":70,"column":9},"end":{"line":78,"column":5}},"14":{"start":{"line":71,"column":8},"end":{"line":71,"column":20}},"15":{"start":{"line":73,"column":9},"end":{"line":78,"column":5}},"16":{"start":{"line":74,"column":8},"end":{"line":74,"column":20}},"17":{"start":{"line":77,"column":8},"end":{"line":77,"column":21}},"18":{"start":{"line":89,"column":4},"end":{"line":91,"column":5}},"19":{"start":{"line":90,"column":8},"end":{"line":90,"column":87}},"20":{"start":{"line":93,"column":4},"end":{"line":100,"column":5}},"21":{"start":{"line":95,"column":8},"end":{"line":95,"column":45}},"22":{"start":{"line":97,"column":9},"end":{"line":100,"column":5}},"23":{"start":{"line":99,"column":8},"end":{"line":99,"column":18}},"24":{"start":{"line":106,"column":25},"end":{"line":106,"column":46}},"25":{"start":{"line":107,"column":23},"end":{"line":107,"column":40}},"26":{"start":{"line":108,"column":4},"end":{"line":113,"column":5}},"27":{"start":{"line":111,"column":8},"end":{"line":111,"column":35}},"28":{"start":{"line":112,"column":8},"end":{"line":112,"column":33}},"29":{"start":{"line":114,"column":28},"end":{"line":114,"column":29}},"30":{"start":{"line":115,"column":4},"end":{"line":122,"column":5}},"31":{"start":{"line":115,"column":17},"end":{"line":115,"column":18}},"32":{"start":{"line":116,"column":8},"end":{"line":121,"column":9}},"33":{"start":{"line":117,"column":12},"end":{"line":117,"column":34}},"34":{"start":{"line":120,"column":12},"end":{"line":120,"column":18}},"35":{"start":{"line":125,"column":16},"end":{"line":125,"column":84}},"36":{"start":{"line":126,"column":21},"end":{"line":126,"column":74}},"37":{"start":{"line":127,"column":25},"end":{"line":127,"column":39}},"38":{"start":{"line":128,"column":4},"end":{"line":128,"column":112}},"39":{"start":{"line":140,"column":4},"end":{"line":142,"column":5}},"40":{"start":{"line":141,"column":8},"end":{"line":141,"column":20}},"41":{"start":{"line":143,"column":25},"end":{"line":143,"column":46}},"42":{"start":{"line":144,"column":4},"end":{"line":147,"column":5}},"43":{"start":{"line":146,"column":8},"end":{"line":146,"column":34}},"44":{"start":{"line":149,"column":25},"end":{"line":149,"column":56}},"45":{"start":{"line":150,"column":4},"end":{"line":161,"column":5}},"46":{"start":{"line":150,"column":17},"end":{"line":150,"column":18}},"47":{"start":{"line":151,"column":24},"end":{"line":151,"column":39}},"48":{"start":{"line":153,"column":8},"end":{"line":160,"column":9}},"49":{"start":{"line":154,"column":12},"end":{"line":154,"column":38}},"50":{"start":{"line":155,"column":12},"end":{"line":155,"column":38}},"51":{"start":{"line":156,"column":12},"end":{"line":156,"column":16}},"52":{"start":{"line":159,"column":12},"end":{"line":159,"column":18}},"53":{"start":{"line":163,"column":4},"end":{"line":165,"column":5}},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":30}},"55":{"start":{"line":166,"column":4},"end":{"line":166,"column":72}},"56":{"start":{"line":177,"column":21},"end":{"line":177,"column":68}},"57":{"start":{"line":178,"column":4},"end":{"line":183,"column":5}},"58":{"start":{"line":179,"column":8},"end":{"line":179,"column":71}},"59":{"start":{"line":182,"column":8},"end":{"line":182,"column":24}},"60":{"start":{"line":194,"column":4},"end":{"line":194,"column":75}},"61":{"start":{"line":206,"column":4},"end":{"line":208,"column":5}},"62":{"start":{"line":207,"column":8},"end":{"line":207,"column":20}},"63":{"start":{"line":209,"column":14},"end":{"line":209,"column":23}},"64":{"start":{"line":210,"column":4},"end":{"line":210,"column":75}}},"fnMap":{"0":{"name":"sep","decl":{"start":{"line":33,"column":9},"end":{"line":33,"column":12}},"loc":{"start":{"line":33,"column":19},"end":{"line":35,"column":1}},"line":33},"1":{"name":"isWin32Path","decl":{"start":{"line":44,"column":9},"end":{"line":44,"column":20}},"loc":{"start":{"line":44,"column":27},"end":{"line":48,"column":1}},"line":44},"2":{"name":"isRootDir","decl":{"start":{"line":56,"column":9},"end":{"line":56,"column":18}},"loc":{"start":{"line":56,"column":25},"end":{"line":58,"column":1}},"line":56},"3":{"name":"isAbsolutePath","decl":{"start":{"line":66,"column":9},"end":{"line":66,"column":23}},"loc":{"start":{"line":66,"column":30},"end":{"line":79,"column":1}},"line":66},"4":{"name":"relativePath","decl":{"start":{"line":88,"column":9},"end":{"line":88,"column":21}},"loc":{"start":{"line":88,"column":32},"end":{"line":129,"column":1}},"line":88},"5":{"name":"resolvePath","decl":{"start":{"line":139,"column":9},"end":{"line":139,"column":20}},"loc":{"start":{"line":139,"column":33},"end":{"line":167,"column":1}},"line":139},"6":{"name":"pathBasename","decl":{"start":{"line":176,"column":9},"end":{"line":176,"column":21}},"loc":{"start":{"line":176,"column":37},"end":{"line":184,"column":1}},"line":176},"7":{"name":"pathExtname","decl":{"start":{"line":193,"column":9},"end":{"line":193,"column":20}},"loc":{"start":{"line":193,"column":27},"end":{"line":195,"column":1}},"line":193},"8":{"name":"pathDirname","decl":{"start":{"line":205,"column":9},"end":{"line":205,"column":20}},"loc":{"start":{"line":205,"column":27},"end":{"line":211,"column":1}},"line":205}},"branchMap":{"0":{"loc":{"start":{"line":34,"column":11},"end":{"line":34,"column":41}},"type":"cond-expr","locations":[{"start":{"line":34,"column":31},"end":{"line":34,"column":35}},{"start":{"line":34,"column":38},"end":{"line":34,"column":41}}],"line":34},"1":{"loc":{"start":{"line":47,"column":11},"end":{"line":47,"column":53}},"type":"binary-expr","locations":[{"start":{"line":47,"column":11},"end":{"line":47,"column":30}},{"start":{"line":47,"column":34},"end":{"line":47,"column":53}}],"line":47},"2":{"loc":{"start":{"line":57,"column":11},"end":{"line":57,"column":51}},"type":"binary-expr","locations":[{"start":{"line":57,"column":11},"end":{"line":57,"column":23}},{"start":{"line":57,"column":27},"end":{"line":57,"column":51}}],"line":57},"3":{"loc":{"start":{"line":67,"column":4},"end":{"line":78,"column":5}},"type":"if","locations":[{"start":{"line":67,"column":4},"end":{"line":78,"column":5}},{"start":{"line":70,"column":9},"end":{"line":78,"column":5}}],"line":67},"4":{"loc":{"start":{"line":70,"column":9},"end":{"line":78,"column":5}},"type":"if","locations":[{"start":{"line":70,"column":9},"end":{"line":78,"column":5}},{"start":{"line":73,"column":9},"end":{"line":78,"column":5}}],"line":70},"5":{"loc":{"start":{"line":70,"column":13},"end":{"line":70,"column":53}},"type":"binary-expr","locations":[{"start":{"line":70,"column":13},"end":{"line":70,"column":29}},{"start":{"line":70,"column":33},"end":{"line":70,"column":53}}],"line":70},"6":{"loc":{"start":{"line":73,"column":9},"end":{"line":78,"column":5}},"type":"if","locations":[{"start":{"line":73,"column":9},"end":{"line":78,"column":5}},{"start":{"line":76,"column":9},"end":{"line":78,"column":5}}],"line":73},"7":{"loc":{"start":{"line":73,"column":13},"end":{"line":73,"column":88}},"type":"binary-expr","locations":[{"start":{"line":73,"column":13},"end":{"line":73,"column":29}},{"start":{"line":73,"column":34},"end":{"line":73,"column":60}},{"start":{"line":73,"column":64},"end":{"line":73,"column":87}}],"line":73},"8":{"loc":{"start":{"line":89,"column":4},"end":{"line":91,"column":5}},"type":"if","locations":[{"start":{"line":89,"column":4},"end":{"line":91,"column":5}},{"start":{},"end":{}}],"line":89},"9":{"loc":{"start":{"line":93,"column":4},"end":{"line":100,"column":5}},"type":"if","locations":[{"start":{"line":93,"column":4},"end":{"line":100,"column":5}},{"start":{"line":97,"column":9},"end":{"line":100,"column":5}}],"line":93},"10":{"loc":{"start":{"line":97,"column":9},"end":{"line":100,"column":5}},"type":"if","locations":[{"start":{"line":97,"column":9},"end":{"line":100,"column":5}},{"start":{},"end":{}}],"line":97},"11":{"loc":{"start":{"line":97,"column":13},"end":{"line":97,"column":98}},"type":"binary-expr","locations":[{"start":{"line":97,"column":13},"end":{"line":97,"column":30}},{"start":{"line":97,"column":34},"end":{"line":97,"column":49}},{"start":{"line":97,"column":53},"end":{"line":97,"column":98}}],"line":97},"12":{"loc":{"start":{"line":108,"column":4},"end":{"line":113,"column":5}},"type":"if","locations":[{"start":{"line":108,"column":4},"end":{"line":113,"column":5}},{"start":{},"end":{}}],"line":108},"13":{"loc":{"start":{"line":116,"column":8},"end":{"line":121,"column":9}},"type":"if","locations":[{"start":{"line":116,"column":8},"end":{"line":121,"column":9}},{"start":{"line":119,"column":13},"end":{"line":121,"column":9}}],"line":116},"14":{"loc":{"start":{"line":128,"column":11},"end":{"line":128,"column":111}},"type":"cond-expr","locations":[{"start":{"line":128,"column":46},"end":{"line":128,"column":96}},{"start":{"line":128,"column":99},"end":{"line":128,"column":111}}],"line":128},"15":{"loc":{"start":{"line":140,"column":4},"end":{"line":142,"column":5}},"type":"if","locations":[{"start":{"line":140,"column":4},"end":{"line":142,"column":5}},{"start":{},"end":{}}],"line":140},"16":{"loc":{"start":{"line":144,"column":4},"end":{"line":147,"column":5}},"type":"if","locations":[{"start":{"line":144,"column":4},"end":{"line":147,"column":5}},{"start":{},"end":{}}],"line":144},"17":{"loc":{"start":{"line":153,"column":8},"end":{"line":160,"column":9}},"type":"if","locations":[{"start":{"line":153,"column":8},"end":{"line":160,"column":9}},{"start":{"line":158,"column":13},"end":{"line":160,"column":9}}],"line":153},"18":{"loc":{"start":{"line":163,"column":4},"end":{"line":165,"column":5}},"type":"if","locations":[{"start":{"line":163,"column":4},"end":{"line":165,"column":5}},{"start":{},"end":{}}],"line":163},"19":{"loc":{"start":{"line":178,"column":4},"end":{"line":183,"column":5}},"type":"if","locations":[{"start":{"line":178,"column":4},"end":{"line":183,"column":5}},{"start":{"line":181,"column":9},"end":{"line":183,"column":5}}],"line":178},"20":{"loc":{"start":{"line":178,"column":8},"end":{"line":178,"column":59}},"type":"binary-expr","locations":[{"start":{"line":178,"column":8},"end":{"line":178,"column":29}},{"start":{"line":178,"column":33},"end":{"line":178,"column":59}}],"line":178},"21":{"loc":{"start":{"line":194,"column":11},"end":{"line":194,"column":74}},"type":"cond-expr","locations":[{"start":{"line":194,"column":32},"end":{"line":194,"column":69}},{"start":{"line":194,"column":72},"end":{"line":194,"column":74}}],"line":194},"22":{"loc":{"start":{"line":206,"column":4},"end":{"line":208,"column":5}},"type":"if","locations":[{"start":{"line":206,"column":4},"end":{"line":208,"column":5}},{"start":{},"end":{}}],"line":206},"23":{"loc":{"start":{"line":210,"column":11},"end":{"line":210,"column":74}},"type":"cond-expr","locations":[{"start":{"line":210,"column":30},"end":{"line":210,"column":68}},{"start":{"line":210,"column":71},"end":{"line":210,"column":74}}],"line":210}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":104,"9":165,"10":16,"11":49,"12":0,"13":49,"14":8,"15":41,"16":7,"17":34,"18":9,"19":0,"20":9,"21":2,"22":7,"23":1,"24":6,"25":6,"26":6,"27":2,"28":2,"29":6,"30":6,"31":6,"32":16,"33":10,"34":6,"35":6,"36":6,"37":6,"38":6,"39":15,"40":1,"41":14,"42":14,"43":3,"44":14,"45":14,"46":14,"47":21,"48":21,"49":8,"50":8,"51":8,"52":13,"53":14,"54":1,"55":14,"56":0,"57":0,"58":0,"59":0,"60":0,"61":16,"62":2,"63":14,"64":14},"f":{"0":104,"1":165,"2":16,"3":49,"4":9,"5":15,"6":0,"7":0,"8":16},"b":{"0":[33,71],"1":[165,65],"2":[16,15],"3":[0,49],"4":[8,41],"5":[49,49],"6":[7,34],"7":[41,41,36],"8":[0,9],"9":[2,7],"10":[1,6],"11":[7,3,3],"12":[2,4],"13":[10,6],"14":[1,5],"15":[1,14],"16":[3,11],"17":[8,13],"18":[1,13],"19":[0,0],"20":[0,0],"21":[0,0],"22":[2,14],"23":[13,1]},"inputSourceMap":{"version":3,"file":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/util/renderer-path-polyfill.ts","sources":["/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/util/renderer-path-polyfill.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @ignore\n * BEGIN HEADER\n *\n * Contains:        Rendererer path polyfill functions\n * CVM-Role:        <none>\n * Maintainer:      Hendrik Erz\n * License:         GNU GPL v3\n *\n * Description:     This module contains a subset of Node.js's path functions\n *                  which we need despite the renderer sandbox. NOTE: This is a\n *                  subset that only implements required functions and not deals\n *                  with all edge cases, only the relevant ones!\n *\n * END HEADER\n */\n\n/**\n * Returns the correct path separator for the given path.\n *\n * @param   {string}  path  The path to check\n *\n * @return  {string}        Either \\ or /\n */\nfunction sep (path: string): '\\\\'|'/' {\n  return isWin32Path(path) ? '\\\\' : '/'\n}\n\n/**\n * Utility function that checks if a path is likely a win32-path\n *\n * @param   {string}   path  The path to check\n *\n * @return  {boolean}        Returns true if the path includes backslashes but\n *                           no forward slashes.\n */\nexport function isWin32Path (path: string): boolean {\n  // We make use of the fact that on Windows, forward slashes are forbidden in\n  // path names, and it is unusual to see backslashes in Unix paths.\n  return path.includes('\\\\') && !path.includes('/')\n}\n\n/**\n * Returns true if provided path equals the root on a Windows or Unix machine.\n *\n * @param   {string}   path  The path to check\n *\n * @return  {boolean}        True if it equals the root directory\n */\nfunction isRootDir (path: string): boolean {\n  return path === '/' || /^[A-Z]:\\\\$/i.test(path)\n}\n\n/**\n * Returns true if the given path is absolute.\n *\n * @param   {string}   path  The path to check\n *\n * @return  {boolean}        True if it's absolute\n */\nexport function isAbsolutePath (path: string): boolean {\n  if (path.length < 2) {\n    return false // Invalid length\n  } else if (path.length >= 1 && path.startsWith('/')) {\n    return true // Unix\n  } else if (path.length >= 3 && (/^[A-Z]:[\\\\/]/i.test(path) || path.startsWith('\\\\\\\\'))) {\n    return true // Windows (drive letters + network drives)\n  } else {\n    return false\n  }\n}\n\n/**\n * Returns the relative path from from to to.\n *\n * @param   {string}  from  The source location\n * @param   {string}  to    The target location\n *\n * @return  {string}        The relative path\n */\nexport function relativePath (from: string, to: string): string {\n  if (sep(from) !== sep(to)) {\n    throw new Error('Cannot calculate relative path between win32 and Unix paths')\n  }\n\n  // Edge cases\n  if (to.startsWith(from)) {\n    // to is already the relative path\n    return to.substring(from.length + 1) // Remove path separator\n  } else if (isWin32Path(from) && isWin32Path(to) && to[0].toLowerCase() !== from[0].toLowerCase()) {\n    // Files are on different drives\n    return to\n  } /* else if (pathDirname(from) === pathDirname(to)) {\n    // Same directory\n    return pathBasename(to)\n  } */\n\n  // After the edge cases, we have to do some more work. Finding the relative\n  // path is a combination of adding '..' and parts of either path to the other.\n  const fromSegments = from.split(sep(from))\n  const toSegments = to.split(sep(to))\n  if (fromSegments.length === 1) {\n    // Happens with, e.g., filenames. Node.js's path assumes traversing up from\n    // both path starts here\n    fromSegments.unshift('..')\n    toSegments.unshift('..')\n  }\n  let lastCommonSegment = 0\n  for (let i = 0; i < Math.min(fromSegments.length, toSegments.length); i++) {\n    if (fromSegments[i] === toSegments[i]) {\n      lastCommonSegment = i\n    } else {\n      break\n    }\n  }\n\n  // Now we have to do two things: (1) move up from from to the last common\n  // segment and then (2) append the remaining segments from to\n  const seq = `..${sep(from)}`.repeat(fromSegments.length - lastCommonSegment - 1)\n  const appendix = toSegments.slice(lastCommonSegment + 1).join(sep(to))\n  const relativePath = seq + appendix\n  return relativePath.endsWith(sep(from)) ? relativePath.substring(0, relativePath.length - 1) : relativePath\n}\n\n/**\n * Resolves the provided (relative) path using the (absolute) base to an\n * absolute path to the resource.\n *\n * @param   {string}  base  The base.\n * @param   {string}  path  The path.\n *\n * @return  {string}        The path, turned absolute.\n */\nexport function resolvePath (base: string, path: string): string {\n  if (isAbsolutePath(path)) {\n    return path\n  }\n\n  const pathSegments = path.split(sep(path))\n  if (pathSegments[0] === '.') {\n    // Remove a potential this-dir indicator\n    pathSegments.splice(0, 1)\n  }\n\n  // NOTE: We reverse the array, which makes splicing path segments easier.\n  const baseSegments = base.split(sep(base)).reverse()\n\n  for (let i = 0; i < pathSegments.length; i++) {\n    const segment = pathSegments[i]\n    // For each \"go up\", remove one base segment\n    if (segment === '..') {\n      baseSegments.splice(0, 1) // NOTE: basePath is reversed\n      pathSegments.splice(0, 1)\n      i--\n    } else {\n      break\n    }\n  }\n\n  // This ensures that the resolved path ends with a separator\n  if (pathSegments.length === 0) {\n    pathSegments.push('')\n  }\n\n  return [ ...baseSegments.reverse(), ...pathSegments ].join(sep(base))\n}\n\n/**\n * Returns the last part of a path, i.e. either a filename or a directory name.\n *\n * @param   {string}  path     The path to extract from\n * @param   {string}  extname  An optional extension to strip from the basename\n *\n * @return  {string}           The basename\n */\nexport function pathBasename (path: string, extname?: string): string {\n  const basename = path.substring(path.lastIndexOf(sep(path)) + 1)\n  if (extname !== undefined && basename.endsWith(extname)) {\n    return basename.substring(0, basename.length - extname.length)\n  } else {\n    return basename\n  }\n}\n\n/**\n * Returns the path extension (which can also be .app for folder bundles on\n * macOS).\n *\n * @param   {string}  path  The path to extract from\n *\n * @return  {string}        The extension name; empty string if no extension\n */\nexport function pathExtname (path: string): string {\n  return path.includes('.') ? path.substring(path.lastIndexOf('.')) : ''\n}\n\n/**\n * Returns the directory name of a path (i.e., the parent directory). Returns\n * identity if path is the root directory, and an empty string if it describes\n * only a folder/file. NOTE: This function returns '..' or '.' if applicable.\n *\n * @param   {string}  path  The path to extract from\n *\n * @return  {string}        The directory name\n */\nexport function pathDirname (path: string): string {\n  if (isRootDir(path)) {\n    return path\n  }\n  const s = sep(path)\n  return path.includes(s) ? path.substring(0, path.lastIndexOf(s)) : '.'\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"f23bc6c0ea956e8778df24b2fe3bbf239a8aa4a6","contentHash":"e26e49ed2c6298c6c19ba9a8895fbf4a5f2ec000d771ce06f492db0a906c87e4"},"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/app/service-providers/workspaces/merge-events-into-tree.ts":{"path":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/app/service-providers/workspaces/merge-events-into-tree.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":50}},"4":{"start":{"line":7,"column":25},"end":{"line":7,"column":88}},"5":{"start":{"line":8,"column":17},"end":{"line":8,"column":58}},"6":{"start":{"line":23,"column":29},"end":{"line":23,"column":33}},"7":{"start":{"line":24,"column":4},"end":{"line":81,"column":5}},"8":{"start":{"line":25,"column":8},"end":{"line":80,"column":9}},"9":{"start":{"line":26,"column":12},"end":{"line":29,"column":13}},"10":{"start":{"line":27,"column":16},"end":{"line":27,"column":148}},"11":{"start":{"line":28,"column":16},"end":{"line":28,"column":25}},"12":{"start":{"line":31,"column":27},"end":{"line":31,"column":98}},"13":{"start":{"line":32,"column":12},"end":{"line":34,"column":13}},"14":{"start":{"line":33,"column":16},"end":{"line":33,"column":139}},"15":{"start":{"line":35,"column":12},"end":{"line":35,"column":51}},"16":{"start":{"line":36,"column":12},"end":{"line":36,"column":85}},"17":{"start":{"line":38,"column":13},"end":{"line":80,"column":9}},"18":{"start":{"line":40,"column":12},"end":{"line":49,"column":13}},"19":{"start":{"line":41,"column":41},"end":{"line":41,"column":68}},"20":{"start":{"line":42,"column":16},"end":{"line":42,"column":54}},"21":{"start":{"line":43,"column":16},"end":{"line":43,"column":63}},"22":{"start":{"line":45,"column":16},"end":{"line":45,"column":125}},"23":{"start":{"line":48,"column":16},"end":{"line":48,"column":54}},"24":{"start":{"line":51,"column":13},"end":{"line":80,"column":9}},"25":{"start":{"line":52,"column":27},"end":{"line":52,"column":98}},"26":{"start":{"line":53,"column":12},"end":{"line":55,"column":13}},"27":{"start":{"line":54,"column":16},"end":{"line":54,"column":131}},"28":{"start":{"line":56,"column":24},"end":{"line":56,"column":83}},"29":{"start":{"line":56,"column":58},"end":{"line":56,"column":82}},"30":{"start":{"line":57,"column":12},"end":{"line":59,"column":13}},"31":{"start":{"line":58,"column":16},"end":{"line":58,"column":128}},"32":{"start":{"line":60,"column":12},"end":{"line":63,"column":13}},"33":{"start":{"line":62,"column":16},"end":{"line":62,"column":74}},"34":{"start":{"line":64,"column":12},"end":{"line":64,"column":61}},"35":{"start":{"line":70,"column":28},"end":{"line":70,"column":85}},"36":{"start":{"line":71,"column":27},"end":{"line":71,"column":85}},"37":{"start":{"line":72,"column":12},"end":{"line":74,"column":13}},"38":{"start":{"line":73,"column":16},"end":{"line":73,"column":119}},"39":{"start":{"line":75,"column":24},"end":{"line":75,"column":83}},"40":{"start":{"line":75,"column":58},"end":{"line":75,"column":82}},"41":{"start":{"line":76,"column":12},"end":{"line":78,"column":13}},"42":{"start":{"line":77,"column":16},"end":{"line":77,"column":118}},"43":{"start":{"line":79,"column":12},"end":{"line":79,"column":43}},"44":{"start":{"line":82,"column":4},"end":{"line":82,"column":30}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"mergeEventsIntoTree","decl":{"start":{"line":22,"column":9},"end":{"line":22,"column":28}},"loc":{"start":{"line":22,"column":57},"end":{"line":83,"column":1}},"line":22},"2":{"name":"(anonymous_2)","decl":{"start":{"line":56,"column":50},"end":{"line":56,"column":51}},"loc":{"start":{"line":56,"column":58},"end":{"line":56,"column":82}},"line":56},"3":{"name":"(anonymous_3)","decl":{"start":{"line":75,"column":50},"end":{"line":75,"column":51}},"loc":{"start":{"line":75,"column":58},"end":{"line":75,"column":82}},"line":75}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":8,"column":17},"end":{"line":8,"column":58}},"type":"cond-expr","locations":[{"start":{"line":8,"column":48},"end":{"line":8,"column":52}},{"start":{"line":8,"column":55},"end":{"line":8,"column":58}}],"line":8},"4":{"loc":{"start":{"line":25,"column":8},"end":{"line":80,"column":9}},"type":"if","locations":[{"start":{"line":25,"column":8},"end":{"line":80,"column":9}},{"start":{"line":38,"column":13},"end":{"line":80,"column":9}}],"line":25},"5":{"loc":{"start":{"line":26,"column":12},"end":{"line":29,"column":13}},"type":"if","locations":[{"start":{"line":26,"column":12},"end":{"line":29,"column":13}},{"start":{},"end":{}}],"line":26},"6":{"loc":{"start":{"line":32,"column":12},"end":{"line":34,"column":13}},"type":"if","locations":[{"start":{"line":32,"column":12},"end":{"line":34,"column":13}},{"start":{},"end":{}}],"line":32},"7":{"loc":{"start":{"line":32,"column":16},"end":{"line":32,"column":67}},"type":"binary-expr","locations":[{"start":{"line":32,"column":16},"end":{"line":32,"column":36}},{"start":{"line":32,"column":40},"end":{"line":32,"column":67}}],"line":32},"8":{"loc":{"start":{"line":38,"column":13},"end":{"line":80,"column":9}},"type":"if","locations":[{"start":{"line":38,"column":13},"end":{"line":80,"column":9}},{"start":{"line":51,"column":13},"end":{"line":80,"column":9}}],"line":38},"9":{"loc":{"start":{"line":38,"column":17},"end":{"line":38,"column":82}},"type":"binary-expr","locations":[{"start":{"line":38,"column":17},"end":{"line":38,"column":40}},{"start":{"line":38,"column":44},"end":{"line":38,"column":82}}],"line":38},"10":{"loc":{"start":{"line":40,"column":12},"end":{"line":49,"column":13}},"type":"if","locations":[{"start":{"line":40,"column":12},"end":{"line":49,"column":13}},{"start":{"line":47,"column":17},"end":{"line":49,"column":13}}],"line":40},"11":{"loc":{"start":{"line":40,"column":16},"end":{"line":40,"column":96}},"type":"binary-expr","locations":[{"start":{"line":40,"column":16},"end":{"line":40,"column":53}},{"start":{"line":40,"column":57},"end":{"line":40,"column":96}}],"line":40},"12":{"loc":{"start":{"line":51,"column":13},"end":{"line":80,"column":9}},"type":"if","locations":[{"start":{"line":51,"column":13},"end":{"line":80,"column":9}},{"start":{"line":66,"column":13},"end":{"line":80,"column":9}}],"line":51},"13":{"loc":{"start":{"line":53,"column":12},"end":{"line":55,"column":13}},"type":"if","locations":[{"start":{"line":53,"column":12},"end":{"line":55,"column":13}},{"start":{},"end":{}}],"line":53},"14":{"loc":{"start":{"line":53,"column":16},"end":{"line":53,"column":67}},"type":"binary-expr","locations":[{"start":{"line":53,"column":16},"end":{"line":53,"column":36}},{"start":{"line":53,"column":40},"end":{"line":53,"column":67}}],"line":53},"15":{"loc":{"start":{"line":57,"column":12},"end":{"line":59,"column":13}},"type":"if","locations":[{"start":{"line":57,"column":12},"end":{"line":59,"column":13}},{"start":{},"end":{}}],"line":57},"16":{"loc":{"start":{"line":60,"column":12},"end":{"line":63,"column":13}},"type":"if","locations":[{"start":{"line":60,"column":12},"end":{"line":63,"column":13}},{"start":{},"end":{}}],"line":60},"17":{"loc":{"start":{"line":72,"column":12},"end":{"line":74,"column":13}},"type":"if","locations":[{"start":{"line":72,"column":12},"end":{"line":74,"column":13}},{"start":{},"end":{}}],"line":72},"18":{"loc":{"start":{"line":72,"column":16},"end":{"line":72,"column":67}},"type":"binary-expr","locations":[{"start":{"line":72,"column":16},"end":{"line":72,"column":36}},{"start":{"line":72,"column":40},"end":{"line":72,"column":67}}],"line":72},"19":{"loc":{"start":{"line":76,"column":12},"end":{"line":78,"column":13}},"type":"if","locations":[{"start":{"line":76,"column":12},"end":{"line":78,"column":13}},{"start":{},"end":{}}],"line":76}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":6,"7":6,"8":9,"9":2,"10":0,"11":0,"12":2,"13":2,"14":0,"15":2,"16":2,"17":7,"18":3,"19":2,"20":2,"21":2,"22":2,"23":1,"24":4,"25":2,"26":2,"27":0,"28":2,"29":2,"30":2,"31":0,"32":2,"33":0,"34":2,"35":2,"36":2,"37":2,"38":0,"39":2,"40":2,"41":2,"42":0,"43":2,"44":6},"f":{"0":1,"1":6,"2":2,"3":2},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1],"3":[0,1],"4":[2,7],"5":[0,2],"6":[0,2],"7":[2,2],"8":[3,4],"9":[7,5],"10":[2,1],"11":[3,2],"12":[2,2],"13":[0,2],"14":[2,2],"15":[0,2],"16":[0,2],"17":[0,2],"18":[2,2],"19":[0,2]},"inputSourceMap":{"version":3,"file":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/app/service-providers/workspaces/merge-events-into-tree.ts","sources":["/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/app/service-providers/workspaces/merge-events-into-tree.ts"],"names":[],"mappings":"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","sourcesContent":["import locateByPath from '@providers/fsal/util/locate-by-path'\nimport type { AnyDescriptor, DirDescriptor } from '@dts/common/fsal'\nimport type { ChangeDescriptor } from './root'\nimport { type GenericSorter } from '@providers/fsal/util/directory-sorter'\n\nconst PATH_SEP = process.platform === 'win32' ? '\\\\' : '/'\n\n/**\n * This function takes a series of change events for the file trees and merges\n * those one after another into the provided tree, returning the new tree. NOTE:\n * This requires that the events are actually accumulated for this tree;\n * providing another tree will lead to errors and inconsistencies. NOTE: This\n * function will also be imported by the renderer so DO NOT USE ANY MAIN PROCESS\n * DEPENDENCIES!\n *\n * @param   {ChangeDescriptor[]}  events  The list of changes\n * @param   {AnyDescriptor}       tree    The tree to merge the changes into\n *\n * @return  {AnyDescriptor}               The modified tree\n */\nexport function mergeEventsIntoTree (events: ChangeDescriptor[], tree: AnyDescriptor, sortFunction: GenericSorter): AnyDescriptor {\n  let descriptorToReturn = tree\n\n  for (const event of events) {\n    if (event.type === 'add') {\n      if (locateByPath(descriptorToReturn, event.descriptor.path) !== undefined) {\n        console.error(`Received an add event for a path that is already present in the tree -- not merging in (${event.descriptor.path}).`)\n        continue\n      }\n\n      // Find the parent, and add the given descriptor to its children\n      const parent = locateByPath(descriptorToReturn, event.descriptor.dir)\n      if (parent === undefined || parent.type !== 'directory') {\n        throw new Error(`[mergeEventsIntoTree] add:${event.descriptor.path}: Local tree did not contain the descriptor's parent.`)\n      }\n\n      parent.children.push(event.descriptor)\n      parent.children = sortFunction(parent.children, parent.settings.sorting)\n    } else if (event.type === 'change' && event.path === descriptorToReturn.path) {\n      // The descriptor itself has changed (NOTE: We are checking both descriptors for type reasons)\n      if (event.descriptor.type === 'directory' && descriptorToReturn.type === 'directory') {\n        const existingChildren = descriptorToReturn.children\n        descriptorToReturn = event.descriptor\n        descriptorToReturn.children = existingChildren\n        // A \"change\" is also when the sorting has changed.\n        descriptorToReturn.children = sortFunction(descriptorToReturn.children, descriptorToReturn.settings.sorting)\n      } else {\n        descriptorToReturn = event.descriptor\n      }\n    } else if (event.type === 'change') {\n      const parent = locateByPath(descriptorToReturn, event.descriptor.dir)\n\n      if (parent === undefined || parent.type !== 'directory') {\n        throw new Error(`[mergeEventsIntoTree] change:${event.path}: Local tree did not contain the descriptor's parent.`)\n      }\n\n      const idx = parent.children.findIndex(desc => desc.path === event.path)\n\n      if (idx < 0) {\n        throw new Error(`[mergeEventsIntoTree] change:${event.path}: Could not find the old descriptor in the parent.`)\n      }\n\n      if (event.descriptor.type === 'directory') {\n        // Ensure to carry over the recursive children array\n        event.descriptor.children = (parent.children[idx] as DirDescriptor).children\n      }\n\n      parent.children.splice(idx, 1, event.descriptor)\n    } else {\n      // Unlink event\n      // NOTE: We cannot use path here since this function is also required in\n      // renderer processes\n      const dirname = event.path.substring(0, event.path.lastIndexOf(PATH_SEP))\n      const parent = locateByPath(descriptorToReturn, dirname)\n      if (parent === undefined || parent.type !== 'directory') {\n        throw new Error(`[mergeEventsIntoTree] unlink:${event.path}: Could not find the descriptor's parent.`)\n      }\n\n      const idx = parent.children.findIndex(desc => desc.path === event.path)\n\n      if (idx < 0) {\n        throw new Error(`[mergeEventsIntoTree] unlink:${event.path}: Could not remove descriptor from tree.`)\n      }\n\n      parent.children.splice(idx, 1)\n    }\n  }\n\n  return descriptorToReturn\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"c43fe771a540190beec7a04fad82e014315f4f28","contentHash":"b9595ebf8b49d909ceeff5fa2b35741bfb5e48a569b36abbaa7cd063d5199756"},"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/app/service-providers/fsal/util/locate-by-path.ts":{"path":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/app/service-providers/fsal/util/locate-by-path.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":31}},"2":{"start":{"line":4,"column":17},"end":{"line":4,"column":58}},"3":{"start":{"line":16,"column":4},"end":{"line":44,"column":5}},"4":{"start":{"line":17,"column":8},"end":{"line":26,"column":9}},"5":{"start":{"line":18,"column":12},"end":{"line":25,"column":13}},"6":{"start":{"line":20,"column":16},"end":{"line":20,"column":34}},"7":{"start":{"line":22,"column":17},"end":{"line":25,"column":13}},"8":{"start":{"line":24,"column":16},"end":{"line":24,"column":69}},"9":{"start":{"line":28,"column":9},"end":{"line":44,"column":5}},"10":{"start":{"line":30,"column":8},"end":{"line":33,"column":9}},"11":{"start":{"line":32,"column":12},"end":{"line":32,"column":24}},"12":{"start":{"line":34,"column":8},"end":{"line":43,"column":9}},"13":{"start":{"line":35,"column":12},"end":{"line":42,"column":13}},"14":{"start":{"line":37,"column":16},"end":{"line":37,"column":29}},"15":{"start":{"line":39,"column":17},"end":{"line":42,"column":13}},"16":{"start":{"line":41,"column":16},"end":{"line":41,"column":64}},"17":{"start":{"line":45,"column":4},"end":{"line":45,"column":21}}},"fnMap":{"0":{"name":"locateByPath","decl":{"start":{"line":14,"column":9},"end":{"line":14,"column":21}},"loc":{"start":{"line":14,"column":40},"end":{"line":46,"column":1}},"line":14}},"branchMap":{"0":{"loc":{"start":{"line":4,"column":17},"end":{"line":4,"column":58}},"type":"cond-expr","locations":[{"start":{"line":4,"column":48},"end":{"line":4,"column":52}},{"start":{"line":4,"column":55},"end":{"line":4,"column":58}}],"line":4},"1":{"loc":{"start":{"line":16,"column":4},"end":{"line":44,"column":5}},"type":"if","locations":[{"start":{"line":16,"column":4},"end":{"line":44,"column":5}},{"start":{"line":28,"column":9},"end":{"line":44,"column":5}}],"line":16},"2":{"loc":{"start":{"line":18,"column":12},"end":{"line":25,"column":13}},"type":"if","locations":[{"start":{"line":18,"column":12},"end":{"line":25,"column":13}},{"start":{"line":22,"column":17},"end":{"line":25,"column":13}}],"line":18},"3":{"loc":{"start":{"line":22,"column":17},"end":{"line":25,"column":13}},"type":"if","locations":[{"start":{"line":22,"column":17},"end":{"line":25,"column":13}},{"start":{},"end":{}}],"line":22},"4":{"loc":{"start":{"line":22,"column":21},"end":{"line":22,"column":105}},"type":"binary-expr","locations":[{"start":{"line":22,"column":21},"end":{"line":22,"column":70}},{"start":{"line":22,"column":74},"end":{"line":22,"column":105}}],"line":22},"5":{"loc":{"start":{"line":28,"column":9},"end":{"line":44,"column":5}},"type":"if","locations":[{"start":{"line":28,"column":9},"end":{"line":44,"column":5}},{"start":{},"end":{}}],"line":28},"6":{"loc":{"start":{"line":30,"column":8},"end":{"line":33,"column":9}},"type":"if","locations":[{"start":{"line":30,"column":8},"end":{"line":33,"column":9}},{"start":{},"end":{}}],"line":30},"7":{"loc":{"start":{"line":35,"column":12},"end":{"line":42,"column":13}},"type":"if","locations":[{"start":{"line":35,"column":12},"end":{"line":42,"column":13}},{"start":{"line":39,"column":17},"end":{"line":42,"column":13}}],"line":35},"8":{"loc":{"start":{"line":39,"column":17},"end":{"line":42,"column":13}},"type":"if","locations":[{"start":{"line":39,"column":17},"end":{"line":42,"column":13}},{"start":{},"end":{}}],"line":39},"9":{"loc":{"start":{"line":39,"column":21},"end":{"line":39,"column":95}},"type":"binary-expr","locations":[{"start":{"line":39,"column":21},"end":{"line":39,"column":65}},{"start":{"line":39,"column":69},"end":{"line":39,"column":95}}],"line":39}},"s":{"0":1,"1":1,"2":1,"3":8,"4":0,"5":0,"6":0,"7":0,"8":0,"9":8,"10":8,"11":6,"12":2,"13":0,"14":0,"15":0,"16":0,"17":2},"f":{"0":8},"b":{"0":[0,1],"1":[0,8],"2":[0,0],"3":[0,0],"4":[0,0],"5":[8,0],"6":[6,2],"7":[0,0],"8":[0,0],"9":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/app/service-providers/fsal/util/locate-by-path.ts","sources":["/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/app/service-providers/fsal/util/locate-by-path.ts"],"names":[],"mappings":";;AA2BA,+BA+BC;AA1CD,MAAM,QAAQ,GAAG,OAAO,CAAC,QAAQ,KAAK,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAA;AAE1D;;;;;;;;GAQG;AACH,SAAwB,YAAY,CAAE,IAAmC,EAAE,UAAkB;IAC3F,2BAA2B;IAC3B,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC;QACxB,KAAK,MAAM,UAAU,IAAI,IAAI,EAAE,CAAC;YAC9B,IAAI,UAAU,KAAK,UAAU,CAAC,IAAI,EAAE,CAAC;gBACnC,8BAA8B;gBAC9B,OAAO,UAAU,CAAA;YACnB,CAAC;iBAAM,IAAI,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,IAAI,GAAG,QAAQ,CAAC,IAAI,UAAU,CAAC,IAAI,KAAK,WAAW,EAAE,CAAC;gBAChG,2BAA2B;gBAC3B,OAAO,YAAY,CAAC,UAAU,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAA;YACtD,CAAC;QACH,CAAC;IACH,CAAC;SAAM,IAAI,IAAI,CAAC,IAAI,KAAK,WAAW,EAAE,CAAC;QACrC,sBAAsB;QACtB,IAAI,UAAU,KAAK,IAAI,CAAC,IAAI,EAAE,CAAC;YAC7B,oBAAoB;YACpB,OAAO,IAAI,CAAA;QACb,CAAC;QAED,KAAK,MAAM,KAAK,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC;YAClC,IAAI,UAAU,KAAK,KAAK,CAAC,IAAI,EAAE,CAAC;gBAC9B,2BAA2B;gBAC3B,OAAO,KAAK,CAAA;YACd,CAAC;iBAAM,IAAI,UAAU,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,GAAG,QAAQ,CAAC,IAAI,KAAK,CAAC,IAAI,KAAK,WAAW,EAAE,CAAC;gBACtF,wBAAwB;gBACxB,OAAO,YAAY,CAAC,KAAK,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAA;YACjD,CAAC;QACH,CAAC;IACH,CAAC;IAED,OAAO,SAAS,CAAA;AAClB,CAAC","sourcesContent":["/**\n * @ignore\n * BEGIN HEADER\n *\n * Contains:        locateByPath\n * CVM-Role:        Utility Function\n * Maintainer:      Hendrik Erz\n * License:         GNU GPL v3\n *\n * Description:     A small utility function that takes a directory tree and\n *                  returns the descriptor for the given path, if available.\n *\n * END HEADER\n */\nimport type { AnyDescriptor } from '@dts/common/fsal'\n\nconst PATH_SEP = process.platform === 'win32' ? '\\\\' : '/'\n\n/**\n * Takes a tree of descriptors and returns the descriptor that exactly matches\n * targetPath, or undefined.\n *\n * @param   {AnyDescriptor}            tree        One or more descriptors\n * @param   {string}                   targetPath  The (absolute) path to search for\n *\n * @return  {AnyDescriptor|undefined}              Either the descriptor or undefined\n */\nexport default function locateByPath (tree: AnyDescriptor|AnyDescriptor[], targetPath: string): AnyDescriptor|undefined {\n  // We need to find a target\n  if (Array.isArray(tree)) {\n    for (const descriptor of tree) {\n      if (targetPath === descriptor.path) {\n        // We have the correct element\n        return descriptor\n      } else if (targetPath.startsWith(descriptor.path + PATH_SEP) && descriptor.type === 'directory') {\n        // We have the correct tree\n        return locateByPath(descriptor.children, targetPath)\n      }\n    }\n  } else if (tree.type === 'directory') {\n    // Single tree element\n    if (targetPath === tree.path) {\n      // Found the element\n      return tree\n    }\n\n    for (const child of tree.children) {\n      if (targetPath === child.path) {\n        // We got the correct child\n        return child\n      } else if (targetPath.startsWith(child.path + PATH_SEP) && child.type === 'directory') {\n        // Traverse further down\n        return locateByPath(child.children, targetPath)\n      }\n    }\n  }\n\n  return undefined\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"64d8da2a2e30e196b64b8e86c003afb01c0a2a53","contentHash":"d66f9c79c60505a53dcfb7b0c14a8f1e4a33ebb188dd25bd96b18ab68fe11829"},"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/app/service-providers/fsal/util/directory-sorter.ts":{"path":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/app/service-providers/fsal/util/directory-sorter.ts","statementMap":{"0":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"1":{"start":{"line":15,"column":0},"end":{"line":15,"column":30}},"2":{"start":{"line":25,"column":4},"end":{"line":41,"column":6}},"3":{"start":{"line":26,"column":20},"end":{"line":26,"column":29}},"4":{"start":{"line":27,"column":20},"end":{"line":27,"column":29}},"5":{"start":{"line":28,"column":8},"end":{"line":31,"column":9}},"6":{"start":{"line":29,"column":12},"end":{"line":29,"column":35}},"7":{"start":{"line":30,"column":12},"end":{"line":30,"column":35}},"8":{"start":{"line":32,"column":8},"end":{"line":40,"column":9}},"9":{"start":{"line":33,"column":12},"end":{"line":33,"column":22}},"10":{"start":{"line":35,"column":13},"end":{"line":40,"column":9}},"11":{"start":{"line":36,"column":12},"end":{"line":36,"column":21}},"12":{"start":{"line":39,"column":12},"end":{"line":39,"column":21}},"13":{"start":{"line":53,"column":4},"end":{"line":79,"column":6}},"14":{"start":{"line":55,"column":20},"end":{"line":55,"column":40}},"15":{"start":{"line":56,"column":20},"end":{"line":56,"column":40}},"16":{"start":{"line":57,"column":23},"end":{"line":57,"column":141}},"17":{"start":{"line":58,"column":23},"end":{"line":58,"column":141}},"18":{"start":{"line":59,"column":25},"end":{"line":59,"column":77}},"19":{"start":{"line":60,"column":25},"end":{"line":60,"column":77}},"20":{"start":{"line":61,"column":22},"end":{"line":61,"column":57}},"21":{"start":{"line":62,"column":25},"end":{"line":62,"column":58}},"22":{"start":{"line":65,"column":8},"end":{"line":67,"column":9}},"23":{"start":{"line":66,"column":12},"end":{"line":66,"column":35}},"24":{"start":{"line":68,"column":8},"end":{"line":70,"column":9}},"25":{"start":{"line":69,"column":12},"end":{"line":69,"column":35}},"26":{"start":{"line":71,"column":8},"end":{"line":73,"column":9}},"27":{"start":{"line":72,"column":12},"end":{"line":72,"column":40}},"28":{"start":{"line":74,"column":8},"end":{"line":76,"column":9}},"29":{"start":{"line":75,"column":12},"end":{"line":75,"column":40}},"30":{"start":{"line":77,"column":21},"end":{"line":77,"column":74}},"31":{"start":{"line":78,"column":8},"end":{"line":78,"column":42}},"32":{"start":{"line":90,"column":4},"end":{"line":124,"column":6}},"33":{"start":{"line":92,"column":20},"end":{"line":92,"column":40}},"34":{"start":{"line":93,"column":20},"end":{"line":93,"column":40}},"35":{"start":{"line":94,"column":23},"end":{"line":94,"column":141}},"36":{"start":{"line":95,"column":23},"end":{"line":95,"column":141}},"37":{"start":{"line":96,"column":25},"end":{"line":96,"column":77}},"38":{"start":{"line":97,"column":25},"end":{"line":97,"column":77}},"39":{"start":{"line":98,"column":22},"end":{"line":98,"column":57}},"40":{"start":{"line":99,"column":25},"end":{"line":99,"column":58}},"41":{"start":{"line":102,"column":8},"end":{"line":104,"column":9}},"42":{"start":{"line":103,"column":12},"end":{"line":103,"column":35}},"43":{"start":{"line":105,"column":8},"end":{"line":107,"column":9}},"44":{"start":{"line":106,"column":12},"end":{"line":106,"column":35}},"45":{"start":{"line":108,"column":8},"end":{"line":110,"column":9}},"46":{"start":{"line":109,"column":12},"end":{"line":109,"column":40}},"47":{"start":{"line":111,"column":8},"end":{"line":113,"column":9}},"48":{"start":{"line":112,"column":12},"end":{"line":112,"column":40}},"49":{"start":{"line":115,"column":8},"end":{"line":123,"column":9}},"50":{"start":{"line":116,"column":12},"end":{"line":116,"column":22}},"51":{"start":{"line":118,"column":13},"end":{"line":123,"column":9}},"52":{"start":{"line":119,"column":12},"end":{"line":119,"column":21}},"53":{"start":{"line":122,"column":12},"end":{"line":122,"column":21}},"54":{"start":{"line":144,"column":4},"end":{"line":189,"column":6}},"55":{"start":{"line":146,"column":18},"end":{"line":146,"column":20}},"56":{"start":{"line":147,"column":18},"end":{"line":147,"column":20}},"57":{"start":{"line":149,"column":27},"end":{"line":149,"column":52}},"58":{"start":{"line":151,"column":28},"end":{"line":151,"column":119}},"59":{"start":{"line":153,"column":8},"end":{"line":164,"column":9}},"60":{"start":{"line":154,"column":12},"end":{"line":163,"column":13}},"61":{"start":{"line":158,"column":20},"end":{"line":158,"column":30}},"62":{"start":{"line":159,"column":20},"end":{"line":159,"column":26}},"63":{"start":{"line":161,"column":20},"end":{"line":161,"column":30}},"64":{"start":{"line":162,"column":20},"end":{"line":162,"column":26}},"65":{"start":{"line":166,"column":8},"end":{"line":166,"column":28}},"66":{"start":{"line":168,"column":8},"end":{"line":181,"column":9}},"67":{"start":{"line":170,"column":16},"end":{"line":170,"column":36}},"68":{"start":{"line":171,"column":16},"end":{"line":171,"column":22}},"69":{"start":{"line":173,"column":16},"end":{"line":173,"column":46}},"70":{"start":{"line":174,"column":16},"end":{"line":174,"column":22}},"71":{"start":{"line":176,"column":16},"end":{"line":176,"column":49}},"72":{"start":{"line":177,"column":16},"end":{"line":177,"column":22}},"73":{"start":{"line":179,"column":16},"end":{"line":179,"column":59}},"74":{"start":{"line":180,"column":16},"end":{"line":180,"column":22}},"75":{"start":{"line":183,"column":8},"end":{"line":188,"column":9}},"76":{"start":{"line":184,"column":12},"end":{"line":184,"column":31}},"77":{"start":{"line":187,"column":12},"end":{"line":187,"column":31}}},"fnMap":{"0":{"name":"getDateSorter","decl":{"start":{"line":24,"column":9},"end":{"line":24,"column":22}},"loc":{"start":{"line":24,"column":34},"end":{"line":42,"column":1}},"line":24},"1":{"name":"sortDate","decl":{"start":{"line":25,"column":20},"end":{"line":25,"column":28}},"loc":{"start":{"line":25,"column":35},"end":{"line":41,"column":5}},"line":25},"2":{"name":"getNaturalSorter","decl":{"start":{"line":52,"column":9},"end":{"line":52,"column":25}},"loc":{"start":{"line":52,"column":52},"end":{"line":80,"column":1}},"line":52},"3":{"name":"sortNatural","decl":{"start":{"line":53,"column":20},"end":{"line":53,"column":31}},"loc":{"start":{"line":53,"column":38},"end":{"line":79,"column":5}},"line":53},"4":{"name":"getAsciiSorter","decl":{"start":{"line":89,"column":9},"end":{"line":89,"column":23}},"loc":{"start":{"line":89,"column":41},"end":{"line":125,"column":1}},"line":89},"5":{"name":"sortAscii","decl":{"start":{"line":90,"column":20},"end":{"line":90,"column":29}},"loc":{"start":{"line":90,"column":36},"end":{"line":124,"column":5}},"line":90},"6":{"name":"getSorter","decl":{"start":{"line":143,"column":9},"end":{"line":143,"column":18}},"loc":{"start":{"line":143,"column":87},"end":{"line":190,"column":1}},"line":143},"7":{"name":"sort","decl":{"start":{"line":144,"column":20},"end":{"line":144,"column":24}},"loc":{"start":{"line":144,"column":48},"end":{"line":189,"column":5}},"line":144}},"branchMap":{"0":{"loc":{"start":{"line":28,"column":8},"end":{"line":31,"column":9}},"type":"if","locations":[{"start":{"line":28,"column":8},"end":{"line":31,"column":9}},{"start":{},"end":{}}],"line":28},"1":{"loc":{"start":{"line":32,"column":8},"end":{"line":40,"column":9}},"type":"if","locations":[{"start":{"line":32,"column":8},"end":{"line":40,"column":9}},{"start":{"line":35,"column":13},"end":{"line":40,"column":9}}],"line":32},"2":{"loc":{"start":{"line":35,"column":13},"end":{"line":40,"column":9}},"type":"if","locations":[{"start":{"line":35,"column":13},"end":{"line":40,"column":9}},{"start":{"line":38,"column":13},"end":{"line":40,"column":9}}],"line":35},"3":{"loc":{"start":{"line":57,"column":23},"end":{"line":57,"column":141}},"type":"cond-expr","locations":[{"start":{"line":57,"column":45},"end":{"line":57,"column":133}},{"start":{"line":57,"column":136},"end":{"line":57,"column":141}}],"line":57},"4":{"loc":{"start":{"line":57,"column":53},"end":{"line":57,"column":119}},"type":"cond-expr","locations":[{"start":{"line":57,"column":102},"end":{"line":57,"column":108}},{"start":{"line":57,"column":111},"end":{"line":57,"column":119}}],"line":57},"5":{"loc":{"start":{"line":57,"column":53},"end":{"line":57,"column":99}},"type":"binary-expr","locations":[{"start":{"line":57,"column":53},"end":{"line":57,"column":82}},{"start":{"line":57,"column":86},"end":{"line":57,"column":99}}],"line":57},"6":{"loc":{"start":{"line":58,"column":23},"end":{"line":58,"column":141}},"type":"cond-expr","locations":[{"start":{"line":58,"column":45},"end":{"line":58,"column":133}},{"start":{"line":58,"column":136},"end":{"line":58,"column":141}}],"line":58},"7":{"loc":{"start":{"line":58,"column":53},"end":{"line":58,"column":119}},"type":"cond-expr","locations":[{"start":{"line":58,"column":102},"end":{"line":58,"column":108}},{"start":{"line":58,"column":111},"end":{"line":58,"column":119}}],"line":58},"8":{"loc":{"start":{"line":58,"column":53},"end":{"line":58,"column":99}},"type":"binary-expr","locations":[{"start":{"line":58,"column":53},"end":{"line":58,"column":82}},{"start":{"line":58,"column":86},"end":{"line":58,"column":99}}],"line":58},"9":{"loc":{"start":{"line":59,"column":25},"end":{"line":59,"column":77}},"type":"cond-expr","locations":[{"start":{"line":59,"column":47},"end":{"line":59,"column":69}},{"start":{"line":59,"column":72},"end":{"line":59,"column":77}}],"line":59},"10":{"loc":{"start":{"line":60,"column":25},"end":{"line":60,"column":77}},"type":"cond-expr","locations":[{"start":{"line":60,"column":47},"end":{"line":60,"column":69}},{"start":{"line":60,"column":72},"end":{"line":60,"column":77}}],"line":60},"11":{"loc":{"start":{"line":65,"column":8},"end":{"line":67,"column":9}},"type":"if","locations":[{"start":{"line":65,"column":8},"end":{"line":67,"column":9}},{"start":{},"end":{}}],"line":65},"12":{"loc":{"start":{"line":65,"column":12},"end":{"line":65,"column":29}},"type":"binary-expr","locations":[{"start":{"line":65,"column":12},"end":{"line":65,"column":20}},{"start":{"line":65,"column":24},"end":{"line":65,"column":29}}],"line":65},"13":{"loc":{"start":{"line":68,"column":8},"end":{"line":70,"column":9}},"type":"if","locations":[{"start":{"line":68,"column":8},"end":{"line":70,"column":9}},{"start":{},"end":{}}],"line":68},"14":{"loc":{"start":{"line":68,"column":12},"end":{"line":68,"column":29}},"type":"binary-expr","locations":[{"start":{"line":68,"column":12},"end":{"line":68,"column":20}},{"start":{"line":68,"column":24},"end":{"line":68,"column":29}}],"line":68},"15":{"loc":{"start":{"line":71,"column":8},"end":{"line":73,"column":9}},"type":"if","locations":[{"start":{"line":71,"column":8},"end":{"line":73,"column":9}},{"start":{},"end":{}}],"line":71},"16":{"loc":{"start":{"line":71,"column":12},"end":{"line":71,"column":30}},"type":"binary-expr","locations":[{"start":{"line":71,"column":12},"end":{"line":71,"column":18}},{"start":{"line":71,"column":22},"end":{"line":71,"column":30}}],"line":71},"17":{"loc":{"start":{"line":74,"column":8},"end":{"line":76,"column":9}},"type":"if","locations":[{"start":{"line":74,"column":8},"end":{"line":76,"column":9}},{"start":{},"end":{}}],"line":74},"18":{"loc":{"start":{"line":74,"column":12},"end":{"line":74,"column":30}},"type":"binary-expr","locations":[{"start":{"line":74,"column":12},"end":{"line":74,"column":18}},{"start":{"line":74,"column":22},"end":{"line":74,"column":30}}],"line":74},"19":{"loc":{"start":{"line":94,"column":23},"end":{"line":94,"column":141}},"type":"cond-expr","locations":[{"start":{"line":94,"column":45},"end":{"line":94,"column":133}},{"start":{"line":94,"column":136},"end":{"line":94,"column":141}}],"line":94},"20":{"loc":{"start":{"line":94,"column":53},"end":{"line":94,"column":119}},"type":"cond-expr","locations":[{"start":{"line":94,"column":102},"end":{"line":94,"column":108}},{"start":{"line":94,"column":111},"end":{"line":94,"column":119}}],"line":94},"21":{"loc":{"start":{"line":94,"column":53},"end":{"line":94,"column":99}},"type":"binary-expr","locations":[{"start":{"line":94,"column":53},"end":{"line":94,"column":82}},{"start":{"line":94,"column":86},"end":{"line":94,"column":99}}],"line":94},"22":{"loc":{"start":{"line":95,"column":23},"end":{"line":95,"column":141}},"type":"cond-expr","locations":[{"start":{"line":95,"column":45},"end":{"line":95,"column":133}},{"start":{"line":95,"column":136},"end":{"line":95,"column":141}}],"line":95},"23":{"loc":{"start":{"line":95,"column":53},"end":{"line":95,"column":119}},"type":"cond-expr","locations":[{"start":{"line":95,"column":102},"end":{"line":95,"column":108}},{"start":{"line":95,"column":111},"end":{"line":95,"column":119}}],"line":95},"24":{"loc":{"start":{"line":95,"column":53},"end":{"line":95,"column":99}},"type":"binary-expr","locations":[{"start":{"line":95,"column":53},"end":{"line":95,"column":82}},{"start":{"line":95,"column":86},"end":{"line":95,"column":99}}],"line":95},"25":{"loc":{"start":{"line":96,"column":25},"end":{"line":96,"column":77}},"type":"cond-expr","locations":[{"start":{"line":96,"column":47},"end":{"line":96,"column":69}},{"start":{"line":96,"column":72},"end":{"line":96,"column":77}}],"line":96},"26":{"loc":{"start":{"line":97,"column":25},"end":{"line":97,"column":77}},"type":"cond-expr","locations":[{"start":{"line":97,"column":47},"end":{"line":97,"column":69}},{"start":{"line":97,"column":72},"end":{"line":97,"column":77}}],"line":97},"27":{"loc":{"start":{"line":102,"column":8},"end":{"line":104,"column":9}},"type":"if","locations":[{"start":{"line":102,"column":8},"end":{"line":104,"column":9}},{"start":{},"end":{}}],"line":102},"28":{"loc":{"start":{"line":102,"column":12},"end":{"line":102,"column":29}},"type":"binary-expr","locations":[{"start":{"line":102,"column":12},"end":{"line":102,"column":20}},{"start":{"line":102,"column":24},"end":{"line":102,"column":29}}],"line":102},"29":{"loc":{"start":{"line":105,"column":8},"end":{"line":107,"column":9}},"type":"if","locations":[{"start":{"line":105,"column":8},"end":{"line":107,"column":9}},{"start":{},"end":{}}],"line":105},"30":{"loc":{"start":{"line":105,"column":12},"end":{"line":105,"column":29}},"type":"binary-expr","locations":[{"start":{"line":105,"column":12},"end":{"line":105,"column":20}},{"start":{"line":105,"column":24},"end":{"line":105,"column":29}}],"line":105},"31":{"loc":{"start":{"line":108,"column":8},"end":{"line":110,"column":9}},"type":"if","locations":[{"start":{"line":108,"column":8},"end":{"line":110,"column":9}},{"start":{},"end":{}}],"line":108},"32":{"loc":{"start":{"line":108,"column":12},"end":{"line":108,"column":30}},"type":"binary-expr","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":18}},{"start":{"line":108,"column":22},"end":{"line":108,"column":30}}],"line":108},"33":{"loc":{"start":{"line":111,"column":8},"end":{"line":113,"column":9}},"type":"if","locations":[{"start":{"line":111,"column":8},"end":{"line":113,"column":9}},{"start":{},"end":{}}],"line":111},"34":{"loc":{"start":{"line":111,"column":12},"end":{"line":111,"column":30}},"type":"binary-expr","locations":[{"start":{"line":111,"column":12},"end":{"line":111,"column":18}},{"start":{"line":111,"column":22},"end":{"line":111,"column":30}}],"line":111},"35":{"loc":{"start":{"line":115,"column":8},"end":{"line":123,"column":9}},"type":"if","locations":[{"start":{"line":115,"column":8},"end":{"line":123,"column":9}},{"start":{"line":118,"column":13},"end":{"line":123,"column":9}}],"line":115},"36":{"loc":{"start":{"line":118,"column":13},"end":{"line":123,"column":9}},"type":"if","locations":[{"start":{"line":118,"column":13},"end":{"line":123,"column":9}},{"start":{"line":121,"column":13},"end":{"line":123,"column":9}}],"line":118},"37":{"loc":{"start":{"line":144,"column":30},"end":{"line":144,"column":46}},"type":"default-arg","locations":[{"start":{"line":144,"column":37},"end":{"line":144,"column":46}}],"line":144},"38":{"loc":{"start":{"line":151,"column":28},"end":{"line":151,"column":119}},"type":"cond-expr","locations":[{"start":{"line":151,"column":43},"end":{"line":151,"column":85}},{"start":{"line":151,"column":88},"end":{"line":151,"column":119}}],"line":151},"39":{"loc":{"start":{"line":154,"column":12},"end":{"line":163,"column":13}},"type":"switch","locations":[{"start":{"line":155,"column":16},"end":{"line":155,"column":28}},{"start":{"line":156,"column":16},"end":{"line":156,"column":28}},{"start":{"line":157,"column":16},"end":{"line":159,"column":26}},{"start":{"line":160,"column":16},"end":{"line":162,"column":26}}],"line":154},"40":{"loc":{"start":{"line":168,"column":8},"end":{"line":181,"column":9}},"type":"switch","locations":[{"start":{"line":169,"column":12},"end":{"line":171,"column":22}},{"start":{"line":172,"column":12},"end":{"line":174,"column":22}},{"start":{"line":175,"column":12},"end":{"line":177,"column":22}},{"start":{"line":178,"column":12},"end":{"line":180,"column":22}}],"line":168},"41":{"loc":{"start":{"line":183,"column":8},"end":{"line":188,"column":9}},"type":"if","locations":[{"start":{"line":183,"column":8},"end":{"line":188,"column":9}},{"start":{"line":186,"column":13},"end":{"line":188,"column":9}}],"line":183}},"s":{"0":1,"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":4,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":1,"55":4,"56":4,"57":4,"58":4,"59":4,"60":3,"61":3,"62":3,"63":0,"64":0,"65":4,"66":4,"67":4,"68":4,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":4,"76":4,"77":0},"f":{"0":0,"1":0,"2":0,"3":0,"4":4,"5":0,"6":1,"7":4},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0],"38":[0,4],"39":[3,3,3,0],"40":[4,0,0,0],"41":[4,0]},"inputSourceMap":{"version":3,"file":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/app/service-providers/fsal/util/directory-sorter.ts","sources":["/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/app/service-providers/fsal/util/directory-sorter.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * BEGIN HEADER\n *\n * Contains:        Utility function\n * CVM-Role:        <none>\n * Maintainer:      Hendrik Erz\n * License:         GNU GPL v3\n *\n * Description:     This file contains a utility function to sort directories.\n *\n * END HEADER\n */\n\nexport interface RequiredSortingProps {\n  type: string\n  name: string\n  frontmatter?: any\n  firstHeading?: string|null\n  modtime: number\n  creationtime: number\n}\n\ntype SortingType = 'name-up'|'name-down'|'time-up'|'time-down'\ntype FilenameDisplay = 'filename'|'title'|'heading'|'title+heading'\n\nexport type GenericSorter = <T extends RequiredSortingProps>(arr: T[], type?: SortingType) => T[]\n\n/**\n * Helper function to sort files by modification or creation time\n *\n * @param   {'modtime'|'creationtime'}  whichTime  How to sort\n *\n * @return  {Function}                             Function compatible with\n *                                                 array.sort()\n */\nfunction getDateSorter (whichTime: 'modtime'|'creationtime'): (a: any, b: any) => number {\n  return function sortDate<T extends RequiredSortingProps> (a: T, b: T): number {\n    let aDate = a.modtime\n    let bDate = b.modtime\n\n    if (whichTime !== 'modtime') {\n      aDate = a.creationtime\n      bDate = b.creationtime\n    }\n\n    if (aDate > bDate) {\n      return -1\n    } else if (aDate < bDate) {\n      return 1\n    } else {\n      return 0\n    }\n  }\n}\n\n/**\n * Helper function to sort files using a collator\n *\n * @param   {FilenameDisplay}  fileNameDisplay  How to sort the files\n * @param   {string}           appLang          The application language\n *\n * @return  {Function}                          Function compatible with\n *                                              array.sort()\n */\nfunction getNaturalSorter (fileNameDisplay: FilenameDisplay, appLang: string): (a: any, b: any) => number {\n  return function sortNatural <T extends RequiredSortingProps> (a: T, b: T): number {\n    let aSort = a.name.toLowerCase()\n    let bSort = b.name.toLowerCase()\n\n    const aTitle = (a.type === 'file') ? typeof a.frontmatter?.title === 'string' : false\n    const bTitle = (b.type === 'file') ? typeof b.frontmatter?.title === 'string' : false\n    const aHeading = (a.type === 'file') ? a.firstHeading != null : false\n    const bHeading = (b.type === 'file') ? b.firstHeading != null : false\n\n    const useH1 = fileNameDisplay.includes('heading')\n    const useTitle = fileNameDisplay.includes('title')\n\n    // Use a heading level 1 if applicable, and, optionally, overwrite this with\n    // the YAML frontmatter title variable\n\n    if (aHeading && useH1) {\n      aSort = a.firstHeading as string\n    }\n\n    if (bHeading && useH1) {\n      bSort = b.firstHeading as string\n    }\n\n    if (aTitle && useTitle) {\n      aSort = a.frontmatter.title\n    }\n\n    if (bTitle && useTitle) {\n      bSort = b.frontmatter.title\n    }\n\n    const coll = new Intl.Collator([ appLang, 'en' ], { numeric: true })\n\n    return coll.compare(aSort, bSort)\n  }\n}\n\n/**\n * Helper function to sort files by ascii characters\n *\n * @param   {FilenameDisplay}  fileNameDisplay  How to sort the files\n *\n * @return  {number}                            Function compatible with\n *                                              array.sort()\n */\nfunction getAsciiSorter (fileNameDisplay: FilenameDisplay): (a: any, b: any) => number {\n  return function sortAscii <T extends RequiredSortingProps> (a: T, b: T): number {\n    let aSort = a.name.toLowerCase()\n    let bSort = b.name.toLowerCase()\n\n    const aTitle = (a.type === 'file') ? typeof a.frontmatter?.title === 'string' : false\n    const bTitle = (b.type === 'file') ? typeof b.frontmatter?.title === 'string' : false\n    const aHeading = (a.type === 'file') ? a.firstHeading != null : false\n    const bHeading = (b.type === 'file') ? b.firstHeading != null : false\n\n    const useH1 = fileNameDisplay.includes('heading')\n    const useTitle = fileNameDisplay.includes('title')\n\n    // Use a heading level 1 if applicable, and, optionally, overwrite this with\n    // the YAML frontmatter title variable\n\n    if (aHeading && useH1) {\n      aSort = a.firstHeading as string\n    }\n\n    if (bHeading && useH1) {\n      bSort = b.firstHeading as string\n    }\n\n    if (aTitle && useTitle) {\n      aSort = a.frontmatter.title\n    }\n\n    if (bTitle && useTitle) {\n      bSort = b.frontmatter.title\n    }\n\n    // Negative return: a is smaller b (case insensitive)\n    if (aSort < bSort) {\n      return -1\n    } else if (aSort > bSort) {\n      return 1\n    } else {\n      return 0\n    }\n  }\n}\n\n/**\n * Returns a function that can sort a children-array on a directory descriptor.\n *\n * @param   {'natural'|'ascii'}         sortingType       How to sort characters\n * @param   {boolean}                   sortFoldersFirst  Whether to sort\n *                                                        folders first\n * @param   {FilenameDisplay}           fileNameDisplay   Which property to sort\n *                                                        on when sorting by\n *                                                        name\n * @param   {string}                    appLang           The application\n *                                                        language\n * @param   {'modtime'|'creationtime'}  whichTime         How to sort when\n *                                                        sorting by time\n *\n * @return  {GenericSorter}                               Returns a sorter\n *                                                        function\n */\nexport function getSorter (\n  sortingType: 'natural'|'ascii',\n  sortFoldersFirst: boolean,\n  fileNameDisplay: FilenameDisplay,\n  appLang: string,\n  whichTime: 'modtime'|'creationtime'\n): GenericSorter {\n  return function sort <T extends RequiredSortingProps> (arr: T[], type: SortingType = 'name-up'): T[] {\n    // First split the array based on type\n    const f: T[] = []\n    const d: T[] = []\n\n    // Should we use natural sorting or ascii?\n    const useNatural = sortingType === 'natural'\n\n    // Write in the sortingFunc whatever we should be using\n    const sortingFunc = (useNatural) ? getNaturalSorter(fileNameDisplay, appLang) : getAsciiSorter(fileNameDisplay)\n\n    // Split up the children list\n    for (const c of arr) {\n      switch (c.type) {\n        case 'file':\n        case 'code':\n        case 'other':\n          f.push(c)\n          break\n        case 'directory':\n          d.push(c)\n          break\n      }\n    }\n\n    // Sort the directories (always based on name)\n    d.sort(sortingFunc)\n\n    // Now sort the files according to the type of sorting\n    switch (type) {\n      case 'name-up':\n        f.sort(sortingFunc)\n        break\n      case 'name-down':\n        f.sort(sortingFunc).reverse()\n        break\n      case 'time-up':\n        f.sort(getDateSorter(whichTime))\n        break\n      case 'time-down':\n        f.sort(getDateSorter(whichTime)).reverse()\n        break\n    }\n\n    // Return sorted array files -> directories\n    if (sortFoldersFirst) {\n      return d.concat(f)\n    } else {\n      return f.concat(d)\n    }\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"2e03697342eaa59032c7fd04460409a20566268e","contentHash":"57f9551a67318ccf730f4713ce4fc55eb3458e0b1f1d5a712f492ce256276f8f"},"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/util/move-section.ts":{"path":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/util/move-section.ts","statementMap":{"0":{"start":{"line":15,"column":0},"end":{"line":15,"column":62}},"1":{"start":{"line":16,"column":0},"end":{"line":16,"column":30}},"2":{"start":{"line":25,"column":16},"end":{"line":25,"column":33}},"3":{"start":{"line":26,"column":23},"end":{"line":26,"column":31}},"4":{"start":{"line":27,"column":21},"end":{"line":27,"column":29}},"5":{"start":{"line":28,"column":23},"end":{"line":28,"column":25}},"6":{"start":{"line":31,"column":4},"end":{"line":31,"column":111}},"7":{"start":{"line":32,"column":4},"end":{"line":34,"column":5}},"8":{"start":{"line":33,"column":8},"end":{"line":33,"column":21}},"9":{"start":{"line":38,"column":24},"end":{"line":38,"column":63}},"10":{"start":{"line":39,"column":4},"end":{"line":45,"column":5}},"11":{"start":{"line":39,"column":17},"end":{"line":39,"column":33}},"12":{"start":{"line":40,"column":8},"end":{"line":44,"column":9}},"13":{"start":{"line":42,"column":12},"end":{"line":42,"column":31}},"14":{"start":{"line":43,"column":12},"end":{"line":43,"column":18}},"15":{"start":{"line":50,"column":4},"end":{"line":52,"column":5}},"16":{"start":{"line":51,"column":8},"end":{"line":51,"column":38}},"17":{"start":{"line":53,"column":18},"end":{"line":53,"column":59}},"18":{"start":{"line":54,"column":4},"end":{"line":98,"column":5}},"19":{"start":{"line":57,"column":8},"end":{"line":57,"column":51}},"20":{"start":{"line":59,"column":8},"end":{"line":60,"column":32}},"21":{"start":{"line":60,"column":12},"end":{"line":60,"column":32}},"22":{"start":{"line":62,"column":8},"end":{"line":62,"column":38}},"23":{"start":{"line":64,"column":8},"end":{"line":65,"column":24}},"24":{"start":{"line":65,"column":12},"end":{"line":65,"column":24}},"25":{"start":{"line":67,"column":9},"end":{"line":98,"column":5}},"26":{"start":{"line":72,"column":28},"end":{"line":72,"column":56}},"27":{"start":{"line":74,"column":8},"end":{"line":74,"column":82}},"28":{"start":{"line":76,"column":27},"end":{"line":76,"column":46}},"29":{"start":{"line":78,"column":8},"end":{"line":78,"column":67}},"30":{"start":{"line":80,"column":9},"end":{"line":98,"column":5}},"31":{"start":{"line":84,"column":8},"end":{"line":88,"column":9}},"32":{"start":{"line":86,"column":12},"end":{"line":87,"column":33}},"33":{"start":{"line":87,"column":16},"end":{"line":87,"column":33}},"34":{"start":{"line":90,"column":8},"end":{"line":90,"column":51}},"35":{"start":{"line":93,"column":8},"end":{"line":95,"column":9}},"36":{"start":{"line":94,"column":12},"end":{"line":94,"column":24}},"37":{"start":{"line":97,"column":8},"end":{"line":97,"column":44}},"38":{"start":{"line":101,"column":4},"end":{"line":101,"column":28}}},"fnMap":{"0":{"name":"moveSection","decl":{"start":{"line":23,"column":9},"end":{"line":23,"column":20}},"loc":{"start":{"line":23,"column":46},"end":{"line":102,"column":1}},"line":23}},"branchMap":{"0":{"loc":{"start":{"line":31,"column":20},"end":{"line":31,"column":102}},"type":"cond-expr","locations":[{"start":{"line":31,"column":95},"end":{"line":31,"column":97}},{"start":{"line":31,"column":100},"end":{"line":31,"column":102}}],"line":31},"1":{"loc":{"start":{"line":31,"column":20},"end":{"line":31,"column":92}},"type":"binary-expr","locations":[{"start":{"line":31,"column":20},"end":{"line":31,"column":75}},{"start":{"line":31,"column":79},"end":{"line":31,"column":92}}],"line":31},"2":{"loc":{"start":{"line":32,"column":4},"end":{"line":34,"column":5}},"type":"if","locations":[{"start":{"line":32,"column":4},"end":{"line":34,"column":5}},{"start":{},"end":{}}],"line":32},"3":{"loc":{"start":{"line":40,"column":8},"end":{"line":44,"column":9}},"type":"if","locations":[{"start":{"line":40,"column":8},"end":{"line":44,"column":9}},{"start":{},"end":{}}],"line":40},"4":{"loc":{"start":{"line":50,"column":4},"end":{"line":52,"column":5}},"type":"if","locations":[{"start":{"line":50,"column":4},"end":{"line":52,"column":5}},{"start":{},"end":{}}],"line":50},"5":{"loc":{"start":{"line":54,"column":4},"end":{"line":98,"column":5}},"type":"if","locations":[{"start":{"line":54,"column":4},"end":{"line":98,"column":5}},{"start":{"line":67,"column":9},"end":{"line":98,"column":5}}],"line":54},"6":{"loc":{"start":{"line":59,"column":8},"end":{"line":60,"column":32}},"type":"if","locations":[{"start":{"line":59,"column":8},"end":{"line":60,"column":32}},{"start":{},"end":{}}],"line":59},"7":{"loc":{"start":{"line":64,"column":8},"end":{"line":65,"column":24}},"type":"if","locations":[{"start":{"line":64,"column":8},"end":{"line":65,"column":24}},{"start":{},"end":{}}],"line":64},"8":{"loc":{"start":{"line":67,"column":9},"end":{"line":98,"column":5}},"type":"if","locations":[{"start":{"line":67,"column":9},"end":{"line":98,"column":5}},{"start":{"line":80,"column":9},"end":{"line":98,"column":5}}],"line":67},"9":{"loc":{"start":{"line":80,"column":9},"end":{"line":98,"column":5}},"type":"if","locations":[{"start":{"line":80,"column":9},"end":{"line":98,"column":5}},{"start":{},"end":{}}],"line":80},"10":{"loc":{"start":{"line":84,"column":8},"end":{"line":88,"column":9}},"type":"if","locations":[{"start":{"line":84,"column":8},"end":{"line":88,"column":9}},{"start":{},"end":{}}],"line":84},"11":{"loc":{"start":{"line":86,"column":12},"end":{"line":87,"column":33}},"type":"if","locations":[{"start":{"line":86,"column":12},"end":{"line":87,"column":33}},{"start":{},"end":{}}],"line":86},"12":{"loc":{"start":{"line":93,"column":8},"end":{"line":95,"column":9}},"type":"if","locations":[{"start":{"line":93,"column":8},"end":{"line":95,"column":9}},{"start":{},"end":{}}],"line":93}},"s":{"0":1,"1":1,"2":3,"3":3,"4":3,"5":3,"6":3,"7":3,"8":0,"9":3,"10":3,"11":3,"12":12,"13":2,"14":2,"15":3,"16":1,"17":3,"18":3,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":2,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":3},"f":{"0":3},"b":{"0":[3,0],"1":[3,3],"2":[0,3],"3":[2,10],"4":[1,2],"5":[1,2],"6":[1,0],"7":[1,0],"8":[1,1],"9":[1,0],"10":[1,0],"11":[1,0],"12":[1,0]},"inputSourceMap":{"version":3,"file":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/util/move-section.ts","sources":["/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/util/move-section.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @ignore\n * BEGIN HEADER\n *\n * Contains:        moveSection function\n * CVM-Role:        Utility function\n * Maintainer:      Hendrik Erz\n * License:         GNU GPL v3\n *\n * Description:     Swaps sections demarcated by headers within Markdown files.\n *\n * END HEADER\n */\n\n/**\n * Moves a whole section (as demarcated by ATX headings)\n * @param  {number} fromLine The line at which the section to be moved begins\n * @param  {number} toLine   The target line, above which the section should be inserted.\n * @return {string}    The new file contents with the section moved.\n */\nexport default function moveSection (value: string, fromLine: number, toLine: number): string {\n  let lines = value.split('\\n')\n  let sectionStart = fromLine\n  let sectionEnd = fromLine\n  let headingLevel = -1\n\n  // First match of the following regex contains the heading characters, ergo\n  // the length is the heading level\n  headingLevel = (/^(#{1,6}) (.*)$/.exec(lines[fromLine]) ?? []).length\n\n  if (headingLevel === 0) {\n    return value // The caller has passed the wrong fromLine\n  }\n\n  // Build a regex to be used now. We'll only stop at either a higher or\n  // same level heading. We're doing this, because this way we'll include\n  // lesser headings in this section.\n  const searchRegex = new RegExp(`^#{1,${headingLevel}} .+$`)\n  for (let i = sectionStart + 1; i < lines.length; i++) {\n    if (searchRegex.test(lines[i])) {\n      // We've found a heading of at least this level.\n      sectionEnd = i - 1 // Don't include the current line, obviously\n      break\n    }\n  }\n\n  // Sanity check: If sectionEnd has not been set, this means that the user\n  // wanted to move the final section -- the RegExp will naturally not yield\n  // any result, so we take everything until the very end to be included in\n  // the section.\n  if (sectionEnd === fromLine) {\n    sectionEnd = lines.length - 1\n  }\n\n  let section = lines.slice(sectionStart, sectionEnd + 1)\n\n  if (toLine < 0) {\n    // We should move the section to the end, so cut and append it.\n    // Remove the old section.\n    lines.splice(sectionStart, section.length)\n    // Sneak a new line into the section, if there's no padding\n    if (lines[lines.length - 1] !== '') section.unshift('')\n    // Concat the section\n    lines = lines.concat(section)\n\n    // Remove a trailing newline if applicable\n    if (lines[lines.length - 1] === '') lines.pop()\n  } else if (sectionEnd < toLine) {\n    // The section should be moved to the back, so to not confuse line numbers,\n    // we first need to insert the section (i.e. copy and paste), and only\n    // afterwards remove the section.\n    // First get the stuff before the old section position\n    let beforeSection = lines.slice(0, sectionStart)\n    // Then append the part behind the section up until the target line\n    beforeSection = beforeSection.concat(lines.slice(sectionEnd + 1, toLine))\n\n    // Get everything after the target line\n    let afterSection = lines.slice(toLine)\n\n    // Now glue it back together (afterSection -> section, then section -> beforeSection)\n    lines = beforeSection.concat(section.concat(afterSection))\n  } else if (sectionStart > toLine) {\n    // The section should be moved to the front, so we can safely cut it directly.\n    // Remove the old section.\n\n    // It was in fact the last section, so let's add a newline afterwards.\n    if (sectionEnd + 1 === lines.length) {\n      // ... but only if it doesn't end with a newline\n      if (section[section.length - 1] !== '') section.push('')\n    }\n\n    // Now splice out the section\n    lines.splice(sectionStart, section.length)\n\n    // Now that the file has been truncated by the section, let's make sure\n    // it does not end with a newline\n    if (lines[lines.length - 1] === '') {\n      lines.pop()\n    }\n\n    // Then insert it above the target line.\n    lines.splice(toLine, 0, ...section)\n  }\n\n  // Now we have the correct lines. So let's simply replace the whole content\n  // with it. Tadaa!\n  return lines.join('\\n')\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"4f394907859b50c83f92d182a4958358ecdde3df","contentHash":"22c61fc4d5132a4ddaf9844cc4073d37d5115773d910c18e47254f93a716c17f"},"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/modules/markdown-editor/table-editor/parse-grid.ts":{"path":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/modules/markdown-editor/table-editor/parse-grid.ts","statementMap":{"0":{"start":{"line":18,"column":0},"end":{"line":18,"column":62}},"1":{"start":{"line":19,"column":0},"end":{"line":19,"column":33}},"2":{"start":{"line":28,"column":4},"end":{"line":30,"column":5}},"3":{"start":{"line":29,"column":8},"end":{"line":29,"column":45}},"4":{"start":{"line":31,"column":4},"end":{"line":33,"column":5}},"5":{"start":{"line":32,"column":8},"end":{"line":32,"column":50}},"6":{"start":{"line":34,"column":4},"end":{"line":36,"column":5}},"7":{"start":{"line":35,"column":8},"end":{"line":35,"column":68}},"8":{"start":{"line":37,"column":16},"end":{"line":37,"column":18}},"9":{"start":{"line":38,"column":26},"end":{"line":38,"column":28}},"10":{"start":{"line":39,"column":21},"end":{"line":39,"column":22}},"11":{"start":{"line":43,"column":20},"end":{"line":43,"column":21}},"12":{"start":{"line":44,"column":4},"end":{"line":49,"column":5}},"13":{"start":{"line":44,"column":17},"end":{"line":44,"column":18}},"14":{"start":{"line":45,"column":8},"end":{"line":48,"column":9}},"15":{"start":{"line":46,"column":12},"end":{"line":46,"column":26}},"16":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"17":{"start":{"line":50,"column":24},"end":{"line":50,"column":48}},"18":{"start":{"line":51,"column":4},"end":{"line":51,"column":58}},"19":{"start":{"line":52,"column":4},"end":{"line":63,"column":5}},"20":{"start":{"line":52,"column":17},"end":{"line":52,"column":18}},"21":{"start":{"line":53,"column":20},"end":{"line":53,"column":43}},"22":{"start":{"line":54,"column":8},"end":{"line":62,"column":9}},"23":{"start":{"line":55,"column":12},"end":{"line":55,"column":40}},"24":{"start":{"line":57,"column":13},"end":{"line":62,"column":9}},"25":{"start":{"line":58,"column":12},"end":{"line":58,"column":39}},"26":{"start":{"line":61,"column":12},"end":{"line":61,"column":38}},"27":{"start":{"line":65,"column":31},"end":{"line":65,"column":36}},"28":{"start":{"line":66,"column":4},"end":{"line":103,"column":5}},"29":{"start":{"line":66,"column":17},"end":{"line":66,"column":18}},"30":{"start":{"line":67,"column":20},"end":{"line":67,"column":36}},"31":{"start":{"line":70,"column":8},"end":{"line":72,"column":9}},"32":{"start":{"line":71,"column":12},"end":{"line":71,"column":90}},"33":{"start":{"line":73,"column":8},"end":{"line":75,"column":9}},"34":{"start":{"line":74,"column":12},"end":{"line":74,"column":96}},"35":{"start":{"line":76,"column":8},"end":{"line":79,"column":9}},"36":{"start":{"line":77,"column":12},"end":{"line":77,"column":40}},"37":{"start":{"line":78,"column":12},"end":{"line":78,"column":21}},"38":{"start":{"line":80,"column":8},"end":{"line":82,"column":9}},"39":{"start":{"line":81,"column":12},"end":{"line":81,"column":99}},"40":{"start":{"line":84,"column":21},"end":{"line":84,"column":73}},"41":{"start":{"line":84,"column":48},"end":{"line":84,"column":59}},"42":{"start":{"line":85,"column":8},"end":{"line":90,"column":9}},"43":{"start":{"line":86,"column":12},"end":{"line":86,"column":37}},"44":{"start":{"line":88,"column":13},"end":{"line":90,"column":9}},"45":{"start":{"line":89,"column":12},"end":{"line":89,"column":137}},"46":{"start":{"line":91,"column":8},"end":{"line":101,"column":9}},"47":{"start":{"line":93,"column":12},"end":{"line":93,"column":27}},"48":{"start":{"line":98,"column":12},"end":{"line":100,"column":13}},"49":{"start":{"line":98,"column":25},"end":{"line":98,"column":26}},"50":{"start":{"line":99,"column":16},"end":{"line":99,"column":57}},"51":{"start":{"line":102,"column":8},"end":{"line":102,"column":37}},"52":{"start":{"line":104,"column":4},"end":{"line":107,"column":5}},"53":{"start":{"line":106,"column":8},"end":{"line":106,"column":87}},"54":{"start":{"line":110,"column":4},"end":{"line":116,"column":5}},"55":{"start":{"line":110,"column":19},"end":{"line":110,"column":20}},"56":{"start":{"line":111,"column":8},"end":{"line":115,"column":9}},"57":{"start":{"line":111,"column":23},"end":{"line":111,"column":24}},"58":{"start":{"line":112,"column":12},"end":{"line":114,"column":13}},"59":{"start":{"line":113,"column":16},"end":{"line":113,"column":59}},"60":{"start":{"line":118,"column":4},"end":{"line":118,"column":34}}},"fnMap":{"0":{"name":"parseGridTable","decl":{"start":{"line":25,"column":9},"end":{"line":25,"column":23}},"loc":{"start":{"line":25,"column":39},"end":{"line":119,"column":1}},"line":25},"1":{"name":"(anonymous_1)","decl":{"start":{"line":84,"column":40},"end":{"line":84,"column":41}},"loc":{"start":{"line":84,"column":48},"end":{"line":84,"column":59}},"line":84}},"branchMap":{"0":{"loc":{"start":{"line":28,"column":4},"end":{"line":30,"column":5}},"type":"if","locations":[{"start":{"line":28,"column":4},"end":{"line":30,"column":5}},{"start":{},"end":{}}],"line":28},"1":{"loc":{"start":{"line":31,"column":4},"end":{"line":33,"column":5}},"type":"if","locations":[{"start":{"line":31,"column":4},"end":{"line":33,"column":5}},{"start":{},"end":{}}],"line":31},"2":{"loc":{"start":{"line":34,"column":4},"end":{"line":36,"column":5}},"type":"if","locations":[{"start":{"line":34,"column":4},"end":{"line":36,"column":5}},{"start":{},"end":{}}],"line":34},"3":{"loc":{"start":{"line":34,"column":8},"end":{"line":34,"column":100}},"type":"binary-expr","locations":[{"start":{"line":34,"column":8},"end":{"line":34,"column":34}},{"start":{"line":34,"column":39},"end":{"line":34,"column":65}},{"start":{"line":34,"column":69},"end":{"line":34,"column":99}}],"line":34},"4":{"loc":{"start":{"line":45,"column":8},"end":{"line":48,"column":9}},"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":48,"column":9}},{"start":{},"end":{}}],"line":45},"5":{"loc":{"start":{"line":54,"column":8},"end":{"line":62,"column":9}},"type":"if","locations":[{"start":{"line":54,"column":8},"end":{"line":62,"column":9}},{"start":{"line":57,"column":13},"end":{"line":62,"column":9}}],"line":54},"6":{"loc":{"start":{"line":54,"column":12},"end":{"line":54,"column":52}},"type":"binary-expr","locations":[{"start":{"line":54,"column":12},"end":{"line":54,"column":31}},{"start":{"line":54,"column":35},"end":{"line":54,"column":52}}],"line":54},"7":{"loc":{"start":{"line":57,"column":13},"end":{"line":62,"column":9}},"type":"if","locations":[{"start":{"line":57,"column":13},"end":{"line":62,"column":9}},{"start":{"line":60,"column":13},"end":{"line":62,"column":9}}],"line":57},"8":{"loc":{"start":{"line":70,"column":8},"end":{"line":72,"column":9}},"type":"if","locations":[{"start":{"line":70,"column":8},"end":{"line":72,"column":9}},{"start":{},"end":{}}],"line":70},"9":{"loc":{"start":{"line":73,"column":8},"end":{"line":75,"column":9}},"type":"if","locations":[{"start":{"line":73,"column":8},"end":{"line":75,"column":9}},{"start":{},"end":{}}],"line":73},"10":{"loc":{"start":{"line":73,"column":12},"end":{"line":73,"column":55}},"type":"binary-expr","locations":[{"start":{"line":73,"column":12},"end":{"line":73,"column":31}},{"start":{"line":73,"column":35},"end":{"line":73,"column":55}}],"line":73},"11":{"loc":{"start":{"line":76,"column":8},"end":{"line":79,"column":9}},"type":"if","locations":[{"start":{"line":76,"column":8},"end":{"line":79,"column":9}},{"start":{},"end":{}}],"line":76},"12":{"loc":{"start":{"line":80,"column":8},"end":{"line":82,"column":9}},"type":"if","locations":[{"start":{"line":80,"column":8},"end":{"line":82,"column":9}},{"start":{},"end":{}}],"line":80},"13":{"loc":{"start":{"line":85,"column":8},"end":{"line":90,"column":9}},"type":"if","locations":[{"start":{"line":85,"column":8},"end":{"line":90,"column":9}},{"start":{"line":88,"column":13},"end":{"line":90,"column":9}}],"line":85},"14":{"loc":{"start":{"line":88,"column":13},"end":{"line":90,"column":9}},"type":"if","locations":[{"start":{"line":88,"column":13},"end":{"line":90,"column":9}},{"start":{},"end":{}}],"line":88},"15":{"loc":{"start":{"line":91,"column":8},"end":{"line":101,"column":9}},"type":"if","locations":[{"start":{"line":91,"column":8},"end":{"line":101,"column":9}},{"start":{"line":95,"column":13},"end":{"line":101,"column":9}}],"line":91},"16":{"loc":{"start":{"line":104,"column":4},"end":{"line":107,"column":5}},"type":"if","locations":[{"start":{"line":104,"column":4},"end":{"line":107,"column":5}},{"start":{},"end":{}}],"line":104},"17":{"loc":{"start":{"line":104,"column":8},"end":{"line":104,"column":47}},"type":"binary-expr","locations":[{"start":{"line":104,"column":8},"end":{"line":104,"column":24}},{"start":{"line":104,"column":28},"end":{"line":104,"column":47}}],"line":104},"18":{"loc":{"start":{"line":112,"column":12},"end":{"line":114,"column":13}},"type":"if","locations":[{"start":{"line":112,"column":12},"end":{"line":114,"column":13}},{"start":{},"end":{}}],"line":112}},"s":{"0":1,"1":1,"2":3,"3":3,"4":3,"5":3,"6":3,"7":0,"8":3,"9":3,"10":3,"11":3,"12":3,"13":3,"14":9,"15":2,"16":2,"17":3,"18":3,"19":3,"20":3,"21":9,"22":9,"23":2,"24":7,"25":2,"26":5,"27":3,"28":3,"29":3,"30":17,"31":17,"32":0,"33":17,"34":0,"35":17,"36":9,"37":9,"38":8,"39":0,"40":8,"41":40,"42":8,"43":3,"44":5,"45":0,"46":8,"47":6,"48":2,"49":2,"50":6,"51":8,"52":3,"53":0,"54":3,"55":3,"56":6,"57":6,"58":18,"59":4,"60":3},"f":{"0":3,"1":40},"b":{"0":[3,0],"1":[3,0],"2":[0,3],"3":[3,3,0],"4":[2,7],"5":[2,7],"6":[9,4],"7":[2,5],"8":[0,17],"9":[0,17],"10":[17,9],"11":[9,8],"12":[0,8],"13":[3,5],"14":[0,5],"15":[6,2],"16":[0,3],"17":[3,3],"18":[4,14]},"inputSourceMap":{"version":3,"file":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/modules/markdown-editor/table-editor/parse-grid.ts","sources":["/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/modules/markdown-editor/table-editor/parse-grid.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;;EAeE;;AASF,iCA4GC;AAjHD;;;;GAIG;AACH,SAAwB,cAAc,CAAE,aAA8B;IACpE,qEAAqE;IACrE,gCAAgC;IAChC,IAAI,OAAO,aAAa,KAAK,QAAQ,EAAE,CAAC;QACtC,aAAa,GAAG,aAAa,CAAC,IAAI,EAAE,CAAA;IACtC,CAAC;IAED,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,aAAa,CAAC,EAAE,CAAC;QAClC,aAAa,GAAG,aAAa,CAAC,KAAK,CAAC,IAAI,CAAC,CAAA;IAC3C,CAAC;IAED,IAAI,aAAa,CAAC,MAAM,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,KAAK,CAAC,IAAI,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC;QACjG,MAAM,IAAI,WAAW,CAAC,oCAAoC,CAAC,CAAA;IAC7D,CAAC;IAED,MAAM,GAAG,GAAe,EAAE,CAAA;IAC1B,MAAM,aAAa,GAAmB,EAAE,CAAA,CAAC,oCAAoC;IAC7E,IAAI,UAAU,GAAG,CAAC,CAAA,CAAC,2DAA2D;IAE9E,4EAA4E;IAC5E,8EAA8E;IAC9E,kDAAkD;IAClD,IAAI,SAAS,GAAG,CAAC,CAAA;IACjB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,aAAa,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;QAC9C,IAAI,WAAW,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,qCAAqC;YAC7E,SAAS,GAAG,CAAC,CAAA;YACb,MAAK;QACP,CAAC;IACH,CAAC;IAED,IAAI,aAAa,GAAoB,aAAa,CAAC,SAAS,CAAC,CAAA;IAE7D,aAAa,GAAG,aAAa,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAA;IACrD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,aAAa,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;QAC9C,MAAM,GAAG,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAA;QACnC,IAAI,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,CAAC;YAC7C,aAAa,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAA;QAC7B,CAAC;aAAM,IAAI,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,CAAC;YAC7B,aAAa,CAAC,CAAC,CAAC,GAAG,OAAO,CAAA;QAC5B,CAAC;aAAM,CAAC;YACN,aAAa,CAAC,CAAC,CAAC,GAAG,MAAM,CAAA;QAC3B,CAAC;IACH,CAAC;IAED,kCAAkC;IAClC,IAAI,oBAAoB,GAAG,KAAK,CAAA;IAChC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,aAAa,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;QAC9C,MAAM,GAAG,GAAG,aAAa,CAAC,CAAC,CAAC,CAAA;QAE5B,gDAAgD;QAChD,8DAA8D;QAC9D,IAAI,GAAG,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE,CAAC;YACtB,MAAM,IAAI,WAAW,CAAC,oCAAoC,CAAC,GAAG,CAAC,aAAa,CAAC,CAAA;QAC/E,CAAC;QAED,IAAI,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,oBAAoB,EAAE,CAAC;YAChD,MAAM,IAAI,WAAW,CAAC,4DAA4D,CAAC,CAAA;QACrF,CAAC;QAED,IAAI,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE,CAAC;YACxB,oBAAoB,GAAG,IAAI,CAAA;YAC3B,SAAQ,CAAC,wBAAwB;QACnC,CAAC;QAED,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE,CAAC;YACzB,MAAM,IAAI,KAAK,CAAC,mCAAmC,CAAC,GAAG,CAAC,6BAA6B,CAAC,CAAA;QACxF,CAAC;QAED,mBAAmB;QACnB,MAAM,IAAI,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAA;QAEjE,IAAI,UAAU,KAAK,CAAC,EAAE,CAAC;YACrB,UAAU,GAAG,IAAI,CAAC,MAAM,CAAA,CAAC,wCAAwC;QACnE,CAAC;aAAM,IAAI,UAAU,KAAK,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,0CAA0C;YACjF,MAAM,IAAI,WAAW,CAAC,qCAAqC,GAAG,CAAC,MAAM,oBAAoB,CAAC,GAAG,CAAC,eAAe,UAAU,IAAI,CAAC,CAAA;QAC9H,CAAC;QAED,IAAI,oBAAoB,EAAE,CAAC;YACzB,+BAA+B;YAC/B,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;QAChB,CAAC;aAAM,CAAC;YACN,0EAA0E;YAC1E,6DAA6D;YAC7D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,EAAE,CAAC,EAAE,EAAE,CAAC;gBACpC,GAAG,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,CAAA;YAC1C,CAAC;QACH,CAAC;QAED,oBAAoB,GAAG,KAAK,CAAA;IAC9B,CAAC;IAED,IAAI,GAAG,CAAC,MAAM,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;QAC5C,sDAAsD;QACtD,MAAM,IAAI,WAAW,CAAC,uDAAuD,CAAC,CAAA;IAChF,CAAC;IAED,2EAA2E;IAC3E,sDAAsD;IACtD,KAAK,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,GAAG,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE,CAAC;QAC1C,KAAK,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE,CAAC;YAC7C,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC;gBACjC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAA;YAC5C,CAAC;QACH,CAAC;IACH,CAAC;IAED,iBAAiB;IACjB,OAAO,EAAE,GAAG,EAAE,aAAa,EAAE,CAAA;AAC/B,CAAC","sourcesContent":["/**\n* @ignore\n* BEGIN HEADER\n*\n* Contains:        TableHelper utility function\n* CVM-Role:        Utility\n* Maintainer:      Hendrik Erz\n* License:         GNU GPL v3\n*\n* Description:     This parser transforms grid tables as specified\n*                  in the Pandoc manual into an AST and returns both\n*                  that and the column alignments.\n*                  Cf. https://pandoc.org/MANUAL.html#tables\n*\n* END HEADER\n*/\n\nimport type { ParsedTable, ColAlignment } from './types'\n\n/**\n * Parses a grid table\n * @param {String|Array} A markdown table, either as line array or string\n * @returns {Object} An object with properties ast and colAlignments\n */\nexport default function parseGridTable (markdownTable: string|string[]): ParsedTable {\n  // First remove whitespace from both sides of the table, e.g. in case\n  // a trailing newline is present\n  if (typeof markdownTable === 'string') {\n    markdownTable = markdownTable.trim()\n  }\n\n  if (!Array.isArray(markdownTable)) {\n    markdownTable = markdownTable.split('\\n')\n  }\n\n  if (markdownTable.length === 0 || (markdownTable.length === 1 && markdownTable[0].trim() === '')) {\n    throw new SyntaxError('Could not parse grid table: empty!')\n  }\n\n  const ast: string[][] = []\n  const colAlignments: ColAlignment[] = [] // One-dimensional column alignments\n  let numColumns = 0 // If there is an uneven number of columns, throw an error.\n\n  // The speciality of grid tables is that they can contain the alignment info\n  // either in the first row, or in the second separator row. So we have to find\n  // the alignment prior to iterating over the rows.\n  let headerRow = 0\n  for (let i = 0; i < markdownTable.length; i++) {\n    if (/^[:+= ]+$/.test(markdownTable[i])) { // \"Real\" headers have = instead of -\n      headerRow = i\n      break\n    }\n  }\n\n  let headerContent: string|string[] = markdownTable[headerRow]\n\n  headerContent = headerContent.split('+').slice(1, -1)\n  for (let i = 0; i < headerContent.length; i++) {\n    const col = headerContent[i].trim()\n    if (col.startsWith(':') && col.endsWith(':')) {\n      colAlignments[i] = 'center'\n    } else if (col.endsWith(':')) {\n      colAlignments[i] = 'right'\n    } else {\n      colAlignments[i] = 'left'\n    }\n  }\n\n  // Now iterate over all table rows\n  let hasSeenSeparatorLine = false\n  for (let i = 0; i < markdownTable.length; i++) {\n    const row = markdownTable[i]\n\n    // There should not be empty lines in the table.\n    // If so, this indicates an error in the render tables plugin!\n    if (row.trim() === '') {\n      throw new SyntaxError(`Could not parse grid table: Line ${i + 1} was empty!`)\n    }\n\n    if (row.startsWith('+') && hasSeenSeparatorLine) {\n      throw new SyntaxError('Could not parse grid table: Found multiple separator rows!')\n    }\n\n    if (row.startsWith('+')) {\n      hasSeenSeparatorLine = true\n      continue // Skip separation lines\n    }\n\n    if (!row.startsWith('|')) {\n      throw new Error(`Could not parse grid table: Row ${i + 1} did not start with + or |!`)\n    }\n\n    // Split to columns\n    const cols = row.split('|').map(elem => elem.trim()).slice(1, -1)\n\n    if (numColumns === 0) {\n      numColumns = cols.length // First row determines column count ...\n    } else if (numColumns !== cols.length) { // ... subsequent rows check against this.\n      throw new SyntaxError(`Could not parse grid table: Found ${row.length} columns on line ${i + 1} (should be ${numColumns}).`)\n    }\n\n    if (hasSeenSeparatorLine) {\n      // Add the whole row to the AST\n      ast.push(cols)\n    } else {\n      // There was no separator line in between --> multi-line table --> add the\n      // current columns to the previous ones (including newlines).\n      for (let j = 0; j < numColumns; j++) {\n        ast[ast.length - 1][j] += '\\n' + cols[j]\n      }\n    }\n\n    hasSeenSeparatorLine = false\n  }\n\n  if (ast.length === 0 || ast[0].length === 0) {\n    // This AST does not look as it's supposed to -> abort\n    throw new SyntaxError('Could not parse grid table: The parsed AST was empty.')\n  }\n\n  // Cleanup: Remove trailing newlines (that can occur if we have a row where\n  // more than zero but not all columns were multi-line)\n  for (let row = 0; row < ast.length; row++) {\n    for (let col = 0; col < ast[0].length; col++) {\n      if (ast[row][col].endsWith('\\n')) {\n        ast[row][col] = ast[row][col].slice(0, -1)\n      }\n    }\n  }\n\n  // Return the AST\n  return { ast, colAlignments }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"a0c139f0bfaf6bbd76fd92f7c7281885749d8128","contentHash":"3627aa16ae84da8c272934189ce38bc1ae50aab902bee265393367a6c8e40530"},"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/modules/markdown-editor/table-editor/parse-pipe.ts":{"path":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/modules/markdown-editor/table-editor/parse-pipe.ts","statementMap":{"0":{"start":{"line":18,"column":0},"end":{"line":18,"column":62}},"1":{"start":{"line":19,"column":0},"end":{"line":19,"column":33}},"2":{"start":{"line":28,"column":4},"end":{"line":29,"column":45}},"3":{"start":{"line":29,"column":8},"end":{"line":29,"column":45}},"4":{"start":{"line":30,"column":4},"end":{"line":31,"column":50}},"5":{"start":{"line":31,"column":8},"end":{"line":31,"column":50}},"6":{"start":{"line":32,"column":4},"end":{"line":33,"column":52}},"7":{"start":{"line":33,"column":8},"end":{"line":33,"column":52}},"8":{"start":{"line":34,"column":4},"end":{"line":35,"column":52}},"9":{"start":{"line":35,"column":8},"end":{"line":35,"column":52}},"10":{"start":{"line":36,"column":14},"end":{"line":36,"column":16}},"11":{"start":{"line":37,"column":24},"end":{"line":37,"column":26}},"12":{"start":{"line":38,"column":21},"end":{"line":38,"column":23}},"13":{"start":{"line":40,"column":4},"end":{"line":101,"column":5}},"14":{"start":{"line":40,"column":17},"end":{"line":40,"column":18}},"15":{"start":{"line":43,"column":8},"end":{"line":44,"column":65}},"16":{"start":{"line":44,"column":12},"end":{"line":44,"column":65}},"17":{"start":{"line":45,"column":18},"end":{"line":45,"column":41}},"18":{"start":{"line":46,"column":8},"end":{"line":50,"column":9}},"19":{"start":{"line":49,"column":12},"end":{"line":49,"column":42}},"20":{"start":{"line":52,"column":8},"end":{"line":52,"column":29}},"21":{"start":{"line":56,"column":8},"end":{"line":57,"column":24}},"22":{"start":{"line":57,"column":12},"end":{"line":57,"column":24}},"23":{"start":{"line":58,"column":8},"end":{"line":59,"column":22}},"24":{"start":{"line":59,"column":12},"end":{"line":59,"column":22}},"25":{"start":{"line":61,"column":8},"end":{"line":63,"column":9}},"26":{"start":{"line":62,"column":12},"end":{"line":62,"column":36}},"27":{"start":{"line":64,"column":8},"end":{"line":66,"column":9}},"28":{"start":{"line":65,"column":12},"end":{"line":65,"column":125}},"29":{"start":{"line":70,"column":23},"end":{"line":70,"column":27}},"30":{"start":{"line":71,"column":8},"end":{"line":77,"column":9}},"31":{"start":{"line":72,"column":12},"end":{"line":76,"column":13}},"32":{"start":{"line":74,"column":16},"end":{"line":74,"column":33}},"33":{"start":{"line":75,"column":16},"end":{"line":75,"column":22}},"34":{"start":{"line":79,"column":8},"end":{"line":93,"column":9}},"35":{"start":{"line":80,"column":12},"end":{"line":91,"column":13}},"36":{"start":{"line":80,"column":25},"end":{"line":80,"column":26}},"37":{"start":{"line":81,"column":26},"end":{"line":81,"column":39}},"38":{"start":{"line":82,"column":16},"end":{"line":90,"column":17}},"39":{"start":{"line":83,"column":20},"end":{"line":83,"column":48}},"40":{"start":{"line":85,"column":21},"end":{"line":90,"column":17}},"41":{"start":{"line":86,"column":20},"end":{"line":86,"column":47}},"42":{"start":{"line":89,"column":20},"end":{"line":89,"column":46}},"43":{"start":{"line":92,"column":12},"end":{"line":92,"column":21}},"44":{"start":{"line":95,"column":19},"end":{"line":95,"column":21}},"45":{"start":{"line":96,"column":8},"end":{"line":98,"column":9}},"46":{"start":{"line":96,"column":21},"end":{"line":96,"column":22}},"47":{"start":{"line":97,"column":12},"end":{"line":97,"column":37}},"48":{"start":{"line":100,"column":8},"end":{"line":100,"column":23}},"49":{"start":{"line":104,"column":4},"end":{"line":108,"column":5}},"50":{"start":{"line":105,"column":8},"end":{"line":107,"column":9}},"51":{"start":{"line":105,"column":21},"end":{"line":105,"column":22}},"52":{"start":{"line":106,"column":12},"end":{"line":106,"column":39}},"53":{"start":{"line":109,"column":4},"end":{"line":112,"column":5}},"54":{"start":{"line":111,"column":8},"end":{"line":111,"column":79}},"55":{"start":{"line":114,"column":4},"end":{"line":114,"column":34}}},"fnMap":{"0":{"name":"parsePipeTable","decl":{"start":{"line":25,"column":9},"end":{"line":25,"column":23}},"loc":{"start":{"line":25,"column":39},"end":{"line":115,"column":1}},"line":25}},"branchMap":{"0":{"loc":{"start":{"line":28,"column":4},"end":{"line":29,"column":45}},"type":"if","locations":[{"start":{"line":28,"column":4},"end":{"line":29,"column":45}},{"start":{},"end":{}}],"line":28},"1":{"loc":{"start":{"line":30,"column":4},"end":{"line":31,"column":50}},"type":"if","locations":[{"start":{"line":30,"column":4},"end":{"line":31,"column":50}},{"start":{},"end":{}}],"line":30},"2":{"loc":{"start":{"line":32,"column":4},"end":{"line":33,"column":52}},"type":"if","locations":[{"start":{"line":32,"column":4},"end":{"line":33,"column":52}},{"start":{},"end":{}}],"line":32},"3":{"loc":{"start":{"line":34,"column":4},"end":{"line":35,"column":52}},"type":"if","locations":[{"start":{"line":34,"column":4},"end":{"line":35,"column":52}},{"start":{},"end":{}}],"line":34},"4":{"loc":{"start":{"line":34,"column":8},"end":{"line":34,"column":68}},"type":"binary-expr","locations":[{"start":{"line":34,"column":8},"end":{"line":34,"column":34}},{"start":{"line":34,"column":38},"end":{"line":34,"column":68}}],"line":34},"5":{"loc":{"start":{"line":43,"column":8},"end":{"line":44,"column":65}},"type":"if","locations":[{"start":{"line":43,"column":8},"end":{"line":44,"column":65}},{"start":{},"end":{}}],"line":43},"6":{"loc":{"start":{"line":46,"column":8},"end":{"line":50,"column":9}},"type":"if","locations":[{"start":{"line":46,"column":8},"end":{"line":50,"column":9}},{"start":{},"end":{}}],"line":46},"7":{"loc":{"start":{"line":56,"column":8},"end":{"line":57,"column":24}},"type":"if","locations":[{"start":{"line":56,"column":8},"end":{"line":57,"column":24}},{"start":{},"end":{}}],"line":56},"8":{"loc":{"start":{"line":58,"column":8},"end":{"line":59,"column":22}},"type":"if","locations":[{"start":{"line":58,"column":8},"end":{"line":59,"column":22}},{"start":{},"end":{}}],"line":58},"9":{"loc":{"start":{"line":61,"column":8},"end":{"line":63,"column":9}},"type":"if","locations":[{"start":{"line":61,"column":8},"end":{"line":63,"column":9}},{"start":{},"end":{}}],"line":61},"10":{"loc":{"start":{"line":64,"column":8},"end":{"line":66,"column":9}},"type":"if","locations":[{"start":{"line":64,"column":8},"end":{"line":66,"column":9}},{"start":{},"end":{}}],"line":64},"11":{"loc":{"start":{"line":72,"column":12},"end":{"line":76,"column":13}},"type":"if","locations":[{"start":{"line":72,"column":12},"end":{"line":76,"column":13}},{"start":{},"end":{}}],"line":72},"12":{"loc":{"start":{"line":72,"column":16},"end":{"line":72,"column":58}},"type":"binary-expr","locations":[{"start":{"line":72,"column":16},"end":{"line":72,"column":37}},{"start":{"line":72,"column":41},"end":{"line":72,"column":58}}],"line":72},"13":{"loc":{"start":{"line":79,"column":8},"end":{"line":93,"column":9}},"type":"if","locations":[{"start":{"line":79,"column":8},"end":{"line":93,"column":9}},{"start":{},"end":{}}],"line":79},"14":{"loc":{"start":{"line":82,"column":16},"end":{"line":90,"column":17}},"type":"if","locations":[{"start":{"line":82,"column":16},"end":{"line":90,"column":17}},{"start":{"line":85,"column":21},"end":{"line":90,"column":17}}],"line":82},"15":{"loc":{"start":{"line":82,"column":20},"end":{"line":82,"column":65}},"type":"binary-expr","locations":[{"start":{"line":82,"column":20},"end":{"line":82,"column":34}},{"start":{"line":82,"column":38},"end":{"line":82,"column":65}}],"line":82},"16":{"loc":{"start":{"line":85,"column":21},"end":{"line":90,"column":17}},"type":"if","locations":[{"start":{"line":85,"column":21},"end":{"line":90,"column":17}},{"start":{"line":88,"column":21},"end":{"line":90,"column":17}}],"line":85},"17":{"loc":{"start":{"line":104,"column":4},"end":{"line":108,"column":5}},"type":"if","locations":[{"start":{"line":104,"column":4},"end":{"line":108,"column":5}},{"start":{},"end":{}}],"line":104},"18":{"loc":{"start":{"line":109,"column":4},"end":{"line":112,"column":5}},"type":"if","locations":[{"start":{"line":109,"column":4},"end":{"line":112,"column":5}},{"start":{},"end":{}}],"line":109},"19":{"loc":{"start":{"line":109,"column":8},"end":{"line":109,"column":47}},"type":"binary-expr","locations":[{"start":{"line":109,"column":8},"end":{"line":109,"column":24}},{"start":{"line":109,"column":28},"end":{"line":109,"column":47}}],"line":109}},"s":{"0":1,"1":1,"2":5,"3":5,"4":5,"5":5,"6":5,"7":0,"8":5,"9":0,"10":5,"11":5,"12":5,"13":5,"14":5,"15":20,"16":0,"17":20,"18":20,"19":5,"20":20,"21":20,"22":15,"23":20,"24":15,"25":20,"26":5,"27":20,"28":1,"29":19,"30":19,"31":29,"32":14,"33":14,"34":19,"35":5,"36":5,"37":15,"38":15,"39":1,"40":14,"41":3,"42":11,"43":5,"44":14,"45":14,"46":14,"47":39,"48":14,"49":4,"50":0,"51":0,"52":0,"53":4,"54":0,"55":4},"f":{"0":5},"b":{"0":[5,0],"1":[5,0],"2":[0,5],"3":[0,5],"4":[5,0],"5":[0,20],"6":[5,15],"7":[15,5],"8":[15,5],"9":[5,15],"10":[1,19],"11":[14,15],"12":[29,15],"13":[5,14],"14":[1,14],"15":[15,3],"16":[3,11],"17":[0,4],"18":[0,4],"19":[4,4]},"inputSourceMap":{"version":3,"file":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/modules/markdown-editor/table-editor/parse-pipe.ts","sources":["/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/modules/markdown-editor/table-editor/parse-pipe.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n* @ignore\n* BEGIN HEADER\n*\n* Contains:        TableHelper utility function\n* CVM-Role:        Utility\n* Maintainer:      Hendrik Erz\n* License:         GNU GPL v3\n*\n* Description:     This parser transforms pipe tables as specified\n*                  in the Pandoc manual into an AST and returns both\n*                  that and the column alignments.\n*                  Cf. https://pandoc.org/MANUAL.html#tables\n*\n* END HEADER\n*/\n\nimport type { ParsedTable, ColAlignment } from './types'\n\n/**\n * Parses a pipe table\n * @param {String|Array} A markdown table, either as line array or string\n * @returns {Object} An object with properties ast and colAlignments\n */\nexport default function parsePipeTable (markdownTable: string|string[]): ParsedTable {\n  // First remove whitespace from both sides of the table, e.g. in case\n  // a trailing newline is present\n  if (typeof markdownTable === 'string') markdownTable = markdownTable.trim()\n  if (!Array.isArray(markdownTable)) markdownTable = markdownTable.split('\\n')\n\n  if (markdownTable.length === 0) throw new Error('MarkdownTable was empty!')\n  if (markdownTable.length === 1 && markdownTable[0].trim() === '') throw new Error('MarkdownTable was empty!')\n\n  let ast = [] // Two-dimensional array\n  let colAlignments: ColAlignment[] = [] // One-dimensional column alignments\n  let numColumns = -1 // If there is an uneven number of columns, throw an error.\n\n  // Now iterate over all table rows\n  for (let i = 0; i < markdownTable.length; i++) {\n    // There should not be empty lines in the table.\n    // If so, this indicates an error in the render tables plugin!\n    if (markdownTable[i].trim() === '') throw new Error(`Line ${i} in the table was empty!`)\n    let row: string[]|string = markdownTable[i].trim() // Clean up whitespace\n    if (/^[- :+|]+$/.test(row)) {\n      // We have an alternative pipetable, separated with + instead of |,\n      // so we have to replace all instances of + with |\n      row = row.replace(/\\+/g, '|')\n    }\n\n    // Split to columns\n    row = row.split('|')\n\n    // Now, expect that the first and last \"column\" are empty and remove them.\n    // If they are not empty, we probably have a pipe table without surrounding\n    // pipes.\n    if (row[0].trim() === '') row.shift()\n    if (row[row.length - 1].trim() === '') row.pop()\n\n    // First row determines the amount of columns expected\n    if (numColumns === -1) {\n      numColumns = row.length // First row determines column count ...\n    }\n\n    if (numColumns !== row.length) { // ... subsequent rows check that length.\n      throw new Error(`Malformed Markdown Table! Found ${row.length} columns on line ${i} (should be ${numColumns}).`)\n    }\n\n    // First test if we've got a header row. A header row is defined of\n    // consisting of columns only containing dashes, colons and spaces. The\n    // first column to break this rule means we don't have a valid header.\n    let isHeader = true\n    for (let col of row) {\n      if (!/^[-: ]+$/.test(col) || col.trim() === '') {\n        // Note we have to check for completely blank lines\n        isHeader = false\n        break\n      }\n    }\n\n    // Parse the header\n    if (isHeader) {\n      for (let j = 0; j < row.length; j++) {\n        let col = row[j].trim()\n        if (col[0] === ':' && col[col.length - 1] === ':') {\n          colAlignments[j] = 'center'\n        } else if (col[col.length - 1] === ':') {\n          colAlignments[j] = 'right'\n        } else {\n          colAlignments[j] = 'left'\n        }\n      }\n      continue // We're done here -- don't add it to the AST\n    }\n\n    // We have a normal table row, so parse all columns\n    let cols = []\n    for (let j = 0; j < row.length; j++) {\n      cols.push(row[j].trim()) // Trim whitespaces\n    }\n\n    // Add the whole row to the AST\n    ast.push(cols)\n  }\n\n  // If we have reached this stage, but no header row was found,\n  // preset all column alignments with left\n  if (colAlignments.length === 0) {\n    for (let i = 0; i < numColumns; i++) {\n      colAlignments.push('left')\n    }\n  }\n\n  if (ast.length === 0 || ast[0].length === 0) {\n    // This AST does not look as it's supposed to -> abort\n    throw new Error('Malformed Markdown Table! The parsed AST was empty.')\n  }\n\n  // Return the AST\n  return { ast, colAlignments }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"439da5e2a3259383ebbf76b64438598adcb29c43","contentHash":"992e35f24368b05425abb7a5b6c98055a45e99b18be914c1055798f05464485d"},"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/modules/markdown-editor/table-editor/parse-simple.ts":{"path":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/modules/markdown-editor/table-editor/parse-simple.ts","statementMap":{"0":{"start":{"line":18,"column":0},"end":{"line":18,"column":62}},"1":{"start":{"line":19,"column":0},"end":{"line":19,"column":35}},"2":{"start":{"line":29,"column":4},"end":{"line":31,"column":5}},"3":{"start":{"line":30,"column":8},"end":{"line":30,"column":50}},"4":{"start":{"line":32,"column":4},"end":{"line":34,"column":5}},"5":{"start":{"line":33,"column":8},"end":{"line":33,"column":52}},"6":{"start":{"line":35,"column":16},"end":{"line":35,"column":18}},"7":{"start":{"line":36,"column":26},"end":{"line":36,"column":28}},"8":{"start":{"line":37,"column":21},"end":{"line":37,"column":23}},"9":{"start":{"line":38,"column":23},"end":{"line":38,"column":25}},"10":{"start":{"line":44,"column":29},"end":{"line":44,"column":45}},"11":{"start":{"line":45,"column":31},"end":{"line":45,"column":47}},"12":{"start":{"line":46,"column":4},"end":{"line":55,"column":5}},"13":{"start":{"line":48,"column":8},"end":{"line":48,"column":48}},"14":{"start":{"line":49,"column":8},"end":{"line":49,"column":46}},"15":{"start":{"line":52,"column":8},"end":{"line":54,"column":9}},"16":{"start":{"line":53,"column":12},"end":{"line":53,"column":109}},"17":{"start":{"line":57,"column":4},"end":{"line":59,"column":5}},"18":{"start":{"line":58,"column":8},"end":{"line":58,"column":48}},"19":{"start":{"line":61,"column":4},"end":{"line":69,"column":5}},"20":{"start":{"line":63,"column":8},"end":{"line":68,"column":9}},"21":{"start":{"line":64,"column":12},"end":{"line":64,"column":43}},"22":{"start":{"line":66,"column":13},"end":{"line":68,"column":9}},"23":{"start":{"line":67,"column":12},"end":{"line":67,"column":45}},"24":{"start":{"line":72,"column":16},"end":{"line":72,"column":17}},"25":{"start":{"line":73,"column":4},"end":{"line":76,"column":5}},"26":{"start":{"line":73,"column":17},"end":{"line":73,"column":18}},"27":{"start":{"line":74,"column":8},"end":{"line":74,"column":85}},"28":{"start":{"line":75,"column":8},"end":{"line":75,"column":45}},"29":{"start":{"line":78,"column":4},"end":{"line":89,"column":5}},"30":{"start":{"line":78,"column":17},"end":{"line":78,"column":18}},"31":{"start":{"line":79,"column":16},"end":{"line":79,"column":32}},"32":{"start":{"line":80,"column":8},"end":{"line":88,"column":9}},"33":{"start":{"line":81,"column":12},"end":{"line":81,"column":40}},"34":{"start":{"line":83,"column":13},"end":{"line":88,"column":9}},"35":{"start":{"line":84,"column":12},"end":{"line":84,"column":39}},"36":{"start":{"line":87,"column":12},"end":{"line":87,"column":38}},"37":{"start":{"line":92,"column":4},"end":{"line":103,"column":5}},"38":{"start":{"line":93,"column":8},"end":{"line":95,"column":9}},"39":{"start":{"line":94,"column":12},"end":{"line":94,"column":21}},"40":{"start":{"line":96,"column":24},"end":{"line":96,"column":26}},"41":{"start":{"line":97,"column":20},"end":{"line":97,"column":21}},"42":{"start":{"line":98,"column":8},"end":{"line":101,"column":9}},"43":{"start":{"line":98,"column":21},"end":{"line":98,"column":22}},"44":{"start":{"line":99,"column":12},"end":{"line":99,"column":76}},"45":{"start":{"line":100,"column":12},"end":{"line":100,"column":49}},"46":{"start":{"line":102,"column":8},"end":{"line":102,"column":26}},"47":{"start":{"line":104,"column":4},"end":{"line":107,"column":5}},"48":{"start":{"line":106,"column":8},"end":{"line":106,"column":79}},"49":{"start":{"line":109,"column":4},"end":{"line":109,"column":34}}},"fnMap":{"0":{"name":"parseSimpleTable","decl":{"start":{"line":25,"column":9},"end":{"line":25,"column":25}},"loc":{"start":{"line":25,"column":41},"end":{"line":110,"column":1}},"line":25}},"branchMap":{"0":{"loc":{"start":{"line":29,"column":4},"end":{"line":31,"column":5}},"type":"if","locations":[{"start":{"line":29,"column":4},"end":{"line":31,"column":5}},{"start":{},"end":{}}],"line":29},"1":{"loc":{"start":{"line":32,"column":4},"end":{"line":34,"column":5}},"type":"if","locations":[{"start":{"line":32,"column":4},"end":{"line":34,"column":5}},{"start":{},"end":{}}],"line":32},"2":{"loc":{"start":{"line":32,"column":8},"end":{"line":32,"column":100}},"type":"binary-expr","locations":[{"start":{"line":32,"column":8},"end":{"line":32,"column":34}},{"start":{"line":32,"column":39},"end":{"line":32,"column":65}},{"start":{"line":32,"column":69},"end":{"line":32,"column":99}}],"line":32},"3":{"loc":{"start":{"line":46,"column":4},"end":{"line":55,"column":5}},"type":"if","locations":[{"start":{"line":46,"column":4},"end":{"line":55,"column":5}},{"start":{},"end":{}}],"line":46},"4":{"loc":{"start":{"line":52,"column":8},"end":{"line":54,"column":9}},"type":"if","locations":[{"start":{"line":52,"column":8},"end":{"line":54,"column":9}},{"start":{},"end":{}}],"line":52},"5":{"loc":{"start":{"line":57,"column":4},"end":{"line":59,"column":5}},"type":"if","locations":[{"start":{"line":57,"column":4},"end":{"line":59,"column":5}},{"start":{},"end":{}}],"line":57},"6":{"loc":{"start":{"line":57,"column":8},"end":{"line":57,"column":82}},"type":"binary-expr","locations":[{"start":{"line":57,"column":8},"end":{"line":57,"column":44}},{"start":{"line":57,"column":48},"end":{"line":57,"column":82}}],"line":57},"7":{"loc":{"start":{"line":63,"column":8},"end":{"line":68,"column":9}},"type":"if","locations":[{"start":{"line":63,"column":8},"end":{"line":68,"column":9}},{"start":{"line":66,"column":13},"end":{"line":68,"column":9}}],"line":63},"8":{"loc":{"start":{"line":66,"column":13},"end":{"line":68,"column":9}},"type":"if","locations":[{"start":{"line":66,"column":13},"end":{"line":68,"column":9}},{"start":{},"end":{}}],"line":66},"9":{"loc":{"start":{"line":80,"column":8},"end":{"line":88,"column":9}},"type":"if","locations":[{"start":{"line":80,"column":8},"end":{"line":88,"column":9}},{"start":{"line":83,"column":13},"end":{"line":88,"column":9}}],"line":80},"10":{"loc":{"start":{"line":80,"column":12},"end":{"line":80,"column":48}},"type":"binary-expr","locations":[{"start":{"line":80,"column":12},"end":{"line":80,"column":29}},{"start":{"line":80,"column":33},"end":{"line":80,"column":48}}],"line":80},"11":{"loc":{"start":{"line":83,"column":13},"end":{"line":88,"column":9}},"type":"if","locations":[{"start":{"line":83,"column":13},"end":{"line":88,"column":9}},{"start":{"line":86,"column":13},"end":{"line":88,"column":9}}],"line":83},"12":{"loc":{"start":{"line":93,"column":8},"end":{"line":95,"column":9}},"type":"if","locations":[{"start":{"line":93,"column":8},"end":{"line":95,"column":9}},{"start":{},"end":{}}],"line":93},"13":{"loc":{"start":{"line":104,"column":4},"end":{"line":107,"column":5}},"type":"if","locations":[{"start":{"line":104,"column":4},"end":{"line":107,"column":5}},{"start":{},"end":{}}],"line":104},"14":{"loc":{"start":{"line":104,"column":8},"end":{"line":104,"column":47}},"type":"binary-expr","locations":[{"start":{"line":104,"column":8},"end":{"line":104,"column":24}},{"start":{"line":104,"column":28},"end":{"line":104,"column":47}}],"line":104}},"s":{"0":1,"1":1,"2":3,"3":3,"4":3,"5":0,"6":3,"7":3,"8":3,"9":3,"10":3,"11":3,"12":3,"13":1,"14":1,"15":1,"16":0,"17":3,"18":0,"19":3,"20":25,"21":14,"22":11,"23":11,"24":3,"25":3,"26":3,"27":14,"28":14,"29":3,"30":3,"31":14,"32":14,"33":2,"34":12,"35":3,"36":9,"37":3,"38":21,"39":4,"40":17,"41":17,"42":17,"43":17,"44":88,"45":88,"46":17,"47":3,"48":0,"49":3},"f":{"0":3},"b":{"0":[3,0],"1":[0,3],"2":[3,3,0],"3":[1,2],"4":[0,1],"5":[0,3],"6":[3,3],"7":[14,11],"8":[11,0],"9":[2,12],"10":[14,5],"11":[3,9],"12":[4,17],"13":[0,3],"14":[3,3]},"inputSourceMap":{"version":3,"file":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/modules/markdown-editor/table-editor/parse-simple.ts","sources":["/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/modules/markdown-editor/table-editor/parse-simple.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n* @ignore\n* BEGIN HEADER\n*\n* Contains:        TableHelper utility function\n* CVM-Role:        Utility\n* Maintainer:      Hendrik Erz\n* License:         GNU GPL v3\n*\n* Description:     This parser transforms simple tables as specified\n*                  in the Pandoc manual into an AST and returns both\n*                  that and the column alignments.\n*                  Cf. https://pandoc.org/MANUAL.html#tables\n*\n* END HEADER\n*/\n\nimport type { ParsedTable, ColAlignment } from './types'\n\n/**\n * Parses a \"simple\" table (\"simple\", because it's not that simple)\n * @param {String|Array} A markdown table, either as line array or string\n * @returns {Object} An object with properties ast and colAlignments\n */\nexport default function parseSimpleTable (markdownTable: string|string[]): ParsedTable {\n  // Let's begin. First we need a line array. Make sure to strip potential\n  // newlines from beginning and end, if applicable. Also perform some\n  // initial sanity checks on the table.\n  if (!Array.isArray(markdownTable)) {\n    markdownTable = markdownTable.split('\\n')\n  }\n\n  if (markdownTable.length === 0 || (markdownTable.length === 1 && markdownTable[0].trim() === '')) {\n    throw new Error('MarkdownTable was empty!')\n  }\n\n  const ast: string[][] = []\n  const colAlignments: ColAlignment[] = []\n  const colSizes: number[] = [] // Yes, here we need the lengths of the columns\n  const colPadding: number[] = [] // Also yes: We need to know the padding between cols.\n\n  // First, we need to determine the headers and the column alignments. As the\n  // columns can be separated by an arbitrary amount of spaces, we need to\n  // gauge the length AND the indentation by looking either at the first line\n  // OR at the second line, depending on which one consists solely of dashes\n  // and spaces.\n  let determineAlignWith = markdownTable[0]\n  let determineLengthsWith = markdownTable[1]\n  if (/^[- ]+$/.test(markdownTable[0])) {\n    // We got a headless table, so we need to swap the lines.\n    determineLengthsWith = markdownTable[0]\n    determineAlignWith = markdownTable[1]\n\n    // Bonus round: According to the manual (TM) a headless table needs to have\n    // a solely dashed line at the bottom.\n    if (!/^[- ]+$/.test(markdownTable[markdownTable.length - 1])) {\n      throw new Error('Malformed Markdown Table: Did not find a finishing dashed line for the table.')\n    }\n  }\n\n  // Additional sanity check: The table is not allowed to be padded.\n  if (determineLengthsWith.startsWith(' ') || determineLengthsWith.endsWith(' ')) {\n    throw new Error('The table is padded.')\n  }\n\n  // Now we first need the indent and column sizes\n  for (const match of determineLengthsWith.matchAll(/-+| +/g)) {\n    // This RegExp is able to extract single-character-substrings\n    if (match[0].startsWith('-')) {\n      colSizes.push(match[0].length)\n    } else if (match[0].startsWith(' ')) {\n      colPadding.push(match[0].length)\n    }\n  }\n\n  // Now, determine the alignments. Do so by first splitting the respective\n  // line according to the lengths and see where the whitespace is.\n  let index = 0\n  for (let i = 0; i < colSizes.length; i++) {\n    colAlignments.push(determineAlignWith.substring(index, index + colSizes[i]) as any)\n    index += colSizes[i] + colPadding[i]\n  }\n\n  // Transform the colAlignments containing real text into alignments\n  for (let i = 0; i < colAlignments.length; i++) {\n    let a = colAlignments[i]\n    if (a.startsWith(' ') && a.endsWith(' ')) {\n      colAlignments[i] = 'center'\n    } else if (a.startsWith(' ')) {\n      colAlignments[i] = 'right'\n    } else {\n      colAlignments[i] = 'left'\n    }\n  }\n\n  // Now we should have column sizes and indentation sizes.\n  // Next: Parse the full table according to these rules.\n  for (const line of markdownTable) {\n    if (/^[- ]+$/.test(line)) {\n      continue // Heading row\n    }\n\n    const columns: string[] = []\n    let index = 0\n    for (let i = 0; i < colSizes.length; i++) {\n      columns.push(line.substring(index, index + colSizes[i]).trim())\n      index += colSizes[i] + colPadding[i]\n    }\n    ast.push(columns)\n  }\n\n  if (ast.length === 0 || ast[0].length === 0) {\n    // This AST does not look as it's supposed to -> abort\n    throw new Error('Malformed Markdown Table! The parsed AST was empty.')\n  }\n\n  // Return the AST\n  return { ast, colAlignments }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"855983b11c6bf026cd0c8e8e7b4da463e9932171","contentHash":"12fb4a6a291fffeb700826a8d67519c0ddd80f6257746c614ba311cc013bb77f"},"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/modules/persistent-data-container/index.ts":{"path":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/modules/persistent-data-container/index.ts","statementMap":{"0":{"start":{"line":17,"column":0},"end":{"line":17,"column":62}},"1":{"start":{"line":18,"column":13},"end":{"line":18,"column":26}},"2":{"start":{"line":19,"column":15},"end":{"line":19,"column":30}},"3":{"start":{"line":31,"column":8},"end":{"line":31,"column":34}},"4":{"start":{"line":32,"column":8},"end":{"line":32,"column":30}},"5":{"start":{"line":33,"column":8},"end":{"line":33,"column":28}},"6":{"start":{"line":41,"column":8},"end":{"line":43,"column":9}},"7":{"start":{"line":42,"column":12},"end":{"line":42,"column":86}},"8":{"start":{"line":44,"column":8},"end":{"line":44,"column":33}},"9":{"start":{"line":45,"column":8},"end":{"line":45,"column":95}},"10":{"start":{"line":54,"column":8},"end":{"line":61,"column":9}},"11":{"start":{"line":55,"column":12},"end":{"line":55,"column":98}},"12":{"start":{"line":56,"column":29},"end":{"line":56,"column":82}},"13":{"start":{"line":57,"column":12},"end":{"line":57,"column":42}},"14":{"start":{"line":60,"column":12},"end":{"line":60,"column":25}},"15":{"start":{"line":72,"column":8},"end":{"line":74,"column":9}},"16":{"start":{"line":73,"column":12},"end":{"line":73,"column":77}},"17":{"start":{"line":77,"column":8},"end":{"line":77,"column":57}},"18":{"start":{"line":78,"column":8},"end":{"line":80,"column":9}},"19":{"start":{"line":79,"column":12},"end":{"line":79,"column":40}},"20":{"start":{"line":81,"column":8},"end":{"line":81,"column":79}},"21":{"start":{"line":81,"column":43},"end":{"line":81,"column":62}},"22":{"start":{"line":89,"column":8},"end":{"line":93,"column":9}},"23":{"start":{"line":92,"column":12},"end":{"line":92,"column":30}},"24":{"start":{"line":94,"column":8},"end":{"line":105,"column":9}},"25":{"start":{"line":95,"column":28},"end":{"line":95,"column":95}},"26":{"start":{"line":96,"column":12},"end":{"line":101,"column":13}},"27":{"start":{"line":97,"column":16},"end":{"line":97,"column":49}},"28":{"start":{"line":100,"column":16},"end":{"line":100,"column":56}},"29":{"start":{"line":104,"column":12},"end":{"line":104,"column":166}},"30":{"start":{"line":106,"column":8},"end":{"line":106,"column":26}},"31":{"start":{"line":114,"column":8},"end":{"line":114,"column":28}},"32":{"start":{"line":120,"column":8},"end":{"line":122,"column":9}},"33":{"start":{"line":121,"column":12},"end":{"line":121,"column":19}},"34":{"start":{"line":123,"column":8},"end":{"line":126,"column":9}},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":40}},"36":{"start":{"line":125,"column":12},"end":{"line":125,"column":38}},"37":{"start":{"line":128,"column":8},"end":{"line":129,"column":51}},"38":{"start":{"line":129,"column":28},"end":{"line":129,"column":47}},"39":{"start":{"line":137,"column":8},"end":{"line":143,"column":9}},"40":{"start":{"line":139,"column":12},"end":{"line":139,"column":63}},"41":{"start":{"line":142,"column":12},"end":{"line":142,"column":53}},"42":{"start":{"line":151,"column":8},"end":{"line":153,"column":9}},"43":{"start":{"line":152,"column":12},"end":{"line":152,"column":31}},"44":{"start":{"line":156,"column":0},"end":{"line":156,"column":42}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":30,"column":4},"end":{"line":30,"column":5}},"loc":{"start":{"line":30,"column":55},"end":{"line":34,"column":5}},"line":30},"1":{"name":"(anonymous_1)","decl":{"start":{"line":40,"column":4},"end":{"line":40,"column":5}},"loc":{"start":{"line":40,"column":28},"end":{"line":46,"column":5}},"line":40},"2":{"name":"(anonymous_2)","decl":{"start":{"line":53,"column":4},"end":{"line":53,"column":5}},"loc":{"start":{"line":53,"column":26},"end":{"line":62,"column":5}},"line":53},"3":{"name":"(anonymous_3)","decl":{"start":{"line":71,"column":4},"end":{"line":71,"column":5}},"loc":{"start":{"line":71,"column":17},"end":{"line":82,"column":5}},"line":71},"4":{"name":"(anonymous_4)","decl":{"start":{"line":81,"column":35},"end":{"line":81,"column":36}},"loc":{"start":{"line":81,"column":41},"end":{"line":81,"column":64}},"line":81},"5":{"name":"(anonymous_5)","decl":{"start":{"line":88,"column":4},"end":{"line":88,"column":5}},"loc":{"start":{"line":88,"column":16},"end":{"line":107,"column":5}},"line":88},"6":{"name":"(anonymous_6)","decl":{"start":{"line":113,"column":4},"end":{"line":113,"column":5}},"loc":{"start":{"line":113,"column":20},"end":{"line":115,"column":5}},"line":113},"7":{"name":"(anonymous_7)","decl":{"start":{"line":119,"column":4},"end":{"line":119,"column":5}},"loc":{"start":{"line":119,"column":18},"end":{"line":130,"column":5}},"line":119},"8":{"name":"(anonymous_8)","decl":{"start":{"line":129,"column":19},"end":{"line":129,"column":20}},"loc":{"start":{"line":129,"column":26},"end":{"line":129,"column":49}},"line":129},"9":{"name":"(anonymous_9)","decl":{"start":{"line":136,"column":4},"end":{"line":136,"column":5}},"loc":{"start":{"line":136,"column":16},"end":{"line":144,"column":5}},"line":136},"10":{"name":"(anonymous_10)","decl":{"start":{"line":150,"column":4},"end":{"line":150,"column":5}},"loc":{"start":{"line":150,"column":15},"end":{"line":154,"column":5}},"line":150}},"branchMap":{"0":{"loc":{"start":{"line":30,"column":26},"end":{"line":30,"column":39}},"type":"default-arg","locations":[{"start":{"line":30,"column":33},"end":{"line":30,"column":39}}],"line":30},"1":{"loc":{"start":{"line":30,"column":41},"end":{"line":30,"column":53}},"type":"default-arg","locations":[{"start":{"line":30,"column":49},"end":{"line":30,"column":53}}],"line":30},"2":{"loc":{"start":{"line":41,"column":8},"end":{"line":43,"column":9}},"type":"if","locations":[{"start":{"line":41,"column":8},"end":{"line":43,"column":9}},{"start":{},"end":{}}],"line":41},"3":{"loc":{"start":{"line":41,"column":12},"end":{"line":41,"column":61}},"type":"binary-expr","locations":[{"start":{"line":41,"column":12},"end":{"line":41,"column":37}},{"start":{"line":41,"column":41},"end":{"line":41,"column":61}}],"line":41},"4":{"loc":{"start":{"line":72,"column":8},"end":{"line":74,"column":9}},"type":"if","locations":[{"start":{"line":72,"column":8},"end":{"line":74,"column":9}},{"start":{},"end":{}}],"line":72},"5":{"loc":{"start":{"line":72,"column":12},"end":{"line":72,"column":53}},"type":"binary-expr","locations":[{"start":{"line":72,"column":12},"end":{"line":72,"column":33}},{"start":{"line":72,"column":37},"end":{"line":72,"column":53}}],"line":72},"6":{"loc":{"start":{"line":78,"column":8},"end":{"line":80,"column":9}},"type":"if","locations":[{"start":{"line":78,"column":8},"end":{"line":80,"column":9}},{"start":{},"end":{}}],"line":78},"7":{"loc":{"start":{"line":89,"column":8},"end":{"line":93,"column":9}},"type":"if","locations":[{"start":{"line":89,"column":8},"end":{"line":93,"column":9}},{"start":{},"end":{}}],"line":89},"8":{"loc":{"start":{"line":96,"column":12},"end":{"line":101,"column":13}},"type":"if","locations":[{"start":{"line":96,"column":12},"end":{"line":101,"column":13}},{"start":{"line":99,"column":17},"end":{"line":101,"column":13}}],"line":96},"9":{"loc":{"start":{"line":120,"column":8},"end":{"line":122,"column":9}},"type":"if","locations":[{"start":{"line":120,"column":8},"end":{"line":122,"column":9}},{"start":{},"end":{}}],"line":120},"10":{"loc":{"start":{"line":123,"column":8},"end":{"line":126,"column":9}},"type":"if","locations":[{"start":{"line":123,"column":8},"end":{"line":126,"column":9}},{"start":{},"end":{}}],"line":123},"11":{"loc":{"start":{"line":137,"column":8},"end":{"line":143,"column":9}},"type":"if","locations":[{"start":{"line":137,"column":8},"end":{"line":143,"column":9}},{"start":{"line":141,"column":13},"end":{"line":143,"column":9}}],"line":137},"12":{"loc":{"start":{"line":151,"column":8},"end":{"line":153,"column":9}},"type":"if","locations":[{"start":{"line":151,"column":8},"end":{"line":153,"column":9}},{"start":{},"end":{}}],"line":151}},"s":{"0":1,"1":1,"2":1,"3":7,"4":7,"5":7,"6":8,"7":2,"8":6,"9":6,"10":0,"11":0,"12":0,"13":0,"14":0,"15":4,"16":2,"17":2,"18":1,"19":0,"20":1,"21":1,"22":6,"23":0,"24":6,"25":6,"26":5,"27":4,"28":1,"29":1,"30":5,"31":0,"32":1,"33":0,"34":1,"35":1,"36":1,"37":1,"38":0,"39":7,"40":6,"41":1,"42":5,"43":0,"44":1},"f":{"0":7,"1":8,"2":0,"3":4,"4":1,"5":6,"6":0,"7":1,"8":0,"9":7,"10":5},"b":{"0":[0],"1":[0],"2":[2,6],"3":[8,7],"4":[2,2],"5":[4,3],"6":[0,1],"7":[0,6],"8":[4,1],"9":[0,1],"10":[1,0],"11":[6,1],"12":[0,5]},"inputSourceMap":{"version":3,"file":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/modules/persistent-data-container/index.ts","sources":["/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/modules/persistent-data-container/index.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @ignore\n * BEGIN HEADER\n *\n * Contains:        PersistentDataContainer\n * CVM-Role:        Model\n * Maintainer:      Hendrik Erz\n * License:         GNU GPL v3\n *\n * Description:     The persistent data container is a simple class that allows\n *                  one to continuously persist some data to disk. The container\n *                  will make sure to balance disk load and persistence.\n *\n * END HEADER\n */\n\nimport { promises as fs, constants as FSConstants } from 'fs'\nimport { parse as parseYAML, stringify as stringifyYAML } from 'yaml'\n\nexport default class PersistentDataContainer<T = any> {\n  /**\n   * The absolute path to the data file. Must include the file extension (e.g.,\n   * yaml or json).\n   *\n   * @var {string}\n   */\n  private readonly _filePath: string\n  /**\n   * The datatype with which the container should store the data on disk, can be\n   * either yaml or json.\n   *\n   * @var {'yaml'|'json'}\n   */\n  private readonly _dataType: 'yaml'|'json'\n  /**\n   * The data of the container. Initially set to undefined, after initializing/\n   * getting of the data, contains the most recent data. Will be overwritten by\n   * calling set()\n   *\n   * @var {T}\n   */\n  private _data: T\n\n  /**\n   * Holds the most recent timeout for writing the data to disk if applicable\n   *\n   * @var {NodeJS.Timeout|undefined}\n   */\n  private _timeout: NodeJS.Timeout|undefined\n\n  /**\n   * The delay (in milliseconds) of wait before actually writing the data to\n   * disk.\n   *\n   * @var {number}\n   */\n  private _delay: number\n\n  /**\n   * Creates a new persistent data container.\n   *\n   * @param   {string}         filePath  The absolute path to the data file\n   * @param   {'yaml'|'json'}  type      The file format to use, defaults to JSON\n   * @param   {number}         delay     The time to wait before writing, defaults to 1000ms\n   *\n   * @return  {PersistentDataContainer}  The file container\n   */\n  constructor (filePath: string, type: 'yaml'|'json' = 'json', delay: number = 1000) {\n    this._filePath = filePath\n    this._dataType = type\n    this._delay = delay\n  }\n\n  /**\n   * Initializes the container with some data. Must be called before get()\n   *\n   * @param   {T}      initialData  The initial data to write into the file\n   */\n  public async init (initialData: T): Promise<void> {\n    if (initialData === undefined || initialData === null) {\n      throw new Error('Cannot initialize data storage with null or undefined!')\n    }\n\n    this._data = initialData\n    await fs.writeFile(this._filePath, this.stringify(), { encoding: 'utf-8' })\n  }\n\n  /**\n   * Checks if the data store has already been initialized. If this function\n   * returns false, you need to call init() prior.\n   *\n   * @return  {Promise<boolean>}  Returns whether the store has been initialized\n   */\n  public async isInitialized (): Promise<boolean> {\n    try {\n      await fs.access(this._filePath, FSConstants.R_OK | FSConstants.W_OK)\n      const contents = await fs.readFile(this._filePath, 'utf-8')\n      return contents.trim() !== ''\n    } catch (err: any) {\n      return false\n    }\n  }\n\n  /**\n   * Overwrites the stored data and sets a timeout for writing the data to disk.\n   * Writes to disk if no changes occurred after the set amount of delay. NOTE\n   * that passing non-serializable objects such as functions will lead to data\n   * loss or can throw errors.\n   *\n   * @param   {T}   newData  The new data\n   */\n  public set (newData: T): void {\n    if (newData === undefined || newData === null) {\n      throw new Error('Cannot set the data to \"undefined\" or \"null\"!')\n    }\n\n    // Clone the data so it becomes detached from the caller. This also ensures\n    // that this function already throws an error if the data cannot be serialized.\n    this._data = JSON.parse(JSON.stringify(newData))\n\n    if (this._timeout !== undefined) {\n      clearTimeout(this._timeout)\n    }\n\n    this._timeout = setTimeout(() => { this.flushToDisk() }, this._delay)\n  }\n\n  /**\n   * Reads the data file and returns the data\n   *\n   * @return  {Promise<Partial<T>>}  Resolves with the data contained in the file. NOTE that the returned type is a partial T to indicate that the container does not perform a sanity check on the data\n   */\n  public async get (): Promise<Partial<T>> {\n    if (this._timeout !== undefined) {\n      // _data contains the most recent iteration, NOT the datafile. So return\n      // that one instead.\n      return this._data\n    }\n\n    try {\n      const content = await fs.readFile(this._filePath, { encoding: 'utf-8' })\n\n      if (this._dataType === 'json') {\n        this._data = JSON.parse(content)\n      } else {\n        this._data = parseYAML(content)\n      }\n    } catch (err: any) {\n      throw new Error('Could not retrieve container contents: Either the contents were malformed, or you forgot to init the container. ' + String(err.message))\n    }\n\n    return this._data\n  }\n\n  /**\n   * Changes the delay of waiting time before writing (in milliseconds)\n   *\n   * @param   {number}  delay  The new delay in ms\n   */\n  public setDelay (delay: number): void {\n    this._delay = delay\n  }\n\n  /**\n   * Flushes the content to disk if it has been modified in the meantime\n   */\n  private flushToDisk (): void {\n    if (this._data === undefined) {\n      return // No need to flush the data\n    }\n\n    if (this._timeout !== undefined) {\n      clearTimeout(this._timeout)\n      this._timeout = undefined\n    }\n\n    // TODO: Proper logging\n    fs.writeFile(this._filePath, this.stringify(), { encoding: 'utf-8' })\n      .catch(err => { console.error(err) })\n  }\n\n  /**\n   * Stringifies the data to be written to disk according to the data type\n   *\n   * @return  {string}  The contained data as a serialized string\n   */\n  private stringify (): string {\n    if (this._dataType === 'json') {\n      // By passing a space as the third character, we make the JSON readable\n      return JSON.stringify(this._data, undefined, '  ')\n    } else {\n      return stringifyYAML(this._data)\n    }\n  }\n\n  /**\n   * This shuts down the container. Can be used to speed up the shutdown of the\n   * node process since this will clear the timeout and immediately write the\n   * data to disk.\n   */\n  public shutdown (): void {\n    if (this._timeout !== undefined) {\n      this.flushToDisk() // One last flush to disk to prevent data loss\n    }\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"ae966cad425b37a9415c9dd20a00a937469ff860","contentHash":"7c2c4bc33ab6f7aaaaa31762f9ae5d4b324ee40b274ca0e15edcc6de901dd0fa"},"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/util/replace-links.ts":{"path":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/util/replace-links.ts","statementMap":{"0":{"start":{"line":15,"column":22},"end":{"line":17,"column":1}},"1":{"start":{"line":16,"column":4},"end":{"line":16,"column":62}},"2":{"start":{"line":18,"column":0},"end":{"line":18,"column":62}},"3":{"start":{"line":19,"column":0},"end":{"line":19,"column":31}},"4":{"start":{"line":20,"column":35},"end":{"line":20,"column":89}},"5":{"start":{"line":21,"column":15},"end":{"line":21,"column":47}},"6":{"start":{"line":37,"column":32},"end":{"line":37,"column":103}},"7":{"start":{"line":38,"column":32},"end":{"line":38,"column":103}},"8":{"start":{"line":39,"column":4},"end":{"line":41,"column":5}},"9":{"start":{"line":40,"column":8},"end":{"line":40,"column":24}},"10":{"start":{"line":43,"column":19},"end":{"line":43,"column":35}},"11":{"start":{"line":46,"column":37},"end":{"line":46,"column":86}},"12":{"start":{"line":47,"column":4},"end":{"line":49,"column":5}},"13":{"start":{"line":48,"column":8},"end":{"line":48,"column":53}},"14":{"start":{"line":51,"column":4},"end":{"line":61,"column":7}},"15":{"start":{"line":52,"column":8},"end":{"line":60,"column":9}},"16":{"start":{"line":53,"column":12},"end":{"line":53,"column":39}},"17":{"start":{"line":55,"column":13},"end":{"line":60,"column":9}},"18":{"start":{"line":56,"column":12},"end":{"line":56,"column":48}},"19":{"start":{"line":59,"column":12},"end":{"line":59,"column":36}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":15,"column":56},"end":{"line":15,"column":57}},"loc":{"start":{"line":15,"column":71},"end":{"line":17,"column":1}},"line":15},"1":{"name":"replaceLinks","decl":{"start":{"line":33,"column":9},"end":{"line":33,"column":21}},"loc":{"start":{"line":33,"column":56},"end":{"line":62,"column":1}},"line":33},"2":{"name":"(anonymous_2)","decl":{"start":{"line":51,"column":36},"end":{"line":51,"column":37}},"loc":{"start":{"line":51,"column":52},"end":{"line":61,"column":5}},"line":51}},"branchMap":{"0":{"loc":{"start":{"line":15,"column":22},"end":{"line":17,"column":1}},"type":"binary-expr","locations":[{"start":{"line":15,"column":23},"end":{"line":15,"column":27}},{"start":{"line":15,"column":31},"end":{"line":15,"column":51}},{"start":{"line":15,"column":56},"end":{"line":17,"column":1}}],"line":15},"1":{"loc":{"start":{"line":16,"column":11},"end":{"line":16,"column":61}},"type":"cond-expr","locations":[{"start":{"line":16,"column":37},"end":{"line":16,"column":40}},{"start":{"line":16,"column":43},"end":{"line":16,"column":61}}],"line":16},"2":{"loc":{"start":{"line":16,"column":12},"end":{"line":16,"column":33}},"type":"binary-expr","locations":[{"start":{"line":16,"column":12},"end":{"line":16,"column":15}},{"start":{"line":16,"column":19},"end":{"line":16,"column":33}}],"line":16},"3":{"loc":{"start":{"line":39,"column":4},"end":{"line":41,"column":5}},"type":"if","locations":[{"start":{"line":39,"column":4},"end":{"line":41,"column":5}},{"start":{},"end":{}}],"line":39},"4":{"loc":{"start":{"line":39,"column":8},"end":{"line":39,"column":81}},"type":"binary-expr","locations":[{"start":{"line":39,"column":8},"end":{"line":39,"column":38}},{"start":{"line":39,"column":42},"end":{"line":39,"column":81}}],"line":39},"5":{"loc":{"start":{"line":47,"column":4},"end":{"line":49,"column":5}},"type":"if","locations":[{"start":{"line":47,"column":4},"end":{"line":49,"column":5}},{"start":{},"end":{}}],"line":47},"6":{"loc":{"start":{"line":52,"column":8},"end":{"line":60,"column":9}},"type":"if","locations":[{"start":{"line":52,"column":8},"end":{"line":60,"column":9}},{"start":{"line":55,"column":13},"end":{"line":60,"column":9}}],"line":52},"7":{"loc":{"start":{"line":55,"column":13},"end":{"line":60,"column":9}},"type":"if","locations":[{"start":{"line":55,"column":13},"end":{"line":60,"column":9}},{"start":{"line":58,"column":13},"end":{"line":60,"column":9}}],"line":55}},"s":{"0":1,"1":2,"2":1,"3":1,"4":1,"5":1,"6":2,"7":2,"8":2,"9":0,"10":2,"11":2,"12":2,"13":2,"14":2,"15":10,"16":3,"17":7,"18":5,"19":2},"f":{"0":2,"1":2,"2":10},"b":{"0":[1,1,1],"1":[1,1],"2":[2,2],"3":[0,2],"4":[2,0],"5":[2,0],"6":[3,7],"7":[5,2]},"inputSourceMap":{"version":3,"file":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/util/replace-links.ts","sources":["/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/util/replace-links.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;GAYG;;;;;AAgBH,+BA8BC;AA5CD,0FAA+D;AAC/D,gDAAuB;AAEvB;;;;;;;;;;GAUG;AACH,SAAwB,YAAY,CAAE,QAAgB,EAAE,UAAkB,EAAE,UAAkB;IAC5F,yEAAyE;IACzE,0EAA0E;IAC1E,+BAA+B;IAC/B,MAAM,mBAAmB,GAAG,cAAI,CAAC,QAAQ,CAAC,UAAU,EAAE,cAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAA;IAC/E,MAAM,mBAAmB,GAAG,cAAI,CAAC,QAAQ,CAAC,UAAU,EAAE,cAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAA;IAE/E,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,mBAAmB,CAAC,EAAE,CAAC;QAC9E,OAAO,QAAQ,CAAA;IACjB,CAAC;IAED,gDAAgD;IAChD,MAAM,MAAM,GAAG,gBAAgB,CAAA;IAC/B,qEAAqE;IACrE,wBAAwB;IACxB,MAAM,EAAE,WAAW,EAAE,OAAO,EAAE,GAAG,IAAA,kCAAsB,EAAC,QAAQ,CAAC,CAAA;IACjE,IAAI,WAAW,KAAK,IAAI,EAAE,CAAC;QACzB,MAAM,CAAC,SAAS,GAAG,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,CAAA;IAC9C,CAAC;IAED,4EAA4E;IAC5E,OAAO,QAAQ,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,OAAe,EAAE,EAAE;QACrD,IAAI,OAAO,KAAK,UAAU,EAAE,CAAC;YAC3B,OAAO,KAAK,UAAU,IAAI,CAAA;QAC5B,CAAC;aAAM,IAAI,OAAO,KAAK,mBAAmB,EAAE,CAAC;YAC3C,OAAO,KAAK,mBAAmB,IAAI,CAAA;QACrC,CAAC;aAAM,CAAC;YACN,OAAO,KAAK,OAAO,IAAI,CAAA;QACzB,CAAC;IACH,CAAC,CAAC,CAAA;AACJ,CAAC","sourcesContent":["/**\n * @ignore\n * BEGIN HEADER\n *\n * Contains:        Replace Links\n * CVM-Role:        Utility\n * Maintainer:      Hendrik Erz\n * License:         GNU GPL v3\n *\n * Description:     This function can replace a set of links across a file\n *\n * END HEADER\n */\n\nimport extractYamlFrontmatter from './extract-yaml-frontmatter'\nimport path from 'path'\n\n/**\n * Takes a Markdown document and replaces all occurrences of a link to\n * oldContent with links to newContent. NOTE: Do not remove the file extensions,\n * the function will do that for you!\n *\n * @param   {string}        markdown    The document in question\n * @param   {string}        oldContent  The link to be replaced.\n * @param   {string}        newContent  The new link contents\n *\n * @return  {string}                    The new document\n */\nexport default function replaceLinks (markdown: string, oldContent: string, newContent: string): string {\n  // Users can link both to `Zettelkasten.md` as well as to `Zettelkasten`.\n  // The \"withoutExtension\" vars will equal the arguments to the function if\n  // there is no extension given.\n  const oldWithoutExtension = path.basename(oldContent, path.extname(oldContent))\n  const newWithoutExtension = path.basename(newContent, path.extname(newContent))\n\n  if (!markdown.includes(oldContent) && !markdown.includes(oldWithoutExtension)) {\n    return markdown\n  }\n\n  // Finding (Wiki/Zettelkasten) links is easy ...\n  const linkRE = /\\[\\[(.+?)\\]\\]/g\n  // ... but we need to ensure we don't arbitrarily parse anything in a\n  // potential frontmatter\n  const { frontmatter, content } = extractYamlFrontmatter(markdown)\n  if (frontmatter !== null) {\n    linkRE.lastIndex = markdown.indexOf(content)\n  }\n\n  // After that precaution, it's a simple matter of going through the document\n  return markdown.replace(linkRE, (_, content: string) => {\n    if (content === oldContent) {\n      return `[[${newContent}]]`\n    } else if (content === oldWithoutExtension) {\n      return `[[${newWithoutExtension}]]`\n    } else {\n      return `[[${content}]]`\n    }\n  })\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"41ed222fcc74407720717fd6662f49c711cad0ff","contentHash":"2e9f273429e235c183ccd91a2b4b7051c1bdbd113a76627c491e17fc86a15613"},"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/util/replace-string-variables.ts":{"path":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/util/replace-string-variables.ts","statementMap":{"0":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"1":{"start":{"line":15,"column":0},"end":{"line":15,"column":41}},"2":{"start":{"line":16,"column":15},"end":{"line":16,"column":30}},"3":{"start":{"line":17,"column":16},"end":{"line":17,"column":32}},"4":{"start":{"line":28,"column":4},"end":{"line":30,"column":5}},"5":{"start":{"line":29,"column":8},"end":{"line":29,"column":37}},"6":{"start":{"line":33,"column":4},"end":{"line":44,"column":46}}},"fnMap":{"0":{"name":"replaceStringVariables","decl":{"start":{"line":26,"column":9},"end":{"line":26,"column":31}},"loc":{"start":{"line":26,"column":43},"end":{"line":45,"column":1}},"line":26}},"branchMap":{"0":{"loc":{"start":{"line":28,"column":4},"end":{"line":30,"column":5}},"type":"if","locations":[{"start":{"line":28,"column":4},"end":{"line":30,"column":5}},{"start":{},"end":{}}],"line":28}},"s":{"0":1,"1":1,"2":1,"3":1,"4":4,"5":0,"6":4},"f":{"0":4},"b":{"0":[0,4]},"inputSourceMap":{"version":3,"file":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/util/replace-string-variables.ts","sources":["/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/util/replace-string-variables.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;GAWG;;AAaH,yCAoBC;AA/BD,+BAAkC;AAClC,iCAAgC;AAEhC;;;;;;;GAOG;AACH,SAAwB,sBAAsB,CAAE,IAAY,EAAE,GAAc;IAC1E,uBAAuB;IACvB,IAAI,GAAG,KAAK,SAAS,EAAE,CAAC;QACtB,GAAG,GAAG,gBAAQ,CAAC,GAAG,EAAE,CAAA,CAAC,sBAAsB;IAC7C,CAAC;IAED,mEAAmE;IACnE,8FAA8F;IAC9F,OAAO,IAAI;SACR,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAG,eAAe;SACnD,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAE,eAAe;SACnD,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAE,gBAAgB;SACpD,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAE,cAAc;SAClD,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAE,mBAAmB;SACvD,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAE,kBAAkB;SACtD,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAE,iBAAiB;SACrD,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAE,iBAAiB;SACrD,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAG,2BAA2B;SAC/D,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,8BAA8B;SAClE,OAAO,CAAC,SAAS,EAAE,IAAA,SAAK,GAAE,CAAC,CAAA;AAChC,CAAC","sourcesContent":["/**\n * BEGIN HEADER\n *\n * Contains:        Utility function\n * CVM-Role:        <none>\n * Maintainer:      Hendrik Erz\n * License:         GNU GPL v3\n *\n * Description:     This file contains a utility function to replace certain variables.\n *\n * END HEADER\n */\n\nimport { v4 as uuid4 } from 'uuid'\nimport { DateTime } from 'luxon'\n\n/**\n * A utility function that can replace a bunch of variables in strings, used\n * for the pattern generators (ID and filename)\n *\n * @param   {string}    text  The input string\n * @param   {DateTime}  now   Optional, the timestamp, defaults to now\n * @return  {string}          The output string, with all %-variables replaced\n */\nexport default function replaceStringVariables (text: string, now?: DateTime): string {\n  // Get the current date\n  if (now === undefined) {\n    now = DateTime.now() // .setLocale('en-GB')\n  }\n\n  // Now generate the id by replacing all placeholders in the pattern\n  // cf. documentation for these: https://moment.github.io/luxon/#/formatting?id=table-of-tokens\n  return text\n    .replace(/%Y/g, now.toFormat('y'))   // 4-digit year\n    .replace(/%y/g, now.toFormat('yy'))  // 2-digit year\n    .replace(/%M/g, now.toFormat('LL'))  // 2-digit month\n    .replace(/%D/g, now.toFormat('dd'))  // 2-digit day\n    .replace(/%W/g, now.toFormat('WW'))  // 2-digit ISO week\n    .replace(/%h/g, now.toFormat('HH'))  // 2-digit 24-hour\n    .replace(/%m/g, now.toFormat('mm'))  // 2-digit minute\n    .replace(/%s/g, now.toFormat('ss'))  // 2-digit second\n    .replace(/%X/g, now.toFormat('X'))   // UNIX timestamp (seconds)\n    .replace(/%o/g, now.toFormat('ooo')) // 3-digit ordinal day of year\n    .replace(/%uuid4/g, uuid4())\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"03f03330765e8f751797ea39c4eaa05b512c506e","contentHash":"bd7abccbb18b1a70b0bc6767bb656926ea6efb6a19bcb785e1331f8601ef70c9"},"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/util/replace-tags.ts":{"path":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/util/replace-tags.ts","statementMap":{"0":{"start":{"line":15,"column":22},"end":{"line":17,"column":1}},"1":{"start":{"line":16,"column":4},"end":{"line":16,"column":62}},"2":{"start":{"line":18,"column":0},"end":{"line":18,"column":62}},"3":{"start":{"line":19,"column":0},"end":{"line":19,"column":30}},"4":{"start":{"line":20,"column":15},"end":{"line":20,"column":30}},"5":{"start":{"line":21,"column":35},"end":{"line":21,"column":89}},"6":{"start":{"line":22,"column":25},"end":{"line":22,"column":66}},"7":{"start":{"line":35,"column":4},"end":{"line":37,"column":5}},"8":{"start":{"line":36,"column":8},"end":{"line":36,"column":24}},"9":{"start":{"line":43,"column":37},"end":{"line":43,"column":86}},"10":{"start":{"line":44,"column":4},"end":{"line":62,"column":5}},"11":{"start":{"line":45,"column":34},"end":{"line":45,"column":78}},"12":{"start":{"line":46,"column":20},"end":{"line":46,"column":64}},"13":{"start":{"line":48,"column":21},"end":{"line":48,"column":108}},"14":{"start":{"line":49,"column":8},"end":{"line":61,"column":9}},"15":{"start":{"line":50,"column":12},"end":{"line":56,"column":13}},"16":{"start":{"line":51,"column":16},"end":{"line":55,"column":17}},"17":{"start":{"line":52,"column":46},"end":{"line":52,"column":56}},"18":{"start":{"line":54,"column":20},"end":{"line":54,"column":92}},"19":{"start":{"line":58,"column":12},"end":{"line":60,"column":13}},"20":{"start":{"line":59,"column":16},"end":{"line":59,"column":32}},"21":{"start":{"line":65,"column":16},"end":{"line":65,"column":61}},"22":{"start":{"line":66,"column":21},"end":{"line":66,"column":82}},"23":{"start":{"line":69,"column":28},"end":{"line":69,"column":45}},"24":{"start":{"line":70,"column":4},"end":{"line":78,"column":5}},"25":{"start":{"line":71,"column":8},"end":{"line":73,"column":9}},"26":{"start":{"line":72,"column":12},"end":{"line":72,"column":21}},"27":{"start":{"line":74,"column":23},"end":{"line":74,"column":54}},"28":{"start":{"line":75,"column":22},"end":{"line":75,"column":48}},"29":{"start":{"line":77,"column":8},"end":{"line":77,"column":74}},"30":{"start":{"line":79,"column":4},"end":{"line":79,"column":20}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":15,"column":56},"end":{"line":15,"column":57}},"loc":{"start":{"line":15,"column":71},"end":{"line":17,"column":1}},"line":15},"1":{"name":"replaceTags","decl":{"start":{"line":33,"column":9},"end":{"line":33,"column":20}},"loc":{"start":{"line":33,"column":47},"end":{"line":80,"column":1}},"line":33}},"branchMap":{"0":{"loc":{"start":{"line":15,"column":22},"end":{"line":17,"column":1}},"type":"binary-expr","locations":[{"start":{"line":15,"column":23},"end":{"line":15,"column":27}},{"start":{"line":15,"column":31},"end":{"line":15,"column":51}},{"start":{"line":15,"column":56},"end":{"line":17,"column":1}}],"line":15},"1":{"loc":{"start":{"line":16,"column":11},"end":{"line":16,"column":61}},"type":"cond-expr","locations":[{"start":{"line":16,"column":37},"end":{"line":16,"column":40}},{"start":{"line":16,"column":43},"end":{"line":16,"column":61}}],"line":16},"2":{"loc":{"start":{"line":16,"column":12},"end":{"line":16,"column":33}},"type":"binary-expr","locations":[{"start":{"line":16,"column":12},"end":{"line":16,"column":15}},{"start":{"line":16,"column":19},"end":{"line":16,"column":33}}],"line":16},"3":{"loc":{"start":{"line":35,"column":4},"end":{"line":37,"column":5}},"type":"if","locations":[{"start":{"line":35,"column":4},"end":{"line":37,"column":5}},{"start":{},"end":{}}],"line":35},"4":{"loc":{"start":{"line":44,"column":4},"end":{"line":62,"column":5}},"type":"if","locations":[{"start":{"line":44,"column":4},"end":{"line":62,"column":5}},{"start":{},"end":{}}],"line":44},"5":{"loc":{"start":{"line":48,"column":21},"end":{"line":48,"column":108}},"type":"cond-expr","locations":[{"start":{"line":48,"column":82},"end":{"line":48,"column":84}},{"start":{"line":48,"column":87},"end":{"line":48,"column":108}}],"line":48},"6":{"loc":{"start":{"line":48,"column":21},"end":{"line":48,"column":79}},"type":"binary-expr","locations":[{"start":{"line":48,"column":21},"end":{"line":48,"column":62}},{"start":{"line":48,"column":66},"end":{"line":48,"column":79}}],"line":48},"7":{"loc":{"start":{"line":49,"column":8},"end":{"line":61,"column":9}},"type":"if","locations":[{"start":{"line":49,"column":8},"end":{"line":61,"column":9}},{"start":{},"end":{}}],"line":49},"8":{"loc":{"start":{"line":49,"column":12},"end":{"line":49,"column":64}},"type":"binary-expr","locations":[{"start":{"line":49,"column":12},"end":{"line":49,"column":30}},{"start":{"line":49,"column":34},"end":{"line":49,"column":64}}],"line":49},"9":{"loc":{"start":{"line":51,"column":16},"end":{"line":55,"column":17}},"type":"if","locations":[{"start":{"line":51,"column":16},"end":{"line":55,"column":17}},{"start":{},"end":{}}],"line":51},"10":{"loc":{"start":{"line":58,"column":12},"end":{"line":60,"column":13}},"type":"if","locations":[{"start":{"line":58,"column":12},"end":{"line":60,"column":13}},{"start":{},"end":{}}],"line":58},"11":{"loc":{"start":{"line":71,"column":8},"end":{"line":73,"column":9}},"type":"if","locations":[{"start":{"line":71,"column":8},"end":{"line":73,"column":9}},{"start":{},"end":{}}],"line":71},"12":{"loc":{"start":{"line":77,"column":29},"end":{"line":77,"column":64}},"type":"cond-expr","locations":[{"start":{"line":77,"column":47},"end":{"line":77,"column":49}},{"start":{"line":77,"column":52},"end":{"line":77,"column":64}}],"line":77}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":4,"8":0,"9":4,"10":4,"11":4,"12":4,"13":4,"14":4,"15":4,"16":8,"17":4,"18":4,"19":4,"20":2,"21":2,"22":2,"23":2,"24":2,"25":4,"26":2,"27":2,"28":2,"29":2,"30":2},"f":{"0":1,"1":4},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1],"3":[0,4],"4":[4,0],"5":[4,0],"6":[4,4],"7":[4,0],"8":[4,4],"9":[4,4],"10":[2,2],"11":[2,2],"12":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/util/replace-tags.ts","sources":["/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/util/replace-tags.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;GAYG;;;;;AAiBH,8BAsDC;AArED,+BAA6C;AAC7C,0FAA+D;AAC/D,mEAA+E;AAG/E;;;;;;;;;GASG;AACH,SAAwB,WAAW,CAAE,QAAgB,EAAE,MAAc,EAAE,MAAc;;IACnF,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC;QAC/B,OAAO,QAAQ,CAAA;IACjB,CAAC;IAED,4EAA4E;IAC5E,oDAAoD;IACpD,sEAAsE;IACtE,6EAA6E;IAC7E,mFAAmF;IACnF,MAAM,EAAE,WAAW,EAAE,OAAO,EAAE,GAAG,IAAA,kCAAsB,EAAC,QAAQ,CAAC,CAAA;IAEjE,IAAI,WAAW,KAAK,IAAI,EAAE,CAAC;QACzB,MAAM,iBAAiB,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAA;QACtE,MAAM,GAAG,GAAG,IAAA,oBAAa,EAAC,iBAAiB,CAAC,CAAA;QAC5C,0CAA0C;QAC1C,MAAM,IAAI,GAAG,MAAA,GAAG,CAAC,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,mCAAI,GAAG,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,CAAA;QAE/D,IAAI,IAAI,KAAK,SAAS,IAAI,IAAI,YAAY,cAAO,EAAE,CAAC;YAClD,KAAK,MAAM,IAAI,IAAI,IAAI,CAAC,KAAK,EAAE,CAAC;gBAC9B,IAAI,IAAI,CAAC,KAAK,KAAK,MAAM,EAAE,CAAC;oBAC1B,MAAM,CAAE,KAAK,EAAE,QAAQ,CAAE,GAAG,IAAI,CAAC,KAAK,CAAA;oBACtC,6BAA6B;oBAC7B,QAAQ,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,GAAG,MAAM,GAAG,QAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAA;gBACzE,CAAC;YACH,CAAC;YAED,wDAAwD;YACxD,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC;gBACtB,OAAO,QAAQ,CAAA;YACjB,CAAC;QACH,CAAC;IACH,CAAC;IAED,6EAA6E;IAC7E,iCAAiC;IACjC,MAAM,GAAG,GAAG,IAAA,8BAAa,EAAC,QAAQ,CAAC,CAAA;IACnC,MAAM,QAAQ,GAAG,IAAA,gCAAe,EAAC,GAAG,EAAE,iBAAiB,CAAsB,CAAA;IAE7E,6EAA6E;IAC7E,8EAA8E;IAC9E,MAAM,eAAe,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;IACzC,KAAK,MAAM,OAAO,IAAI,QAAQ,CAAC,OAAO,EAAE,EAAE,CAAC;QACzC,IAAI,OAAO,CAAC,KAAK,KAAK,MAAM,EAAE,CAAC;YAC7B,SAAQ;QACV,CAAC;QAED,MAAM,MAAM,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,OAAO,CAAC,IAAI,CAAC,CAAA;QAC9C,MAAM,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC,CAAA;QACxC,iEAAiE;QACjE,QAAQ,GAAG,MAAM,GAAG,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,MAAM,EAAE,CAAC,GAAG,KAAK,CAAA;IACnE,CAAC;IAED,OAAO,QAAQ,CAAA;AACjB,CAAC","sourcesContent":["/**\n * @ignore\n * BEGIN HEADER\n *\n * Contains:        Replace Tags\n * CVM-Role:        Utility\n * Maintainer:      Hendrik Erz\n * License:         GNU GPL v3\n *\n * Description:     This function can replace a set of tags across a file\n *\n * END HEADER\n */\n\nimport { parseDocument, YAMLSeq } from 'yaml'\nimport extractYamlFrontmatter from './extract-yaml-frontmatter'\nimport { extractASTNodes, markdownToAST } from '@common/modules/markdown-utils'\nimport type { ZettelkastenTag } from '@common/modules/markdown-utils/markdown-ast'\n\n/**\n * Takes a Markdown document and replaces all occurrences of oldTag with newTag.\n * Returns the new document after replacing.\n *\n * @param   {string}        markdown  The document in question\n * @param   {string}        oldTag    The old tag to be replaced\n * @param   {string}        newTag    The new tag to replace the old one\n *\n * @return  {string}                  The new document\n */\nexport default function replaceTags (markdown: string, oldTag: string, newTag: string): string {\n  if (!markdown.includes(oldTag)) {\n    return markdown\n  }\n\n  // Since tags can occur in a frontmatter as well as in the document text, we\n  // have the following combinations of possibilities:\n  // 1. If the oldTag contains spaces --> Can only be in the frontmatter\n  // 2. No spaces at all --> Can occur anywhere and has to be replaced anywhere\n  // 3. Only newTag has spaces --> Remove oldTag from text, add newTag to frontmatter\n  const { frontmatter, content } = extractYamlFrontmatter(markdown)\n\n  if (frontmatter !== null) {\n    const stringFrontmatter = markdown.slice(0, markdown.indexOf(content))\n    const ast = parseDocument(stringFrontmatter)\n    // Now, find the keywords or tags-property\n    const prop = ast.get('keywords', true) ?? ast.get('tags', true)\n\n    if (prop !== undefined && prop instanceof YAMLSeq) {\n      for (const item of prop.items) {\n        if (item.value === oldTag) {\n          const [ start, valueEnd ] = item.range\n          // Slice the correct position\n          markdown = markdown.slice(0, start) + newTag + markdown.slice(valueEnd)\n        }\n      }\n\n      // If the old tag contained a space, we are already done\n      if (/\\s/.test(oldTag)) {\n        return markdown\n      }\n    }\n  }\n\n  // Now, we can do a much simpler approach to replacing the tag in the rest of\n  // the content with simple RegEx.\n  const ast = markdownToAST(markdown)\n  const tagNodes = extractASTNodes(ast, 'ZettelkastenTag') as ZettelkastenTag[]\n\n  // Please NOTE that we are reversing the tagNodes array so that the positions\n  // of the tags in the new document remain valid, even after replacing the tags\n  const newTagHasSpaces = /\\s/.test(newTag)\n  for (const tagNode of tagNodes.reverse()) {\n    if (tagNode.value !== oldTag) {\n      continue\n    }\n\n    const before = markdown.slice(0, tagNode.from)\n    const after = markdown.slice(tagNode.to)\n    // If the new tag contains spaces, we have to remove the tag here\n    markdown = before + (newTagHasSpaces ? '' : `#${newTag}`) + after\n  }\n\n  return markdown\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"6e0cc25f3abe04830dde19fe01a954e5a6705cd7","contentHash":"536f3b5b131011ba60aec86f039ad79edec13b93eb81e6d42174b1b44f0cfdbb"},"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/util/safe-assign.ts":{"path":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/util/safe-assign.ts","statementMap":{"0":{"start":{"line":20,"column":0},"end":{"line":20,"column":62}},"1":{"start":{"line":21,"column":0},"end":{"line":21,"column":29}},"2":{"start":{"line":41,"column":4},"end":{"line":65,"column":5}},"3":{"start":{"line":42,"column":8},"end":{"line":64,"column":9}},"4":{"start":{"line":47,"column":12},"end":{"line":59,"column":13}},"5":{"start":{"line":51,"column":16},"end":{"line":51,"column":37}},"6":{"start":{"line":54,"column":16},"end":{"line":54,"column":78}},"7":{"start":{"line":58,"column":16},"end":{"line":58,"column":44}},"8":{"start":{"line":63,"column":12},"end":{"line":63,"column":52}},"9":{"start":{"line":67,"column":4},"end":{"line":67,"column":21}}},"fnMap":{"0":{"name":"safeAssign","decl":{"start":{"line":39,"column":9},"end":{"line":39,"column":19}},"loc":{"start":{"line":39,"column":58},"end":{"line":68,"column":1}},"line":39}},"branchMap":{"0":{"loc":{"start":{"line":39,"column":42},"end":{"line":39,"column":56}},"type":"default-arg","locations":[{"start":{"line":39,"column":54},"end":{"line":39,"column":56}}],"line":39},"1":{"loc":{"start":{"line":42,"column":8},"end":{"line":64,"column":9}},"type":"if","locations":[{"start":{"line":42,"column":8},"end":{"line":64,"column":9}},{"start":{"line":61,"column":13},"end":{"line":64,"column":9}}],"line":42},"2":{"loc":{"start":{"line":47,"column":12},"end":{"line":59,"column":13}},"type":"if","locations":[{"start":{"line":47,"column":12},"end":{"line":59,"column":13}},{"start":{"line":56,"column":17},"end":{"line":59,"column":13}}],"line":47},"3":{"loc":{"start":{"line":47,"column":16},"end":{"line":49,"column":46}},"type":"binary-expr","locations":[{"start":{"line":47,"column":16},"end":{"line":47,"column":57}},{"start":{"line":48,"column":16},"end":{"line":48,"column":53}},{"start":{"line":49,"column":16},"end":{"line":49,"column":46}}],"line":47}},"s":{"0":1,"1":1,"2":8,"3":15,"4":13,"5":3,"6":3,"7":10,"8":2,"9":8},"f":{"0":8},"b":{"0":[5],"1":[13,2],"2":[3,10],"3":[13,6,3]},"inputSourceMap":{"version":3,"file":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/util/safe-assign.ts","sources":["/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/util/safe-assign.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;;;;GAiBG;;AAmBH,6BA4BC;AA7CD;;;;;;;;;;;;;;;;GAgBG;AACH,SAAwB,UAAU,CAAqB,GAAe,EAAE,eAAkB,EAAE,YAAwB,EAAE;IACpH,iDAAiD;IACjD,KAAK,MAAM,IAAI,IAAI,eAAe,EAAE,CAAC;QACnC,IAAI,IAAI,IAAI,GAAG,EAAE,CAAC;YAChB,wEAAwE;YACxE,gEAAgE;YAChE,wDAAwD;YACxD,8BAA8B;YAC9B,IAAI,OAAO,eAAe,CAAC,IAAI,CAAC,KAAK,QAAQ;gBAC3C,CAAC,KAAK,CAAC,OAAO,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;gBACrC,eAAe,CAAC,IAAI,CAAC,KAAK,IAAI,EAAE,CAAC;gBACjC,kEAAkE;gBAClE,SAAS,CAAC,IAAI,CAAC,GAAG,EAAE,CAAA;gBACpB,mEAAmE;gBACnE,wDAAwD;gBACxD,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,eAAe,CAAC,IAAI,CAAC,EAAE,SAAS,CAAC,IAAI,CAAC,CAAC,CAAA;YAC/D,CAAC;iBAAM,CAAC;gBACN,uBAAuB;gBACvB,SAAS,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,CAAA;YAC7B,CAAC;QACH,CAAC;aAAM,CAAC;YACN,qEAAqE;YACrE,SAAS,CAAC,IAAI,CAAC,GAAG,eAAe,CAAC,IAAI,CAAC,CAAA;QACzC,CAAC;IACH,CAAC;IAED,8CAA8C;IAC9C,OAAO,SAAc,CAAA;AACvB,CAAC","sourcesContent":["/**\n * BEGIN HEADER\n *\n * Contains:        Utility function\n * CVM-Role:        <none>\n * Maintainer:      Hendrik Erz\n * License:         GNU GPL v3\n *\n * Description:     This file contains a function that can be used to safely\n *                  assign object values, that is: you pass a reference\n *                  object, and some other object. What will be returned is a\n *                  new object that contains all fields from the reference, but\n *                  does not include any \"invalid\" fields that were only\n *                  present on the passed object, but not on the reference.\n *                  This also supports nested objects.\n *\n * END HEADER\n */\n\n/**\n * Merges an object with a reference, creating a new object that will contain\n * all properties of `referenceObject`. The value of those properties will\n * either be taken from the object, if it possesses that property, or from the\n * `referenceObject` otherwise.\n *\n * @param  {Partial<A>}  obj              The object with property values to be\n *                                        merged.\n * @param  {A}           referenceObject  The reference to use the properties\n *                                        and default values from.\n * @param  {Partial<A>}  newObject        DO NOT USE -- INTERNAL! The new object\n *                                        to be returned.\n *\n * @return {A}                            The cloned object with properties of\n *                                        `referenceObject` with values of `obj`\n *                                        merged in.\n */\nexport default function safeAssign <A extends object> (obj: Partial<A>, referenceObject: A, newObject: Partial<A> = {}): A {\n  // Iterate over all properties of referenceObject\n  for (const prop in referenceObject) {\n    if (prop in obj) {\n      // The object has the property, so now we have to decide over two cases:\n      // either it's a sub-object --> in this case we'll have to apply\n      // recursively. We perform an explicit null-check, since\n      // `typeof null === 'object'`.\n      if (typeof referenceObject[prop] === 'object' &&\n        !Array.isArray(referenceObject[prop]) &&\n        referenceObject[prop] !== null) {\n        // @ts-expect-error These properties will be filled in recursively\n        newObject[prop] = {}\n        // @ts-expect-error TypeScript wouldn't not treat this as an error.\n        // (To be fair, we do violence to the type system here.)\n        safeAssign(obj[prop], referenceObject[prop], newObject[prop])\n      } else {\n        // Assign the primitive\n        newObject[prop] = obj[prop]\n      }\n    } else {\n      // `obj` doesn't have prop, so take the value from reference instead.\n      newObject[prop] = referenceObject[prop]\n    }\n  }\n\n  // Type-cast, since now newObject is of type A\n  return newObject as A\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"6636f4f98a4e4a1b333808ff3449e06768ae7554","contentHash":"739b3f9236ead0564f2f9df0dfc6c4296683f85991476b933aced6b449a353d7"},"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/util/shorten-url-visually.ts":{"path":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/util/shorten-url-visually.ts","statementMap":{"0":{"start":{"line":17,"column":0},"end":{"line":17,"column":62}},"1":{"start":{"line":18,"column":0},"end":{"line":18,"column":48}},"2":{"start":{"line":37,"column":4},"end":{"line":37,"column":40}},"3":{"start":{"line":38,"column":4},"end":{"line":40,"column":5}},"4":{"start":{"line":39,"column":8},"end":{"line":39,"column":19}},"5":{"start":{"line":41,"column":4},"end":{"line":69,"column":5}},"6":{"start":{"line":42,"column":26},"end":{"line":42,"column":38}},"7":{"start":{"line":47,"column":13},"end":{"line":47,"column":22}},"8":{"start":{"line":48,"column":8},"end":{"line":63,"column":9}},"9":{"start":{"line":49,"column":12},"end":{"line":49,"column":37}},"10":{"start":{"line":51,"column":13},"end":{"line":63,"column":9}},"11":{"start":{"line":53,"column":12},"end":{"line":53,"column":49}},"12":{"start":{"line":55,"column":13},"end":{"line":63,"column":9}},"13":{"start":{"line":57,"column":30},"end":{"line":57,"column":57}},"14":{"start":{"line":58,"column":12},"end":{"line":58,"column":64}},"15":{"start":{"line":62,"column":12},"end":{"line":62,"column":48}},"16":{"start":{"line":67,"column":21},"end":{"line":67,"column":46}},"17":{"start":{"line":68,"column":8},"end":{"line":68,"column":59}}},"fnMap":{"0":{"name":"shortenUrlVisually","decl":{"start":{"line":34,"column":9},"end":{"line":34,"column":27}},"loc":{"start":{"line":34,"column":49},"end":{"line":70,"column":1}},"line":34}},"branchMap":{"0":{"loc":{"start":{"line":34,"column":33},"end":{"line":34,"column":47}},"type":"default-arg","locations":[{"start":{"line":34,"column":45},"end":{"line":34,"column":47}}],"line":34},"1":{"loc":{"start":{"line":38,"column":4},"end":{"line":40,"column":5}},"type":"if","locations":[{"start":{"line":38,"column":4},"end":{"line":40,"column":5}},{"start":{},"end":{}}],"line":38},"2":{"loc":{"start":{"line":48,"column":8},"end":{"line":63,"column":9}},"type":"if","locations":[{"start":{"line":48,"column":8},"end":{"line":63,"column":9}},{"start":{"line":51,"column":13},"end":{"line":63,"column":9}}],"line":48},"3":{"loc":{"start":{"line":51,"column":13},"end":{"line":63,"column":9}},"type":"if","locations":[{"start":{"line":51,"column":13},"end":{"line":63,"column":9}},{"start":{"line":55,"column":13},"end":{"line":63,"column":9}}],"line":51},"4":{"loc":{"start":{"line":51,"column":17},"end":{"line":51,"column":91}},"type":"binary-expr","locations":[{"start":{"line":51,"column":17},"end":{"line":51,"column":63}},{"start":{"line":51,"column":67},"end":{"line":51,"column":91}}],"line":51},"5":{"loc":{"start":{"line":55,"column":13},"end":{"line":63,"column":9}},"type":"if","locations":[{"start":{"line":55,"column":13},"end":{"line":63,"column":9}},{"start":{"line":60,"column":13},"end":{"line":63,"column":9}}],"line":55}},"s":{"0":1,"1":1,"2":2,"3":2,"4":0,"5":2,"6":2,"7":2,"8":2,"9":1,"10":1,"11":0,"12":1,"13":1,"14":1,"15":0,"16":0,"17":0},"f":{"0":2},"b":{"0":[2],"1":[0,2],"2":[1,1],"3":[0,1],"4":[1,0],"5":[1,0]},"inputSourceMap":{"version":3,"file":"/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/util/shorten-url-visually.ts","sources":["/Users/egrembocki/Documents/school/FA24/SWENG431/Zettlr-sweng431/source/common/util/shorten-url-visually.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;AAiBH,gDAmCC;AAlDD;;;;;;;;;;;;;;GAcG;AACH,SAAgB,kBAAkB,CAAE,GAAW,EAAE,YAAoB,EAAE;IACrE,6EAA6E;IAC7E,cAAc;IACd,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,UAAU,EAAE,IAAI,CAAC,CAAA;IACnC,IAAI,GAAG,CAAC,MAAM,IAAI,SAAS,EAAE,CAAC;QAC5B,OAAO,GAAG,CAAA;IACZ,CAAC;IAED,IAAI,CAAC;QACH,MAAM,SAAS,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAA;QAC9B,MAAM,EACJ,MAAM,EAAE,0BAA0B;QAClC,QAAQ,EAAE,kBAAkB;QAC5B,QAAQ,EAAE,oBAAoB;QAC9B,QAAQ,CAAC,SAAS;UACnB,GAAG,SAAS,CAAA;QAEb,IAAI,MAAM,CAAC,MAAM,GAAG,QAAQ,CAAC,MAAM,IAAI,SAAS,EAAE,CAAC;YACjD,OAAO,MAAM,GAAG,QAAQ,CAAA;QAC1B,CAAC;aAAM,IAAI,QAAQ,CAAC,MAAM,GAAG,QAAQ,CAAC,MAAM,IAAI,SAAS,IAAI,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC;YACtF,6CAA6C;YAC7C,OAAO,SAAS,CAAC,QAAQ,GAAG,QAAQ,CAAA;QACtC,CAAC;aAAM,IAAI,QAAQ,CAAC,MAAM,GAAG,SAAS,EAAE,CAAC;YACvC,uBAAuB;YACvB,MAAM,SAAS,GAAG,SAAS,GAAG,QAAQ,CAAC,MAAM,CAAA;YAC7C,OAAO,QAAQ,GAAG,IAAI,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,CAAA;QACrD,CAAC;aAAM,CAAC;YACN,uEAAuE;YACvE,OAAO,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,SAAS,CAAC,CAAA;QACrC,CAAC;IACH,CAAC;IAAC,OAAO,GAAQ,EAAE,CAAC;QAClB,4BAA4B;QAC5B,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,CAAC,CAAC,CAAA;QACtC,OAAO,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAA;IACpD,CAAC;AACH,CAAC","sourcesContent":["/**\n * @ignore\n * BEGIN HEADER\n *\n * Contains:        Visual URL shortener\n * CVM-Role:        Utility Function\n * Maintainer:      Hendrik Erz\n * License:         GNU GPL v3\n *\n * Description:     This function does its best to properly shorten the given\n *                  URL visually so that it fits within, e.g., a fixed-width\n *                  container\n *\n * END HEADER\n */\n\n/**\n * Takes a long URL and shortens it as best as possible so that it can be\n * presented with as much information as possible to the user given the length\n * requirement (default: 80 characters). If url is shorter than that, the\n * function returns the url unchanged, if it's a valid URL, it will try various\n * heuristics to shorten the URL without hiding too much information on the\n * origin of the URL, and if it's not a valid URL, it will return a possibly\n * improperly truncated URL.\n *\n * @param  {string}  url        The URL to shorten\n * @param  {number}  maxLength  The maximum number of characters for the\n *                              shortened URL\n *\n * @return {string}             The URL in a way that fits maxLength\n */\nexport function shortenUrlVisually (url: string, maxLength: number = 80): string {\n  // Plain links need to be surrounded by <>, so we can definitely remove those\n  // if present.\n  url = url.replace(/^<(.+)>$/, '$1')\n  if (url.length <= maxLength) {\n    return url\n  }\n\n  try {\n    const parsedUrl = new URL(url)\n    const {\n      origin, // https://www.example.com\n      hostname, // www.example.com\n      pathname, // /some/subsite.php\n      protocol // https:\n    } = parsedUrl\n\n    if (origin.length + pathname.length <= maxLength) {\n      return origin + pathname\n    } else if (hostname.length + pathname.length <= maxLength && /https?:/.test(protocol)) {\n      // Only hostname works, and protocol is known\n      return parsedUrl.hostname + pathname\n    } else if (hostname.length < maxLength) {\n      // Truncate path length\n      const remaining = maxLength - hostname.length\n      return hostname + '/…' + pathname.slice(-remaining)\n    } else {\n      // We cannot really accommodate maxLength, so just do a brutal truncate\n      return hostname.slice(0, maxLength)\n    }\n  } catch (err: any) {\n    // Fallback: Not a valid URL\n    const half = Math.floor(maxLength / 2)\n    return url.slice(0, half) + '…' + url.slice(-half)\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"2d24a887a3382a7a35e1910979f12e95d8eb58b7","contentHash":"d5b279f3e4dd48ddd918a516840e121bdec6b869978482bbad8d585fa87d3898"}}